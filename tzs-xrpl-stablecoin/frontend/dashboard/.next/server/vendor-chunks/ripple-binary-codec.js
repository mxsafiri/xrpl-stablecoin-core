"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ripple-binary-codec";
exports.ids = ["vendor-chunks/ripple-binary-codec"];
exports.modules = {

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/binary.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* eslint-disable func-style */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.transactionID = exports.sha512Half = exports.binaryToJSON = exports.signingClaimData = exports.signingData = exports.multiSigningData = exports.readJSON = exports.serializeObject = exports.makeParser = exports.BytesList = exports.BinarySerializer = exports.BinaryParser = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\");\nconst binary_parser_1 = __webpack_require__(/*! ./serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nObject.defineProperty(exports, \"BinaryParser\", ({ enumerable: true, get: function () { return binary_parser_1.BinaryParser; } }));\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ./serdes/binary-serializer */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nObject.defineProperty(exports, \"BinarySerializer\", ({ enumerable: true, get: function () { return binary_serializer_1.BinarySerializer; } }));\nObject.defineProperty(exports, \"BytesList\", ({ enumerable: true, get: function () { return binary_serializer_1.BytesList; } }));\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js\");\nObject.defineProperty(exports, \"sha512Half\", ({ enumerable: true, get: function () { return hashes_1.sha512Half; } }));\nObject.defineProperty(exports, \"transactionID\", ({ enumerable: true, get: function () { return hashes_1.transactionID; } }));\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst bigInt = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\n/**\n * Construct a BinaryParser\n *\n * @param bytes hex-string to construct BinaryParser from\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns A BinaryParser\n */\nconst makeParser = (bytes, definitions) => new binary_parser_1.BinaryParser(bytes, definitions);\nexports.makeParser = makeParser;\n/**\n * Parse BinaryParser into JSON\n *\n * @param parser BinaryParser object\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON for the bytes in the BinaryParser\n */\nconst readJSON = (parser, definitions = enums_1.DEFAULT_DEFINITIONS) => parser.readType(types_1.coreTypes.STObject).toJSON(definitions);\nexports.readJSON = readJSON;\n/**\n * Parse a hex-string into its JSON interpretation\n *\n * @param bytes hex-string to parse into JSON\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON\n */\nconst binaryToJSON = (bytes, definitions) => readJSON(makeParser(bytes, definitions), definitions);\nexports.binaryToJSON = binaryToJSON;\n/**\n * Function to serialize JSON object representing a transaction\n *\n * @param object JSON object to serialize\n * @param opts options for serializing, including optional prefix, suffix, signingFieldOnly, and definitions\n * @returns A Buffer containing the serialized object\n */\nfunction serializeObject(object, opts = {}) {\n    const { prefix, suffix, signingFieldsOnly = false, definitions } = opts;\n    const bytesList = new binary_serializer_1.BytesList();\n    if (prefix) {\n        bytesList.put(prefix);\n    }\n    const filter = signingFieldsOnly\n        ? (f) => f.isSigningField\n        : undefined;\n    types_1.coreTypes.STObject\n        .from(object, filter, definitions)\n        .toBytesSink(bytesList);\n    if (suffix) {\n        bytesList.put(suffix);\n    }\n    return bytesList.toBytes();\n}\nexports.serializeObject = serializeObject;\n/**\n * Serialize an object for signing\n *\n * @param transaction Transaction to serialize\n * @param prefix Prefix bytes to put before the serialized object\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns A Buffer with the serialized object\n */\nfunction signingData(transaction, prefix = hash_prefixes_1.HashPrefix.transactionSig, opts = {}) {\n    return serializeObject(transaction, {\n        prefix,\n        signingFieldsOnly: true,\n        definitions: opts.definitions,\n    });\n}\nexports.signingData = signingData;\n/**\n * Serialize a signingClaim\n *\n * @param claim A claim object to serialize\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the serialized object with appropriate prefix\n */\nfunction signingClaimData(claim) {\n    const num = bigInt(String(claim.amount));\n    const prefix = hash_prefixes_1.HashPrefix.paymentChannelClaim;\n    const channel = types_1.coreTypes.Hash256.from(claim.channel).toBytes();\n    const amount = types_1.coreTypes.UInt64.from(num).toBytes();\n    const bytesList = new binary_serializer_1.BytesList();\n    bytesList.put(prefix);\n    bytesList.put(channel);\n    bytesList.put(amount);\n    return bytesList.toBytes();\n}\nexports.signingClaimData = signingClaimData;\n/**\n * Serialize a transaction object for multiSigning\n *\n * @param transaction transaction to serialize\n * @param signingAccount Account to sign the transaction with\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns serialized transaction with appropriate prefix and suffix\n */\nfunction multiSigningData(transaction, signingAccount, opts = {\n    definitions: enums_1.DEFAULT_DEFINITIONS,\n}) {\n    const prefix = hash_prefixes_1.HashPrefix.transactionMultiSig;\n    const suffix = types_1.coreTypes.AccountID.from(signingAccount).toBytes();\n    return serializeObject(transaction, {\n        prefix,\n        suffix,\n        signingFieldsOnly: true,\n        definitions: opts.definitions,\n    });\n}\nexports.multiSigningData = multiSigningData;\n//# sourceMappingURL=binary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/binary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/coretypes.js":
/*!************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/coretypes.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.types = exports.ShaMap = exports.HashPrefix = exports.quality = exports.TransactionResult = exports.Type = exports.LedgerEntryType = exports.TransactionType = exports.Field = exports.DEFAULT_DEFINITIONS = exports.ledgerHashes = exports.binary = exports.hashes = void 0;\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nObject.defineProperty(exports, \"DEFAULT_DEFINITIONS\", ({ enumerable: true, get: function () { return enums_1.DEFAULT_DEFINITIONS; } }));\nObject.defineProperty(exports, \"Field\", ({ enumerable: true, get: function () { return enums_1.Field; } }));\nObject.defineProperty(exports, \"TransactionType\", ({ enumerable: true, get: function () { return enums_1.TransactionType; } }));\nObject.defineProperty(exports, \"LedgerEntryType\", ({ enumerable: true, get: function () { return enums_1.LedgerEntryType; } }));\nObject.defineProperty(exports, \"Type\", ({ enumerable: true, get: function () { return enums_1.Type; } }));\nObject.defineProperty(exports, \"TransactionResult\", ({ enumerable: true, get: function () { return enums_1.TransactionResult; } }));\nconst types = __importStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\"));\nexports.types = types;\nconst binary = __importStar(__webpack_require__(/*! ./binary */ \"(ssr)/./node_modules/ripple-binary-codec/dist/binary.js\"));\nexports.binary = binary;\nconst shamap_1 = __webpack_require__(/*! ./shamap */ \"(ssr)/./node_modules/ripple-binary-codec/dist/shamap.js\");\nObject.defineProperty(exports, \"ShaMap\", ({ enumerable: true, get: function () { return shamap_1.ShaMap; } }));\nconst ledgerHashes = __importStar(__webpack_require__(/*! ./ledger-hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/ledger-hashes.js\"));\nexports.ledgerHashes = ledgerHashes;\nconst hashes = __importStar(__webpack_require__(/*! ./hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js\"));\nexports.hashes = hashes;\nconst quality_1 = __webpack_require__(/*! ./quality */ \"(ssr)/./node_modules/ripple-binary-codec/dist/quality.js\");\nObject.defineProperty(exports, \"quality\", ({ enumerable: true, get: function () { return quality_1.quality; } }));\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nObject.defineProperty(exports, \"HashPrefix\", ({ enumerable: true, get: function () { return hash_prefixes_1.HashPrefix; } }));\n//# sourceMappingURL=coretypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2NvcmV0eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLGNBQWMsR0FBRyxrQkFBa0IsR0FBRyxlQUFlLEdBQUcseUJBQXlCLEdBQUcsWUFBWSxHQUFHLHVCQUF1QixHQUFHLHVCQUF1QixHQUFHLGFBQWEsR0FBRywyQkFBMkIsR0FBRyxvQkFBb0IsR0FBRyxjQUFjLEdBQUcsY0FBYztBQUMzUSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBUztBQUNqQyx1REFBc0QsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUM7QUFDckkseUNBQXdDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQ3pHLG1EQUFrRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUM3SCxtREFBa0QsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDN0gsd0NBQXVDLEVBQUUscUNBQXFDLHdCQUF3QixFQUFDO0FBQ3ZHLHFEQUFvRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUNqSSwyQkFBMkIsbUJBQU8sQ0FBQyw2RUFBUztBQUM1QyxhQUFhO0FBQ2IsNEJBQTRCLG1CQUFPLENBQUMseUVBQVU7QUFDOUMsY0FBYztBQUNkLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFVO0FBQ25DLDBDQUF5QyxFQUFFLHFDQUFxQywyQkFBMkIsRUFBQztBQUM1RyxrQ0FBa0MsbUJBQU8sQ0FBQyx1RkFBaUI7QUFDM0Qsb0JBQW9CO0FBQ3BCLDRCQUE0QixtQkFBTyxDQUFDLHlFQUFVO0FBQzlDLGNBQWM7QUFDZCxrQkFBa0IsbUJBQU8sQ0FBQywyRUFBVztBQUNyQywyQ0FBMEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDL0csd0JBQXdCLG1CQUFPLENBQUMsdUZBQWlCO0FBQ2pELDhDQUE2QyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUMzSCIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2NvcmV0eXBlcy5qcz9jMjNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnR5cGVzID0gZXhwb3J0cy5TaGFNYXAgPSBleHBvcnRzLkhhc2hQcmVmaXggPSBleHBvcnRzLnF1YWxpdHkgPSBleHBvcnRzLlRyYW5zYWN0aW9uUmVzdWx0ID0gZXhwb3J0cy5UeXBlID0gZXhwb3J0cy5MZWRnZXJFbnRyeVR5cGUgPSBleHBvcnRzLlRyYW5zYWN0aW9uVHlwZSA9IGV4cG9ydHMuRmllbGQgPSBleHBvcnRzLkRFRkFVTFRfREVGSU5JVElPTlMgPSBleHBvcnRzLmxlZGdlckhhc2hlcyA9IGV4cG9ydHMuYmluYXJ5ID0gZXhwb3J0cy5oYXNoZXMgPSB2b2lkIDA7XG5jb25zdCBlbnVtc18xID0gcmVxdWlyZShcIi4vZW51bXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJERUZBVUxUX0RFRklOSVRJT05TXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbnVtc18xLkRFRkFVTFRfREVGSU5JVElPTlM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaWVsZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW51bXNfMS5GaWVsZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zYWN0aW9uVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW51bXNfMS5UcmFuc2FjdGlvblR5cGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMZWRnZXJFbnRyeVR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVudW1zXzEuTGVkZ2VyRW50cnlUeXBlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW51bXNfMS5UeXBlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNhY3Rpb25SZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVudW1zXzEuVHJhbnNhY3Rpb25SZXN1bHQ7IH0gfSk7XG5jb25zdCB0eXBlcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSk7XG5leHBvcnRzLnR5cGVzID0gdHlwZXM7XG5jb25zdCBiaW5hcnkgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vYmluYXJ5XCIpKTtcbmV4cG9ydHMuYmluYXJ5ID0gYmluYXJ5O1xuY29uc3Qgc2hhbWFwXzEgPSByZXF1aXJlKFwiLi9zaGFtYXBcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTaGFNYXBcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNoYW1hcF8xLlNoYU1hcDsgfSB9KTtcbmNvbnN0IGxlZGdlckhhc2hlcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9sZWRnZXItaGFzaGVzXCIpKTtcbmV4cG9ydHMubGVkZ2VySGFzaGVzID0gbGVkZ2VySGFzaGVzO1xuY29uc3QgaGFzaGVzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhc2hlc1wiKSk7XG5leHBvcnRzLmhhc2hlcyA9IGhhc2hlcztcbmNvbnN0IHF1YWxpdHlfMSA9IHJlcXVpcmUoXCIuL3F1YWxpdHlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJxdWFsaXR5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBxdWFsaXR5XzEucXVhbGl0eTsgfSB9KTtcbmNvbnN0IGhhc2hfcHJlZml4ZXNfMSA9IHJlcXVpcmUoXCIuL2hhc2gtcHJlZml4ZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIYXNoUHJlZml4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoYXNoX3ByZWZpeGVzXzEuSGFzaFByZWZpeDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvcmV0eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/coretypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/bytes.js":
/*!**************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/bytes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BytesLookup = exports.Bytes = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/*\n * @brief: Bytes, name, and ordinal representing one type, ledger_type, transaction type, or result\n */\nclass Bytes {\n    constructor(name, ordinal, ordinalWidth) {\n        this.name = name;\n        this.ordinal = ordinal;\n        this.ordinalWidth = ordinalWidth;\n        this.bytes = buffer_1.Buffer.alloc(ordinalWidth);\n        for (let i = 0; i < ordinalWidth; i++) {\n            this.bytes[ordinalWidth - i - 1] = (ordinal >>> (i * 8)) & 0xff;\n        }\n    }\n    toJSON() {\n        return this.name;\n    }\n    toBytesSink(sink) {\n        sink.put(this.bytes);\n    }\n    toBytes() {\n        return this.bytes;\n    }\n}\nexports.Bytes = Bytes;\n/*\n * @brief: Collection of Bytes objects, mapping bidirectionally\n */\nclass BytesLookup {\n    constructor(types, ordinalWidth) {\n        this.ordinalWidth = ordinalWidth;\n        Object.entries(types).forEach(([k, v]) => {\n            this.add(k, v);\n        });\n    }\n    /**\n     * Add a new name value pair to the BytesLookup.\n     *\n     * @param name - A human readable name for the field.\n     * @param value - The numeric value for the field.\n     * @throws if the name or value already exist in the lookup because it's unclear how to decode.\n     */\n    add(name, value) {\n        if (this[name]) {\n            throw new SyntaxError(`Attempted to add a value with a duplicate name \"${name}\". This is not allowed because it is unclear how to decode.`);\n        }\n        if (this[value.toString()]) {\n            throw new SyntaxError(`Attempted to add a duplicate value under a different name (Given name: \"${name}\" and previous name: \"${this[value.toString()]}. This is not allowed because it is unclear how to decode.\\nGiven value: ${value.toString()}`);\n        }\n        this[name] = new Bytes(name, value, this.ordinalWidth);\n        this[value.toString()] = this[name];\n    }\n    from(value) {\n        return value instanceof Bytes ? value : this[value];\n    }\n    fromParser(parser) {\n        return this.from(parser.readUIntN(this.ordinalWidth).toString());\n    }\n}\nexports.BytesLookup = BytesLookup;\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2J5dGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGFBQWE7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLEtBQUs7QUFDMUY7QUFDQTtBQUNBLDZHQUE2RyxLQUFLLHdCQUF3Qix1QkFBdUIsMkVBQTJFLGlCQUFpQjtBQUM3UDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMvYnl0ZXMuanM/YTg4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnl0ZXNMb29rdXAgPSBleHBvcnRzLkJ5dGVzID0gdm9pZCAwO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyL1wiKTtcbi8qXG4gKiBAYnJpZWY6IEJ5dGVzLCBuYW1lLCBhbmQgb3JkaW5hbCByZXByZXNlbnRpbmcgb25lIHR5cGUsIGxlZGdlcl90eXBlLCB0cmFuc2FjdGlvbiB0eXBlLCBvciByZXN1bHRcbiAqL1xuY2xhc3MgQnl0ZXMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9yZGluYWwsIG9yZGluYWxXaWR0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLm9yZGluYWwgPSBvcmRpbmFsO1xuICAgICAgICB0aGlzLm9yZGluYWxXaWR0aCA9IG9yZGluYWxXaWR0aDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhvcmRpbmFsV2lkdGgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9yZGluYWxXaWR0aDsgaSsrKSB7XG4gICAgICAgICAgICB0aGlzLmJ5dGVzW29yZGluYWxXaWR0aCAtIGkgLSAxXSA9IChvcmRpbmFsID4+PiAoaSAqIDgpKSAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lO1xuICAgIH1cbiAgICB0b0J5dGVzU2luayhzaW5rKSB7XG4gICAgICAgIHNpbmsucHV0KHRoaXMuYnl0ZXMpO1xuICAgIH1cbiAgICB0b0J5dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ieXRlcztcbiAgICB9XG59XG5leHBvcnRzLkJ5dGVzID0gQnl0ZXM7XG4vKlxuICogQGJyaWVmOiBDb2xsZWN0aW9uIG9mIEJ5dGVzIG9iamVjdHMsIG1hcHBpbmcgYmlkaXJlY3Rpb25hbGx5XG4gKi9cbmNsYXNzIEJ5dGVzTG9va3VwIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlcywgb3JkaW5hbFdpZHRoKSB7XG4gICAgICAgIHRoaXMub3JkaW5hbFdpZHRoID0gb3JkaW5hbFdpZHRoO1xuICAgICAgICBPYmplY3QuZW50cmllcyh0eXBlcykuZm9yRWFjaCgoW2ssIHZdKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmFkZChrLCB2KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZCBhIG5ldyBuYW1lIHZhbHVlIHBhaXIgdG8gdGhlIEJ5dGVzTG9va3VwLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5hbWUgLSBBIGh1bWFuIHJlYWRhYmxlIG5hbWUgZm9yIHRoZSBmaWVsZC5cbiAgICAgKiBAcGFyYW0gdmFsdWUgLSBUaGUgbnVtZXJpYyB2YWx1ZSBmb3IgdGhlIGZpZWxkLlxuICAgICAqIEB0aHJvd3MgaWYgdGhlIG5hbWUgb3IgdmFsdWUgYWxyZWFkeSBleGlzdCBpbiB0aGUgbG9va3VwIGJlY2F1c2UgaXQncyB1bmNsZWFyIGhvdyB0byBkZWNvZGUuXG4gICAgICovXG4gICAgYWRkKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGlmICh0aGlzW25hbWVdKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoYEF0dGVtcHRlZCB0byBhZGQgYSB2YWx1ZSB3aXRoIGEgZHVwbGljYXRlIG5hbWUgXCIke25hbWV9XCIuIFRoaXMgaXMgbm90IGFsbG93ZWQgYmVjYXVzZSBpdCBpcyB1bmNsZWFyIGhvdyB0byBkZWNvZGUuYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXNbdmFsdWUudG9TdHJpbmcoKV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihgQXR0ZW1wdGVkIHRvIGFkZCBhIGR1cGxpY2F0ZSB2YWx1ZSB1bmRlciBhIGRpZmZlcmVudCBuYW1lIChHaXZlbiBuYW1lOiBcIiR7bmFtZX1cIiBhbmQgcHJldmlvdXMgbmFtZTogXCIke3RoaXNbdmFsdWUudG9TdHJpbmcoKV19LiBUaGlzIGlzIG5vdCBhbGxvd2VkIGJlY2F1c2UgaXQgaXMgdW5jbGVhciBob3cgdG8gZGVjb2RlLlxcbkdpdmVuIHZhbHVlOiAke3ZhbHVlLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpc1tuYW1lXSA9IG5ldyBCeXRlcyhuYW1lLCB2YWx1ZSwgdGhpcy5vcmRpbmFsV2lkdGgpO1xuICAgICAgICB0aGlzW3ZhbHVlLnRvU3RyaW5nKCldID0gdGhpc1tuYW1lXTtcbiAgICB9XG4gICAgZnJvbSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBCeXRlcyA/IHZhbHVlIDogdGhpc1t2YWx1ZV07XG4gICAgfVxuICAgIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZyb20ocGFyc2VyLnJlYWRVSW50Tih0aGlzLm9yZGluYWxXaWR0aCkudG9TdHJpbmcoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5CeXRlc0xvb2t1cCA9IEJ5dGVzTG9va3VwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSACTION_RESULT_WIDTH = exports.TRANSACTION_TYPE_WIDTH = exports.LEDGER_ENTRY_WIDTH = exports.TYPE_WIDTH = void 0;\nexports.TYPE_WIDTH = 2;\nexports.LEDGER_ENTRY_WIDTH = 2;\nexports.TRANSACTION_TYPE_WIDTH = 2;\nexports.TRANSACTION_RESULT_WIDTH = 1;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsR0FBRyw4QkFBOEIsR0FBRywwQkFBMEIsR0FBRyxrQkFBa0I7QUFDbkgsa0JBQWtCO0FBQ2xCLDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsZ0NBQWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMvY29uc3RhbnRzLmpzPzIwZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRSQU5TQUNUSU9OX1JFU1VMVF9XSURUSCA9IGV4cG9ydHMuVFJBTlNBQ1RJT05fVFlQRV9XSURUSCA9IGV4cG9ydHMuTEVER0VSX0VOVFJZX1dJRFRIID0gZXhwb3J0cy5UWVBFX1dJRFRIID0gdm9pZCAwO1xuZXhwb3J0cy5UWVBFX1dJRFRIID0gMjtcbmV4cG9ydHMuTEVER0VSX0VOVFJZX1dJRFRIID0gMjtcbmV4cG9ydHMuVFJBTlNBQ1RJT05fVFlQRV9XSURUSCA9IDI7XG5leHBvcnRzLlRSQU5TQUNUSU9OX1JFU1VMVF9XSURUSCA9IDE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/field.js":
/*!**************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/field.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FieldLookup = void 0;\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/bytes.js\");\nconst serialized_type_1 = __webpack_require__(/*! ../types/serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/constants.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/*\n * @brief: Serialize a field based on type_code and Field.nth\n */\nfunction fieldHeader(type, nth) {\n    const header = [];\n    if (type < 16) {\n        if (nth < 16) {\n            header.push((type << 4) | nth);\n        }\n        else {\n            header.push(type << 4, nth);\n        }\n    }\n    else if (nth < 16) {\n        header.push(nth, type);\n    }\n    else {\n        header.push(0, type, nth);\n    }\n    return buffer_1.Buffer.from(header);\n}\nfunction buildField([name, info], typeOrdinal) {\n    const field = fieldHeader(typeOrdinal, info.nth);\n    return {\n        name: name,\n        nth: info.nth,\n        isVariableLengthEncoded: info.isVLEncoded,\n        isSerialized: info.isSerialized,\n        isSigningField: info.isSigningField,\n        ordinal: (typeOrdinal << 16) | info.nth,\n        type: new bytes_1.Bytes(info.type, typeOrdinal, constants_1.TYPE_WIDTH),\n        header: field,\n        associatedType: serialized_type_1.SerializedType, // For later assignment in ./types/index.js or Definitions.updateAll(...)\n    };\n}\n/*\n * @brief: The collection of all fields as defined in definitions.json\n */\nclass FieldLookup {\n    constructor(fields, types) {\n        fields.forEach(([name, field_info]) => {\n            const typeOrdinal = types[field_info.type];\n            this[name] = buildField([name, field_info], typeOrdinal);\n            this[this[name].ordinal.toString()] = this[name];\n        });\n    }\n    fromString(value) {\n        return this[value];\n    }\n}\nexports.FieldLookup = FieldLookup;\n//# sourceMappingURL=field.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2ZpZWxkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBUztBQUNqQywwQkFBMEIsbUJBQU8sQ0FBQyx3R0FBMEI7QUFDNUQsb0JBQW9CLG1CQUFPLENBQUMscUZBQWE7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMvZmllbGQuanM/MjU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmllbGRMb29rdXAgPSB2b2lkIDA7XG5jb25zdCBieXRlc18xID0gcmVxdWlyZShcIi4vYnl0ZXNcIik7XG5jb25zdCBzZXJpYWxpemVkX3R5cGVfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKlxuICogQGJyaWVmOiBTZXJpYWxpemUgYSBmaWVsZCBiYXNlZCBvbiB0eXBlX2NvZGUgYW5kIEZpZWxkLm50aFxuICovXG5mdW5jdGlvbiBmaWVsZEhlYWRlcih0eXBlLCBudGgpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBbXTtcbiAgICBpZiAodHlwZSA8IDE2KSB7XG4gICAgICAgIGlmIChudGggPCAxNikge1xuICAgICAgICAgICAgaGVhZGVyLnB1c2goKHR5cGUgPDwgNCkgfCBudGgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaGVhZGVyLnB1c2godHlwZSA8PCA0LCBudGgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKG50aCA8IDE2KSB7XG4gICAgICAgIGhlYWRlci5wdXNoKG50aCwgdHlwZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBoZWFkZXIucHVzaCgwLCB0eXBlLCBudGgpO1xuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmZyb20oaGVhZGVyKTtcbn1cbmZ1bmN0aW9uIGJ1aWxkRmllbGQoW25hbWUsIGluZm9dLCB0eXBlT3JkaW5hbCkge1xuICAgIGNvbnN0IGZpZWxkID0gZmllbGRIZWFkZXIodHlwZU9yZGluYWwsIGluZm8ubnRoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICBudGg6IGluZm8ubnRoLFxuICAgICAgICBpc1ZhcmlhYmxlTGVuZ3RoRW5jb2RlZDogaW5mby5pc1ZMRW5jb2RlZCxcbiAgICAgICAgaXNTZXJpYWxpemVkOiBpbmZvLmlzU2VyaWFsaXplZCxcbiAgICAgICAgaXNTaWduaW5nRmllbGQ6IGluZm8uaXNTaWduaW5nRmllbGQsXG4gICAgICAgIG9yZGluYWw6ICh0eXBlT3JkaW5hbCA8PCAxNikgfCBpbmZvLm50aCxcbiAgICAgICAgdHlwZTogbmV3IGJ5dGVzXzEuQnl0ZXMoaW5mby50eXBlLCB0eXBlT3JkaW5hbCwgY29uc3RhbnRzXzEuVFlQRV9XSURUSCksXG4gICAgICAgIGhlYWRlcjogZmllbGQsXG4gICAgICAgIGFzc29jaWF0ZWRUeXBlOiBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSwgLy8gRm9yIGxhdGVyIGFzc2lnbm1lbnQgaW4gLi90eXBlcy9pbmRleC5qcyBvciBEZWZpbml0aW9ucy51cGRhdGVBbGwoLi4uKVxuICAgIH07XG59XG4vKlxuICogQGJyaWVmOiBUaGUgY29sbGVjdGlvbiBvZiBhbGwgZmllbGRzIGFzIGRlZmluZWQgaW4gZGVmaW5pdGlvbnMuanNvblxuICovXG5jbGFzcyBGaWVsZExvb2t1cCB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzLCB0eXBlcykge1xuICAgICAgICBmaWVsZHMuZm9yRWFjaCgoW25hbWUsIGZpZWxkX2luZm9dKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0eXBlT3JkaW5hbCA9IHR5cGVzW2ZpZWxkX2luZm8udHlwZV07XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gYnVpbGRGaWVsZChbbmFtZSwgZmllbGRfaW5mb10sIHR5cGVPcmRpbmFsKTtcbiAgICAgICAgICAgIHRoaXNbdGhpc1tuYW1lXS5vcmRpbmFsLnRvU3RyaW5nKCldID0gdGhpc1tuYW1lXTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZyb21TdHJpbmcodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbdmFsdWVdO1xuICAgIH1cbn1cbmV4cG9ydHMuRmllbGRMb29rdXAgPSBGaWVsZExvb2t1cDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpZWxkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/field.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSACTION_TYPES = exports.TransactionType = exports.TransactionResult = exports.LedgerEntryType = exports.Type = exports.Field = exports.DEFAULT_DEFINITIONS = exports.XrplDefinitionsBase = exports.Bytes = void 0;\nconst enums = __importStar(__webpack_require__(/*! ./definitions.json */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/definitions.json\"));\nconst xrpl_definitions_base_1 = __webpack_require__(/*! ./xrpl-definitions-base */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\");\nObject.defineProperty(exports, \"XrplDefinitionsBase\", ({ enumerable: true, get: function () { return xrpl_definitions_base_1.XrplDefinitionsBase; } }));\nObject.defineProperty(exports, \"Bytes\", ({ enumerable: true, get: function () { return xrpl_definitions_base_1.Bytes; } }));\n/**\n * By default, coreTypes from the `types` folder is where known type definitions are initialized to avoid import cycles.\n */\nconst DEFAULT_DEFINITIONS = new xrpl_definitions_base_1.XrplDefinitionsBase(enums, {});\nexports.DEFAULT_DEFINITIONS = DEFAULT_DEFINITIONS;\nconst Type = DEFAULT_DEFINITIONS.type;\nexports.Type = Type;\nconst LedgerEntryType = DEFAULT_DEFINITIONS.ledgerEntryType;\nexports.LedgerEntryType = LedgerEntryType;\nconst TransactionType = DEFAULT_DEFINITIONS.transactionType;\nexports.TransactionType = TransactionType;\nconst TransactionResult = DEFAULT_DEFINITIONS.transactionResult;\nexports.TransactionResult = TransactionResult;\nconst Field = DEFAULT_DEFINITIONS.field;\nexports.Field = Field;\n/*\n * @brief: All valid transaction types\n */\nconst TRANSACTION_TYPES = DEFAULT_DEFINITIONS.transactionNames;\nexports.TRANSACTION_TYPES = TRANSACTION_TYPES;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyxZQUFZLEdBQUcsYUFBYSxHQUFHLDJCQUEyQixHQUFHLDJCQUEyQixHQUFHLGFBQWE7QUFDcE4sMkJBQTJCLG1CQUFPLENBQUMsZ0dBQW9CO0FBQ3ZELGdDQUFnQyxtQkFBTyxDQUFDLDZHQUF5QjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsdURBQXVELEVBQUM7QUFDckoseUNBQXdDLEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRiwyQkFBMkI7QUFDM0I7QUFDQSxZQUFZO0FBQ1o7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy9pbmRleC5qcz9mNDIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRSQU5TQUNUSU9OX1RZUEVTID0gZXhwb3J0cy5UcmFuc2FjdGlvblR5cGUgPSBleHBvcnRzLlRyYW5zYWN0aW9uUmVzdWx0ID0gZXhwb3J0cy5MZWRnZXJFbnRyeVR5cGUgPSBleHBvcnRzLlR5cGUgPSBleHBvcnRzLkZpZWxkID0gZXhwb3J0cy5ERUZBVUxUX0RFRklOSVRJT05TID0gZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnNCYXNlID0gZXhwb3J0cy5CeXRlcyA9IHZvaWQgMDtcbmNvbnN0IGVudW1zID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlZmluaXRpb25zLmpzb25cIikpO1xuY29uc3QgeHJwbF9kZWZpbml0aW9uc19iYXNlXzEgPSByZXF1aXJlKFwiLi94cnBsLWRlZmluaXRpb25zLWJhc2VcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJYcnBsRGVmaW5pdGlvbnNCYXNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB4cnBsX2RlZmluaXRpb25zX2Jhc2VfMS5YcnBsRGVmaW5pdGlvbnNCYXNlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQnl0ZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHhycGxfZGVmaW5pdGlvbnNfYmFzZV8xLkJ5dGVzOyB9IH0pO1xuLyoqXG4gKiBCeSBkZWZhdWx0LCBjb3JlVHlwZXMgZnJvbSB0aGUgYHR5cGVzYCBmb2xkZXIgaXMgd2hlcmUga25vd24gdHlwZSBkZWZpbml0aW9ucyBhcmUgaW5pdGlhbGl6ZWQgdG8gYXZvaWQgaW1wb3J0IGN5Y2xlcy5cbiAqL1xuY29uc3QgREVGQVVMVF9ERUZJTklUSU9OUyA9IG5ldyB4cnBsX2RlZmluaXRpb25zX2Jhc2VfMS5YcnBsRGVmaW5pdGlvbnNCYXNlKGVudW1zLCB7fSk7XG5leHBvcnRzLkRFRkFVTFRfREVGSU5JVElPTlMgPSBERUZBVUxUX0RFRklOSVRJT05TO1xuY29uc3QgVHlwZSA9IERFRkFVTFRfREVGSU5JVElPTlMudHlwZTtcbmV4cG9ydHMuVHlwZSA9IFR5cGU7XG5jb25zdCBMZWRnZXJFbnRyeVR5cGUgPSBERUZBVUxUX0RFRklOSVRJT05TLmxlZGdlckVudHJ5VHlwZTtcbmV4cG9ydHMuTGVkZ2VyRW50cnlUeXBlID0gTGVkZ2VyRW50cnlUeXBlO1xuY29uc3QgVHJhbnNhY3Rpb25UeXBlID0gREVGQVVMVF9ERUZJTklUSU9OUy50cmFuc2FjdGlvblR5cGU7XG5leHBvcnRzLlRyYW5zYWN0aW9uVHlwZSA9IFRyYW5zYWN0aW9uVHlwZTtcbmNvbnN0IFRyYW5zYWN0aW9uUmVzdWx0ID0gREVGQVVMVF9ERUZJTklUSU9OUy50cmFuc2FjdGlvblJlc3VsdDtcbmV4cG9ydHMuVHJhbnNhY3Rpb25SZXN1bHQgPSBUcmFuc2FjdGlvblJlc3VsdDtcbmNvbnN0IEZpZWxkID0gREVGQVVMVF9ERUZJTklUSU9OUy5maWVsZDtcbmV4cG9ydHMuRmllbGQgPSBGaWVsZDtcbi8qXG4gKiBAYnJpZWY6IEFsbCB2YWxpZCB0cmFuc2FjdGlvbiB0eXBlc1xuICovXG5jb25zdCBUUkFOU0FDVElPTl9UWVBFUyA9IERFRkFVTFRfREVGSU5JVElPTlMudHJhbnNhY3Rpb25OYW1lcztcbmV4cG9ydHMuVFJBTlNBQ1RJT05fVFlQRVMgPSBUUkFOU0FDVElPTl9UWVBFUztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BytesLookup = exports.Bytes = exports.FieldLookup = exports.XrplDefinitionsBase = void 0;\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/bytes.js\");\nObject.defineProperty(exports, \"Bytes\", ({ enumerable: true, get: function () { return bytes_1.Bytes; } }));\nObject.defineProperty(exports, \"BytesLookup\", ({ enumerable: true, get: function () { return bytes_1.BytesLookup; } }));\nconst field_1 = __webpack_require__(/*! ./field */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/field.js\");\nObject.defineProperty(exports, \"FieldLookup\", ({ enumerable: true, get: function () { return field_1.FieldLookup; } }));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/constants.js\");\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * XrplDefinitions should be instantiated instead of this class.\n */\nclass XrplDefinitionsBase {\n    /**\n     * Present rippled types in a typed and updatable format.\n     * For an example of the input format see `definitions.json`\n     * To generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n     *\n     * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n     *\n     * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n     * @param types - A list of type objects with the same name as the fields defined.\n     *              You can use the coreTypes object if you are not adding new types.\n     */\n    constructor(enums, types) {\n        this.type = new bytes_1.BytesLookup(enums.TYPES, constants_1.TYPE_WIDTH);\n        this.ledgerEntryType = new bytes_1.BytesLookup(enums.LEDGER_ENTRY_TYPES, constants_1.LEDGER_ENTRY_WIDTH);\n        this.transactionType = new bytes_1.BytesLookup(enums.TRANSACTION_TYPES, constants_1.TRANSACTION_TYPE_WIDTH);\n        this.transactionResult = new bytes_1.BytesLookup(enums.TRANSACTION_RESULTS, constants_1.TRANSACTION_RESULT_WIDTH);\n        this.field = new field_1.FieldLookup(enums.FIELDS, enums.TYPES);\n        this.transactionNames = Object.entries(enums.TRANSACTION_TYPES)\n            .filter(([_key, value]) => value >= 0)\n            .map(([key, _value]) => key);\n        this.dataTypes = {}; // Filled in via associateTypes\n        this.associateTypes(types);\n    }\n    /**\n     * Associates each Field to a corresponding class that TypeScript can recognize.\n     *\n     * @param types a list of type objects with the same name as the fields defined.\n     *              Defaults to xrpl.js's core type definitions.\n     */\n    associateTypes(types) {\n        // Overwrite any existing type definitions with the given types\n        this.dataTypes = Object.assign({}, this.dataTypes, types);\n        Object.values(this.field).forEach((field) => {\n            field.associatedType = this.dataTypes[field.type.name];\n        });\n        this.field['TransactionType'].associatedType = this.transactionType;\n        this.field['TransactionResult'].associatedType = this.transactionResult;\n        this.field['LedgerEntryType'].associatedType = this.ledgerEntryType;\n    }\n    getAssociatedTypes() {\n        return this.dataTypes;\n    }\n}\nexports.XrplDefinitionsBase = XrplDefinitionsBase;\n//# sourceMappingURL=xrpl-definitions-base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL3hycGwtZGVmaW5pdGlvbnMtYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxhQUFhLEdBQUcsbUJBQW1CLEdBQUcsMkJBQTJCO0FBQ3ZGLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFTO0FBQ2pDLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RywrQ0FBOEMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDckgsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQVM7QUFDakMsK0NBQThDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ3JILG9CQUFvQixtQkFBTyxDQUFDLHFGQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL3hycGwtZGVmaW5pdGlvbnMtYmFzZS5qcz82YzUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CeXRlc0xvb2t1cCA9IGV4cG9ydHMuQnl0ZXMgPSBleHBvcnRzLkZpZWxkTG9va3VwID0gZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnNCYXNlID0gdm9pZCAwO1xuY29uc3QgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQnl0ZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ5dGVzXzEuQnl0ZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCeXRlc0xvb2t1cFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnl0ZXNfMS5CeXRlc0xvb2t1cDsgfSB9KTtcbmNvbnN0IGZpZWxkXzEgPSByZXF1aXJlKFwiLi9maWVsZFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpZWxkTG9va3VwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmaWVsZF8xLkZpZWxkTG9va3VwOyB9IH0pO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vKipcbiAqIFN0b3JlcyB0aGUgdmFyaW91cyB0eXBlcyBhbmQgZmllbGRzIGZvciByaXBwbGVkIHRvIGJlIHVzZWQgdG8gZW5jb2RlL2RlY29kZSBpbmZvcm1hdGlvbiBsYXRlciBvbi5cbiAqIFhycGxEZWZpbml0aW9ucyBzaG91bGQgYmUgaW5zdGFudGlhdGVkIGluc3RlYWQgb2YgdGhpcyBjbGFzcy5cbiAqL1xuY2xhc3MgWHJwbERlZmluaXRpb25zQmFzZSB7XG4gICAgLyoqXG4gICAgICogUHJlc2VudCByaXBwbGVkIHR5cGVzIGluIGEgdHlwZWQgYW5kIHVwZGF0YWJsZSBmb3JtYXQuXG4gICAgICogRm9yIGFuIGV4YW1wbGUgb2YgdGhlIGlucHV0IGZvcm1hdCBzZWUgYGRlZmluaXRpb25zLmpzb25gXG4gICAgICogVG8gZ2VuZXJhdGUgYSBuZXcgZGVmaW5pdGlvbnMgZmlsZSBmcm9tIHJpcHBsZWQgc291cmNlIGNvZGUsIHVzZSB0aGlzIHRvb2w6IGh0dHBzOi8vZ2l0aHViLmNvbS9SaWNoYXJkQUgveHJwbC1jb2RlYy1nZW5cbiAgICAgKlxuICAgICAqIFNlZSB0aGUgZGVmaW5pdGlvbnMudGVzdC5qcyBmaWxlIGZvciBleGFtcGxlcyBvZiBob3cgdG8gY3JlYXRlIHlvdXIgb3duIHVwZGF0ZWQgZGVmaW5pdGlvbnMuanNvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlbnVtcyAtIEEganNvbiBlbmNvZGluZyBvZiB0aGUgY29yZSB0eXBlcywgdHJhbnNhY3Rpb24gdHlwZXMsIHRyYW5zYWN0aW9uIHJlc3VsdHMsIHRyYW5zYWN0aW9uIG5hbWVzLCBhbmQgZmllbGRzLlxuICAgICAqIEBwYXJhbSB0eXBlcyAtIEEgbGlzdCBvZiB0eXBlIG9iamVjdHMgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBmaWVsZHMgZGVmaW5lZC5cbiAgICAgKiAgICAgICAgICAgICAgWW91IGNhbiB1c2UgdGhlIGNvcmVUeXBlcyBvYmplY3QgaWYgeW91IGFyZSBub3QgYWRkaW5nIG5ldyB0eXBlcy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihlbnVtcywgdHlwZXMpIHtcbiAgICAgICAgdGhpcy50eXBlID0gbmV3IGJ5dGVzXzEuQnl0ZXNMb29rdXAoZW51bXMuVFlQRVMsIGNvbnN0YW50c18xLlRZUEVfV0lEVEgpO1xuICAgICAgICB0aGlzLmxlZGdlckVudHJ5VHlwZSA9IG5ldyBieXRlc18xLkJ5dGVzTG9va3VwKGVudW1zLkxFREdFUl9FTlRSWV9UWVBFUywgY29uc3RhbnRzXzEuTEVER0VSX0VOVFJZX1dJRFRIKTtcbiAgICAgICAgdGhpcy50cmFuc2FjdGlvblR5cGUgPSBuZXcgYnl0ZXNfMS5CeXRlc0xvb2t1cChlbnVtcy5UUkFOU0FDVElPTl9UWVBFUywgY29uc3RhbnRzXzEuVFJBTlNBQ1RJT05fVFlQRV9XSURUSCk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25SZXN1bHQgPSBuZXcgYnl0ZXNfMS5CeXRlc0xvb2t1cChlbnVtcy5UUkFOU0FDVElPTl9SRVNVTFRTLCBjb25zdGFudHNfMS5UUkFOU0FDVElPTl9SRVNVTFRfV0lEVEgpO1xuICAgICAgICB0aGlzLmZpZWxkID0gbmV3IGZpZWxkXzEuRmllbGRMb29rdXAoZW51bXMuRklFTERTLCBlbnVtcy5UWVBFUyk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25OYW1lcyA9IE9iamVjdC5lbnRyaWVzKGVudW1zLlRSQU5TQUNUSU9OX1RZUEVTKVxuICAgICAgICAgICAgLmZpbHRlcigoW19rZXksIHZhbHVlXSkgPT4gdmFsdWUgPj0gMClcbiAgICAgICAgICAgIC5tYXAoKFtrZXksIF92YWx1ZV0pID0+IGtleSk7XG4gICAgICAgIHRoaXMuZGF0YVR5cGVzID0ge307IC8vIEZpbGxlZCBpbiB2aWEgYXNzb2NpYXRlVHlwZXNcbiAgICAgICAgdGhpcy5hc3NvY2lhdGVUeXBlcyh0eXBlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFzc29jaWF0ZXMgZWFjaCBGaWVsZCB0byBhIGNvcnJlc3BvbmRpbmcgY2xhc3MgdGhhdCBUeXBlU2NyaXB0IGNhbiByZWNvZ25pemUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZXMgYSBsaXN0IG9mIHR5cGUgb2JqZWN0cyB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGZpZWxkcyBkZWZpbmVkLlxuICAgICAqICAgICAgICAgICAgICBEZWZhdWx0cyB0byB4cnBsLmpzJ3MgY29yZSB0eXBlIGRlZmluaXRpb25zLlxuICAgICAqL1xuICAgIGFzc29jaWF0ZVR5cGVzKHR5cGVzKSB7XG4gICAgICAgIC8vIE92ZXJ3cml0ZSBhbnkgZXhpc3RpbmcgdHlwZSBkZWZpbml0aW9ucyB3aXRoIHRoZSBnaXZlbiB0eXBlc1xuICAgICAgICB0aGlzLmRhdGFUeXBlcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGF0YVR5cGVzLCB0eXBlcyk7XG4gICAgICAgIE9iamVjdC52YWx1ZXModGhpcy5maWVsZCkuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICAgICAgICAgIGZpZWxkLmFzc29jaWF0ZWRUeXBlID0gdGhpcy5kYXRhVHlwZXNbZmllbGQudHlwZS5uYW1lXTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZmllbGRbJ1RyYW5zYWN0aW9uVHlwZSddLmFzc29jaWF0ZWRUeXBlID0gdGhpcy50cmFuc2FjdGlvblR5cGU7XG4gICAgICAgIHRoaXMuZmllbGRbJ1RyYW5zYWN0aW9uUmVzdWx0J10uYXNzb2NpYXRlZFR5cGUgPSB0aGlzLnRyYW5zYWN0aW9uUmVzdWx0O1xuICAgICAgICB0aGlzLmZpZWxkWydMZWRnZXJFbnRyeVR5cGUnXS5hc3NvY2lhdGVkVHlwZSA9IHRoaXMubGVkZ2VyRW50cnlUeXBlO1xuICAgIH1cbiAgICBnZXRBc3NvY2lhdGVkVHlwZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUeXBlcztcbiAgICB9XG59XG5leHBvcnRzLlhycGxEZWZpbml0aW9uc0Jhc2UgPSBYcnBsRGVmaW5pdGlvbnNCYXNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eHJwbC1kZWZpbml0aW9ucy1iYXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js":
/*!*************************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XrplDefinitions = void 0;\nconst xrpl_definitions_base_1 = __webpack_require__(/*! ./xrpl-definitions-base */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\");\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\");\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * Should be used instead of XrplDefinitionsBase since this defines default `types` for serializing/deserializing\n * ledger data.\n */\nclass XrplDefinitions extends xrpl_definitions_base_1.XrplDefinitionsBase {\n    /**\n     * Present rippled types in a typed and updatable format.\n     * For an example of the input format see `definitions.json`\n     * To generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n     *\n     * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n     *\n     * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n     * @param additionalTypes - A list of SerializedType objects with the same name as the fields defined.\n     *              These types will be included in addition to the coreTypes used on mainnet.\n     */\n    constructor(enums, additionalTypes) {\n        const types = Object.assign({}, types_1.coreTypes, additionalTypes);\n        super(enums, types);\n    }\n}\nexports.XrplDefinitions = XrplDefinitions;\n//# sourceMappingURL=xrpl-definitions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL3hycGwtZGVmaW5pdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGdDQUFnQyxtQkFBTyxDQUFDLDZHQUF5QjtBQUNqRSxnQkFBZ0IsbUJBQU8sQ0FBQyw4RUFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMveHJwbC1kZWZpbml0aW9ucy5qcz9hMjE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnMgPSB2b2lkIDA7XG5jb25zdCB4cnBsX2RlZmluaXRpb25zX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL3hycGwtZGVmaW5pdGlvbnMtYmFzZVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG4vKipcbiAqIFN0b3JlcyB0aGUgdmFyaW91cyB0eXBlcyBhbmQgZmllbGRzIGZvciByaXBwbGVkIHRvIGJlIHVzZWQgdG8gZW5jb2RlL2RlY29kZSBpbmZvcm1hdGlvbiBsYXRlciBvbi5cbiAqIFNob3VsZCBiZSB1c2VkIGluc3RlYWQgb2YgWHJwbERlZmluaXRpb25zQmFzZSBzaW5jZSB0aGlzIGRlZmluZXMgZGVmYXVsdCBgdHlwZXNgIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nXG4gKiBsZWRnZXIgZGF0YS5cbiAqL1xuY2xhc3MgWHJwbERlZmluaXRpb25zIGV4dGVuZHMgeHJwbF9kZWZpbml0aW9uc19iYXNlXzEuWHJwbERlZmluaXRpb25zQmFzZSB7XG4gICAgLyoqXG4gICAgICogUHJlc2VudCByaXBwbGVkIHR5cGVzIGluIGEgdHlwZWQgYW5kIHVwZGF0YWJsZSBmb3JtYXQuXG4gICAgICogRm9yIGFuIGV4YW1wbGUgb2YgdGhlIGlucHV0IGZvcm1hdCBzZWUgYGRlZmluaXRpb25zLmpzb25gXG4gICAgICogVG8gZ2VuZXJhdGUgYSBuZXcgZGVmaW5pdGlvbnMgZmlsZSBmcm9tIHJpcHBsZWQgc291cmNlIGNvZGUsIHVzZSB0aGlzIHRvb2w6IGh0dHBzOi8vZ2l0aHViLmNvbS9SaWNoYXJkQUgveHJwbC1jb2RlYy1nZW5cbiAgICAgKlxuICAgICAqIFNlZSB0aGUgZGVmaW5pdGlvbnMudGVzdC5qcyBmaWxlIGZvciBleGFtcGxlcyBvZiBob3cgdG8gY3JlYXRlIHlvdXIgb3duIHVwZGF0ZWQgZGVmaW5pdGlvbnMuanNvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlbnVtcyAtIEEganNvbiBlbmNvZGluZyBvZiB0aGUgY29yZSB0eXBlcywgdHJhbnNhY3Rpb24gdHlwZXMsIHRyYW5zYWN0aW9uIHJlc3VsdHMsIHRyYW5zYWN0aW9uIG5hbWVzLCBhbmQgZmllbGRzLlxuICAgICAqIEBwYXJhbSBhZGRpdGlvbmFsVHlwZXMgLSBBIGxpc3Qgb2YgU2VyaWFsaXplZFR5cGUgb2JqZWN0cyB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGZpZWxkcyBkZWZpbmVkLlxuICAgICAqICAgICAgICAgICAgICBUaGVzZSB0eXBlcyB3aWxsIGJlIGluY2x1ZGVkIGluIGFkZGl0aW9uIHRvIHRoZSBjb3JlVHlwZXMgdXNlZCBvbiBtYWlubmV0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVudW1zLCBhZGRpdGlvbmFsVHlwZXMpIHtcbiAgICAgICAgY29uc3QgdHlwZXMgPSBPYmplY3QuYXNzaWduKHt9LCB0eXBlc18xLmNvcmVUeXBlcywgYWRkaXRpb25hbFR5cGVzKTtcbiAgICAgICAgc3VwZXIoZW51bXMsIHR5cGVzKTtcbiAgICB9XG59XG5leHBvcnRzLlhycGxEZWZpbml0aW9ucyA9IFhycGxEZWZpbml0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXhycGwtZGVmaW5pdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/hash-prefixes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HashPrefix = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Write a 32 bit integer to a Buffer\n *\n * @param uint32 32 bit integer to write to buffer\n * @returns a buffer with the bytes representation of uint32\n */\nfunction bytes(uint32) {\n    const result = buffer_1.Buffer.alloc(4);\n    result.writeUInt32BE(uint32, 0);\n    return result;\n}\n/**\n * Maps HashPrefix names to their byte representation\n */\nconst HashPrefix = {\n    transactionID: bytes(0x54584e00),\n    // transaction plus metadata\n    transaction: bytes(0x534e4400),\n    // account state\n    accountStateEntry: bytes(0x4d4c4e00),\n    // inner node in tree\n    innerNode: bytes(0x4d494e00),\n    // ledger master data for signing\n    ledgerHeader: bytes(0x4c575200),\n    // inner transaction to sign\n    transactionSig: bytes(0x53545800),\n    // inner transaction to sign\n    transactionMultiSig: bytes(0x534d5400),\n    // validation for signing\n    validation: bytes(0x56414c00),\n    // proposal for signing\n    proposal: bytes(0x50525000),\n    // payment channel claim\n    paymentChannelClaim: bytes(0x434c4d00),\n};\nexports.HashPrefix = HashPrefix;\n//# sourceMappingURL=hash-prefixes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2hhc2gtcHJlZml4ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9oYXNoLXByZWZpeGVzLmpzPzU2MzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhhc2hQcmVmaXggPSB2b2lkIDA7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBXcml0ZSBhIDMyIGJpdCBpbnRlZ2VyIHRvIGEgQnVmZmVyXG4gKlxuICogQHBhcmFtIHVpbnQzMiAzMiBiaXQgaW50ZWdlciB0byB3cml0ZSB0byBidWZmZXJcbiAqIEByZXR1cm5zIGEgYnVmZmVyIHdpdGggdGhlIGJ5dGVzIHJlcHJlc2VudGF0aW9uIG9mIHVpbnQzMlxuICovXG5mdW5jdGlvbiBieXRlcyh1aW50MzIpIHtcbiAgICBjb25zdCByZXN1bHQgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoNCk7XG4gICAgcmVzdWx0LndyaXRlVUludDMyQkUodWludDMyLCAwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBNYXBzIEhhc2hQcmVmaXggbmFtZXMgdG8gdGhlaXIgYnl0ZSByZXByZXNlbnRhdGlvblxuICovXG5jb25zdCBIYXNoUHJlZml4ID0ge1xuICAgIHRyYW5zYWN0aW9uSUQ6IGJ5dGVzKDB4NTQ1ODRlMDApLFxuICAgIC8vIHRyYW5zYWN0aW9uIHBsdXMgbWV0YWRhdGFcbiAgICB0cmFuc2FjdGlvbjogYnl0ZXMoMHg1MzRlNDQwMCksXG4gICAgLy8gYWNjb3VudCBzdGF0ZVxuICAgIGFjY291bnRTdGF0ZUVudHJ5OiBieXRlcygweDRkNGM0ZTAwKSxcbiAgICAvLyBpbm5lciBub2RlIGluIHRyZWVcbiAgICBpbm5lck5vZGU6IGJ5dGVzKDB4NGQ0OTRlMDApLFxuICAgIC8vIGxlZGdlciBtYXN0ZXIgZGF0YSBmb3Igc2lnbmluZ1xuICAgIGxlZGdlckhlYWRlcjogYnl0ZXMoMHg0YzU3NTIwMCksXG4gICAgLy8gaW5uZXIgdHJhbnNhY3Rpb24gdG8gc2lnblxuICAgIHRyYW5zYWN0aW9uU2lnOiBieXRlcygweDUzNTQ1ODAwKSxcbiAgICAvLyBpbm5lciB0cmFuc2FjdGlvbiB0byBzaWduXG4gICAgdHJhbnNhY3Rpb25NdWx0aVNpZzogYnl0ZXMoMHg1MzRkNTQwMCksXG4gICAgLy8gdmFsaWRhdGlvbiBmb3Igc2lnbmluZ1xuICAgIHZhbGlkYXRpb246IGJ5dGVzKDB4NTY0MTRjMDApLFxuICAgIC8vIHByb3Bvc2FsIGZvciBzaWduaW5nXG4gICAgcHJvcG9zYWw6IGJ5dGVzKDB4NTA1MjUwMDApLFxuICAgIC8vIHBheW1lbnQgY2hhbm5lbCBjbGFpbVxuICAgIHBheW1lbnRDaGFubmVsQ2xhaW06IGJ5dGVzKDB4NDM0YzRkMDApLFxufTtcbmV4cG9ydHMuSGFzaFByZWZpeCA9IEhhc2hQcmVmaXg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLXByZWZpeGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js":
/*!*********************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/hashes.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.transactionID = exports.sha512Half = exports.Sha512Half = void 0;\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst createHash = __webpack_require__(/*! create-hash */ \"(ssr)/./node_modules/create-hash/index.js\");\nconst hash_256_1 = __webpack_require__(/*! ./types/hash-256 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ./serdes/binary-serializer */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Class for hashing with SHA512\n * @extends BytesList So SerializedTypes can write bytes to a Sha512Half\n */\nclass Sha512Half extends binary_serializer_1.BytesList {\n    constructor() {\n        super(...arguments);\n        this.hash = createHash('sha512');\n    }\n    /**\n     * Construct a new Sha512Hash and write bytes this.hash\n     *\n     * @param bytes bytes to write to this.hash\n     * @returns the new Sha512Hash object\n     */\n    static put(bytes) {\n        return new Sha512Half().put(bytes);\n    }\n    /**\n     * Write bytes to an existing Sha512Hash\n     *\n     * @param bytes bytes to write to object\n     * @returns the Sha512 object\n     */\n    put(bytes) {\n        this.hash.update(bytes);\n        return this;\n    }\n    /**\n     * Compute SHA512 hash and slice in half\n     *\n     * @returns half of a SHA512 hash\n     */\n    finish256() {\n        return buffer_1.Buffer.from(this.hash.digest().slice(0, 32));\n    }\n    /**\n     * Constructs a Hash256 from the Sha512Half object\n     *\n     * @returns a Hash256 object\n     */\n    finish() {\n        return new hash_256_1.Hash256(this.finish256());\n    }\n}\nexports.Sha512Half = Sha512Half;\n/**\n * compute SHA512 hash of a list of bytes\n *\n * @param args zero or more arguments to hash\n * @returns the sha512half hash of the arguments.\n */\nfunction sha512Half(...args) {\n    const hash = new Sha512Half();\n    args.forEach((a) => hash.put(a));\n    return hash.finish256();\n}\nexports.sha512Half = sha512Half;\n/**\n * Construct a transactionID from a Serialized Transaction\n *\n * @param serialized bytes to hash\n * @returns a Hash256 object\n */\nfunction transactionID(serialized) {\n    return new hash_256_1.Hash256(sha512Half(hash_prefixes_1.HashPrefix.transactionID, serialized));\n}\nexports.transactionID = transactionID;\n//# sourceMappingURL=hashes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2hhc2hlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDL0Qsd0JBQXdCLG1CQUFPLENBQUMsdUZBQWlCO0FBQ2pELG1CQUFtQixtQkFBTyxDQUFDLDhEQUFhO0FBQ3hDLG1CQUFtQixtQkFBTyxDQUFDLHlGQUFrQjtBQUM3Qyw0QkFBNEIsbUJBQU8sQ0FBQyw2R0FBNEI7QUFDaEUsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvaGFzaGVzLmpzPzYwNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRyYW5zYWN0aW9uSUQgPSBleHBvcnRzLnNoYTUxMkhhbGYgPSBleHBvcnRzLlNoYTUxMkhhbGYgPSB2b2lkIDA7XG5jb25zdCBoYXNoX3ByZWZpeGVzXzEgPSByZXF1aXJlKFwiLi9oYXNoLXByZWZpeGVzXCIpO1xuY29uc3QgY3JlYXRlSGFzaCA9IHJlcXVpcmUoXCJjcmVhdGUtaGFzaFwiKTtcbmNvbnN0IGhhc2hfMjU2XzEgPSByZXF1aXJlKFwiLi90eXBlcy9oYXNoLTI1NlwiKTtcbmNvbnN0IGJpbmFyeV9zZXJpYWxpemVyXzEgPSByZXF1aXJlKFwiLi9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBDbGFzcyBmb3IgaGFzaGluZyB3aXRoIFNIQTUxMlxuICogQGV4dGVuZHMgQnl0ZXNMaXN0IFNvIFNlcmlhbGl6ZWRUeXBlcyBjYW4gd3JpdGUgYnl0ZXMgdG8gYSBTaGE1MTJIYWxmXG4gKi9cbmNsYXNzIFNoYTUxMkhhbGYgZXh0ZW5kcyBiaW5hcnlfc2VyaWFsaXplcl8xLkJ5dGVzTGlzdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuaGFzaCA9IGNyZWF0ZUhhc2goJ3NoYTUxMicpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBuZXcgU2hhNTEySGFzaCBhbmQgd3JpdGUgYnl0ZXMgdGhpcy5oYXNoXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYnl0ZXMgYnl0ZXMgdG8gd3JpdGUgdG8gdGhpcy5oYXNoXG4gICAgICogQHJldHVybnMgdGhlIG5ldyBTaGE1MTJIYXNoIG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBwdXQoYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTaGE1MTJIYWxmKCkucHV0KGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYnl0ZXMgdG8gYW4gZXhpc3RpbmcgU2hhNTEySGFzaFxuICAgICAqXG4gICAgICogQHBhcmFtIGJ5dGVzIGJ5dGVzIHRvIHdyaXRlIHRvIG9iamVjdFxuICAgICAqIEByZXR1cm5zIHRoZSBTaGE1MTIgb2JqZWN0XG4gICAgICovXG4gICAgcHV0KGJ5dGVzKSB7XG4gICAgICAgIHRoaXMuaGFzaC51cGRhdGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcHV0ZSBTSEE1MTIgaGFzaCBhbmQgc2xpY2UgaW4gaGFsZlxuICAgICAqXG4gICAgICogQHJldHVybnMgaGFsZiBvZiBhIFNIQTUxMiBoYXNoXG4gICAgICovXG4gICAgZmluaXNoMjU2KCkge1xuICAgICAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmZyb20odGhpcy5oYXNoLmRpZ2VzdCgpLnNsaWNlKDAsIDMyKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBIYXNoMjU2IGZyb20gdGhlIFNoYTUxMkhhbGYgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBhIEhhc2gyNTYgb2JqZWN0XG4gICAgICovXG4gICAgZmluaXNoKCkge1xuICAgICAgICByZXR1cm4gbmV3IGhhc2hfMjU2XzEuSGFzaDI1Nih0aGlzLmZpbmlzaDI1NigpKTtcbiAgICB9XG59XG5leHBvcnRzLlNoYTUxMkhhbGYgPSBTaGE1MTJIYWxmO1xuLyoqXG4gKiBjb21wdXRlIFNIQTUxMiBoYXNoIG9mIGEgbGlzdCBvZiBieXRlc1xuICpcbiAqIEBwYXJhbSBhcmdzIHplcm8gb3IgbW9yZSBhcmd1bWVudHMgdG8gaGFzaFxuICogQHJldHVybnMgdGhlIHNoYTUxMmhhbGYgaGFzaCBvZiB0aGUgYXJndW1lbnRzLlxuICovXG5mdW5jdGlvbiBzaGE1MTJIYWxmKC4uLmFyZ3MpIHtcbiAgICBjb25zdCBoYXNoID0gbmV3IFNoYTUxMkhhbGYoKTtcbiAgICBhcmdzLmZvckVhY2goKGEpID0+IGhhc2gucHV0KGEpKTtcbiAgICByZXR1cm4gaGFzaC5maW5pc2gyNTYoKTtcbn1cbmV4cG9ydHMuc2hhNTEySGFsZiA9IHNoYTUxMkhhbGY7XG4vKipcbiAqIENvbnN0cnVjdCBhIHRyYW5zYWN0aW9uSUQgZnJvbSBhIFNlcmlhbGl6ZWQgVHJhbnNhY3Rpb25cbiAqXG4gKiBAcGFyYW0gc2VyaWFsaXplZCBieXRlcyB0byBoYXNoXG4gKiBAcmV0dXJucyBhIEhhc2gyNTYgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHRyYW5zYWN0aW9uSUQoc2VyaWFsaXplZCkge1xuICAgIHJldHVybiBuZXcgaGFzaF8yNTZfMS5IYXNoMjU2KHNoYTUxMkhhbGYoaGFzaF9wcmVmaXhlc18xLkhhc2hQcmVmaXgudHJhbnNhY3Rpb25JRCwgc2VyaWFsaXplZCkpO1xufVxuZXhwb3J0cy50cmFuc2FjdGlvbklEID0gdHJhbnNhY3Rpb25JRDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.coreTypes = exports.DEFAULT_DEFINITIONS = exports.XrplDefinitionsBase = exports.XrplDefinitions = exports.TRANSACTION_TYPES = exports.decodeLedgerData = exports.decodeQuality = exports.encodeQuality = exports.encodeForMultisigning = exports.encodeForSigningClaim = exports.encodeForSigning = exports.encode = exports.decode = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst coretypes_1 = __webpack_require__(/*! ./coretypes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/coretypes.js\");\nconst ledger_hashes_1 = __webpack_require__(/*! ./ledger-hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/ledger-hashes.js\");\nObject.defineProperty(exports, \"decodeLedgerData\", ({ enumerable: true, get: function () { return ledger_hashes_1.decodeLedgerData; } }));\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nObject.defineProperty(exports, \"XrplDefinitionsBase\", ({ enumerable: true, get: function () { return enums_1.XrplDefinitionsBase; } }));\nObject.defineProperty(exports, \"TRANSACTION_TYPES\", ({ enumerable: true, get: function () { return enums_1.TRANSACTION_TYPES; } }));\nObject.defineProperty(exports, \"DEFAULT_DEFINITIONS\", ({ enumerable: true, get: function () { return enums_1.DEFAULT_DEFINITIONS; } }));\nconst xrpl_definitions_1 = __webpack_require__(/*! ./enums/xrpl-definitions */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js\");\nObject.defineProperty(exports, \"XrplDefinitions\", ({ enumerable: true, get: function () { return xrpl_definitions_1.XrplDefinitions; } }));\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\");\nObject.defineProperty(exports, \"coreTypes\", ({ enumerable: true, get: function () { return types_1.coreTypes; } }));\nconst { signingData, signingClaimData, multiSigningData, binaryToJSON, serializeObject, } = coretypes_1.binary;\n/**\n * Decode a transaction\n *\n * @param binary hex-string of the encoded transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the JSON representation of the transaction\n */\nfunction decode(binary, definitions) {\n    assert.ok(typeof binary === 'string', 'binary must be a hex string');\n    return binaryToJSON(binary, definitions);\n}\nexports.decode = decode;\n/**\n * Encode a transaction\n *\n * @param json The JSON representation of a transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n *\n * @returns A hex-string of the encoded transaction\n */\nfunction encode(json, definitions) {\n    assert.ok(typeof json === 'object');\n    return serializeObject(json, { definitions })\n        .toString('hex')\n        .toUpperCase();\n}\nexports.encode = encode;\n/**\n * Encode a transaction and prepare for signing\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForSigning(json, definitions) {\n    assert.ok(typeof json === 'object');\n    return signingData(json, coretypes_1.HashPrefix.transactionSig, {\n        definitions,\n    })\n        .toString('hex')\n        .toUpperCase();\n}\nexports.encodeForSigning = encodeForSigning;\n/**\n * Encode a transaction and prepare for signing with a claim\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForSigningClaim(json) {\n    assert.ok(typeof json === 'object');\n    return signingClaimData(json)\n        .toString('hex')\n        .toUpperCase();\n}\nexports.encodeForSigningClaim = encodeForSigningClaim;\n/**\n * Encode a transaction and prepare for multi-signing\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForMultisigning(json, signer, definitions) {\n    assert.ok(typeof json === 'object');\n    assert.equal(json['SigningPubKey'], '');\n    const definitionsOpt = definitions ? { definitions } : undefined;\n    return multiSigningData(json, signer, definitionsOpt)\n        .toString('hex')\n        .toUpperCase();\n}\nexports.encodeForMultisigning = encodeForMultisigning;\n/**\n * Encode a quality value\n *\n * @param value string representation of a number\n * @returns a hex-string representing the quality\n */\nfunction encodeQuality(value) {\n    assert.ok(typeof value === 'string');\n    return coretypes_1.quality.encode(value).toString('hex').toUpperCase();\n}\nexports.encodeQuality = encodeQuality;\n/**\n * Decode a quality value\n *\n * @param value hex-string of a quality\n * @returns a string representing the quality\n */\nfunction decodeQuality(value) {\n    assert.ok(typeof value === 'string');\n    return coretypes_1.quality.decode(value).toString();\n}\nexports.decodeQuality = decodeQuality;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/ledger-hashes.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/ledger-hashes.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeLedgerData = exports.ledgerHash = exports.transactionTreeHash = exports.accountStateHash = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst shamap_1 = __webpack_require__(/*! ./shamap */ \"(ssr)/./node_modules/ripple-binary-codec/dist/shamap.js\");\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js\");\nconst binary_1 = __webpack_require__(/*! ./binary */ \"(ssr)/./node_modules/ripple-binary-codec/dist/binary.js\");\nconst hash_256_1 = __webpack_require__(/*! ./types/hash-256 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nconst st_object_1 = __webpack_require__(/*! ./types/st-object */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/st-object.js\");\nconst uint_64_1 = __webpack_require__(/*! ./types/uint-64 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-64.js\");\nconst uint_32_1 = __webpack_require__(/*! ./types/uint-32 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-32.js\");\nconst uint_8_1 = __webpack_require__(/*! ./types/uint-8 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-8.js\");\nconst binary_parser_1 = __webpack_require__(/*! ./serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst bigInt = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\n/**\n * Computes the hash of a list of objects\n *\n * @param itemizer Converts an item into a format that can be added to SHAMap\n * @param itemsJson Array of items to add to a SHAMap\n * @returns the hash of the SHAMap\n */\nfunction computeHash(itemizer, itemsJson) {\n    const map = new shamap_1.ShaMap();\n    itemsJson.forEach((item) => map.addItem(...itemizer(item)));\n    return map.hash();\n}\n/**\n * Convert a transaction into an index and an item\n *\n * @param json transaction with metadata\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction transactionItemizer(json) {\n    assert.ok(json.hash);\n    const index = hash_256_1.Hash256.from(json.hash);\n    const item = {\n        hashPrefix() {\n            return hash_prefixes_1.HashPrefix.transaction;\n        },\n        toBytesSink(sink) {\n            const serializer = new binary_1.BinarySerializer(sink);\n            serializer.writeLengthEncoded(st_object_1.STObject.from(json));\n            serializer.writeLengthEncoded(st_object_1.STObject.from(json.metaData));\n        },\n    };\n    return [index, item, undefined];\n}\n/**\n * Convert an entry to a pair Hash256 and ShaMapNode\n *\n * @param json JSON describing a ledger entry item\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction entryItemizer(json) {\n    const index = hash_256_1.Hash256.from(json.index);\n    const bytes = (0, binary_1.serializeObject)(json);\n    const item = {\n        hashPrefix() {\n            return hash_prefixes_1.HashPrefix.accountStateEntry;\n        },\n        toBytesSink(sink) {\n            sink.put(bytes);\n        },\n    };\n    return [index, item, undefined];\n}\n/**\n * Function computing the hash of a transaction tree\n *\n * @param param An array of transaction objects to hash\n * @returns A Hash256 object\n */\nfunction transactionTreeHash(param) {\n    const itemizer = transactionItemizer;\n    return computeHash(itemizer, param);\n}\nexports.transactionTreeHash = transactionTreeHash;\n/**\n * Function computing the hash of accountState\n *\n * @param param A list of accountStates hash\n * @returns A Hash256 object\n */\nfunction accountStateHash(param) {\n    const itemizer = entryItemizer;\n    return computeHash(itemizer, param);\n}\nexports.accountStateHash = accountStateHash;\n/**\n * Serialize and hash a ledger header\n *\n * @param header a ledger header\n * @returns the hash of header\n */\nfunction ledgerHash(header) {\n    const hash = new hashes_1.Sha512Half();\n    hash.put(hash_prefixes_1.HashPrefix.ledgerHeader);\n    assert.ok(header.parent_close_time !== undefined);\n    assert.ok(header.close_flags !== undefined);\n    uint_32_1.UInt32.from(header.ledger_index).toBytesSink(hash);\n    uint_64_1.UInt64.from(bigInt(String(header.total_coins))).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.parent_hash).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.transaction_hash).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.account_hash).toBytesSink(hash);\n    uint_32_1.UInt32.from(header.parent_close_time).toBytesSink(hash);\n    uint_32_1.UInt32.from(header.close_time).toBytesSink(hash);\n    uint_8_1.UInt8.from(header.close_time_resolution).toBytesSink(hash);\n    uint_8_1.UInt8.from(header.close_flags).toBytesSink(hash);\n    return hash.finish();\n}\nexports.ledgerHash = ledgerHash;\n/**\n * Decodes a serialized ledger header\n *\n * @param binary A serialized ledger header\n * @param definitions Type definitions to parse the ledger objects.\n *      Used if there are non-default ledger objects to decode.\n * @returns A JSON object describing a ledger header\n */\nfunction decodeLedgerData(binary, definitions) {\n    assert.ok(typeof binary === 'string', 'binary must be a hex string');\n    const parser = new binary_parser_1.BinaryParser(binary, definitions);\n    return {\n        ledger_index: parser.readUInt32(),\n        total_coins: parser.readType(uint_64_1.UInt64).valueOf().toString(),\n        parent_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        transaction_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        account_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        parent_close_time: parser.readUInt32(),\n        close_time: parser.readUInt32(),\n        close_time_resolution: parser.readUInt8(),\n        close_flags: parser.readUInt8(),\n    };\n}\nexports.decodeLedgerData = decodeLedgerData;\n//# sourceMappingURL=ledger-hashes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/ledger-hashes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/quality.js":
/*!**********************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/quality.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.quality = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\");\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/decimal.js/decimal.js\");\nconst bigInt = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * class for encoding and decoding quality\n */\nclass quality {\n    /**\n     * Encode quality amount\n     *\n     * @param arg string representation of an amount\n     * @returns Serialized quality\n     */\n    static encode(quality) {\n        const decimal = new decimal_js_1.Decimal(quality);\n        const exponent = decimal.e - 15;\n        const qualityString = decimal.times(`1e${-exponent}`).abs().toString();\n        const bytes = types_1.coreTypes.UInt64.from(bigInt(qualityString)).toBytes();\n        bytes[0] = exponent + 100;\n        return bytes;\n    }\n    /**\n     * Decode quality amount\n     *\n     * @param arg hex-string denoting serialized quality\n     * @returns deserialized quality\n     */\n    static decode(quality) {\n        const bytes = buffer_1.Buffer.from(quality, 'hex').slice(-8);\n        const exponent = bytes[0] - 100;\n        const mantissa = new decimal_js_1.Decimal(`0x${bytes.slice(1).toString('hex')}`);\n        return mantissa.times(`1e${exponent}`);\n    }\n}\nexports.quality = quality;\n//# sourceMappingURL=quality.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3F1YWxpdHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFTO0FBQ2pDLHFCQUFxQixtQkFBTyxDQUFDLDhEQUFZO0FBQ3pDLGVBQWUsbUJBQU8sQ0FBQyxtRUFBYTtBQUNwQyxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxVQUFVO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELCtCQUErQjtBQUN0RixtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvcXVhbGl0eS5qcz9jZjU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5xdWFsaXR5ID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuY29uc3QgZGVjaW1hbF9qc18xID0gcmVxdWlyZShcImRlY2ltYWwuanNcIik7XG5jb25zdCBiaWdJbnQgPSByZXF1aXJlKFwiYmlnLWludGVnZXJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBjbGFzcyBmb3IgZW5jb2RpbmcgYW5kIGRlY29kaW5nIHF1YWxpdHlcbiAqL1xuY2xhc3MgcXVhbGl0eSB7XG4gICAgLyoqXG4gICAgICogRW5jb2RlIHF1YWxpdHkgYW1vdW50XG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJnIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhbiBhbW91bnRcbiAgICAgKiBAcmV0dXJucyBTZXJpYWxpemVkIHF1YWxpdHlcbiAgICAgKi9cbiAgICBzdGF0aWMgZW5jb2RlKHF1YWxpdHkpIHtcbiAgICAgICAgY29uc3QgZGVjaW1hbCA9IG5ldyBkZWNpbWFsX2pzXzEuRGVjaW1hbChxdWFsaXR5KTtcbiAgICAgICAgY29uc3QgZXhwb25lbnQgPSBkZWNpbWFsLmUgLSAxNTtcbiAgICAgICAgY29uc3QgcXVhbGl0eVN0cmluZyA9IGRlY2ltYWwudGltZXMoYDFlJHstZXhwb25lbnR9YCkuYWJzKCkudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSB0eXBlc18xLmNvcmVUeXBlcy5VSW50NjQuZnJvbShiaWdJbnQocXVhbGl0eVN0cmluZykpLnRvQnl0ZXMoKTtcbiAgICAgICAgYnl0ZXNbMF0gPSBleHBvbmVudCArIDEwMDtcbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNvZGUgcXVhbGl0eSBhbW91bnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmcgaGV4LXN0cmluZyBkZW5vdGluZyBzZXJpYWxpemVkIHF1YWxpdHlcbiAgICAgKiBAcmV0dXJucyBkZXNlcmlhbGl6ZWQgcXVhbGl0eVxuICAgICAqL1xuICAgIHN0YXRpYyBkZWNvZGUocXVhbGl0eSkge1xuICAgICAgICBjb25zdCBieXRlcyA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHF1YWxpdHksICdoZXgnKS5zbGljZSgtOCk7XG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gYnl0ZXNbMF0gLSAxMDA7XG4gICAgICAgIGNvbnN0IG1hbnRpc3NhID0gbmV3IGRlY2ltYWxfanNfMS5EZWNpbWFsKGAweCR7Ynl0ZXMuc2xpY2UoMSkudG9TdHJpbmcoJ2hleCcpfWApO1xuICAgICAgICByZXR1cm4gbWFudGlzc2EudGltZXMoYDFlJHtleHBvbmVudH1gKTtcbiAgICB9XG59XG5leHBvcnRzLnF1YWxpdHkgPSBxdWFsaXR5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVhbGl0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/quality.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinaryParser = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * BinaryParser is used to compute fields and values from a HexString\n */\nclass BinaryParser {\n    /**\n     * Initialize bytes to a hex string\n     *\n     * @param hexBytes a hex string\n     * @param definitions Rippled definitions used to parse the values of transaction types and such.\n     *                          Can be customized for sidechains and amendments.\n     */\n    constructor(hexBytes, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        this.bytes = buffer_1.Buffer.from(hexBytes, 'hex');\n        this.definitions = definitions;\n    }\n    /**\n     * Peek the first byte of the BinaryParser\n     *\n     * @returns The first byte of the BinaryParser\n     */\n    peek() {\n        assert.ok(this.bytes.byteLength !== 0);\n        return this.bytes[0];\n    }\n    /**\n     * Consume the first n bytes of the BinaryParser\n     *\n     * @param n the number of bytes to skip\n     */\n    skip(n) {\n        assert.ok(n <= this.bytes.byteLength);\n        this.bytes = this.bytes.slice(n);\n    }\n    /**\n     * read the first n bytes from the BinaryParser\n     *\n     * @param n The number of bytes to read\n     * @return The bytes\n     */\n    read(n) {\n        assert.ok(n <= this.bytes.byteLength);\n        const slice = this.bytes.slice(0, n);\n        this.skip(n);\n        return slice;\n    }\n    /**\n     * Read an integer of given size\n     *\n     * @param n The number of bytes to read\n     * @return The number represented by those bytes\n     */\n    readUIntN(n) {\n        assert.ok(0 < n && n <= 4, 'invalid n');\n        return this.read(n).reduce((a, b) => (a << 8) | b) >>> 0;\n    }\n    readUInt8() {\n        return this.readUIntN(1);\n    }\n    readUInt16() {\n        return this.readUIntN(2);\n    }\n    readUInt32() {\n        return this.readUIntN(4);\n    }\n    size() {\n        return this.bytes.byteLength;\n    }\n    end(customEnd) {\n        const length = this.bytes.byteLength;\n        return length === 0 || (customEnd !== undefined && length <= customEnd);\n    }\n    /**\n     * Reads variable length encoded bytes\n     *\n     * @return The variable length bytes\n     */\n    readVariableLength() {\n        return this.read(this.readVariableLengthLength());\n    }\n    /**\n     * Reads the length of the variable length encoded bytes\n     *\n     * @return The length of the variable length encoded bytes\n     */\n    readVariableLengthLength() {\n        const b1 = this.readUInt8();\n        if (b1 <= 192) {\n            return b1;\n        }\n        else if (b1 <= 240) {\n            const b2 = this.readUInt8();\n            return 193 + (b1 - 193) * 256 + b2;\n        }\n        else if (b1 <= 254) {\n            const b2 = this.readUInt8();\n            const b3 = this.readUInt8();\n            return 12481 + (b1 - 241) * 65536 + b2 * 256 + b3;\n        }\n        throw new Error('Invalid variable length indicator');\n    }\n    /**\n     * Reads the field ordinal from the BinaryParser\n     *\n     * @return Field ordinal\n     */\n    readFieldOrdinal() {\n        let type = this.readUInt8();\n        let nth = type & 15;\n        type >>= 4;\n        if (type === 0) {\n            type = this.readUInt8();\n            if (type === 0 || type < 16) {\n                throw new Error('Cannot read FieldOrdinal, type_code out of range');\n            }\n        }\n        if (nth === 0) {\n            nth = this.readUInt8();\n            if (nth === 0 || nth < 16) {\n                throw new Error('Cannot read FieldOrdinal, field_code out of range');\n            }\n        }\n        return (type << 16) | nth;\n    }\n    /**\n     * Read the field from the BinaryParser\n     *\n     * @return The field represented by the bytes at the head of the BinaryParser\n     */\n    readField() {\n        return this.definitions.field.fromString(this.readFieldOrdinal().toString());\n    }\n    /**\n     * Read a given type from the BinaryParser\n     *\n     * @param type The type that you want to read from the BinaryParser\n     * @return The instance of that type read from the BinaryParser\n     */\n    readType(type) {\n        return type.fromParser(this);\n    }\n    /**\n     * Get the type associated with a given field\n     *\n     * @param field The field that you wan to get the type of\n     * @return The type associated with the given field\n     */\n    typeForField(field) {\n        return field.associatedType;\n    }\n    /**\n     * Read value of the type specified by field from the BinaryParser\n     *\n     * @param field The field that you want to get the associated value for\n     * @return The value associated with the given field\n     */\n    readFieldValue(field) {\n        const type = this.typeForField(field);\n        if (!type) {\n            throw new Error(`unsupported: (${field.name}, ${field.type.name})`);\n        }\n        const sizeHint = field.isVariableLengthEncoded\n            ? this.readVariableLengthLength()\n            : undefined;\n        const value = type.fromParser(this, sizeHint);\n        if (value === undefined) {\n            throw new Error(`fromParser for (${field.name}, ${field.type.name}) -> undefined `);\n        }\n        return value;\n    }\n    /**\n     * Get the next field and value from the BinaryParser\n     *\n     * @return The field and value\n     */\n    readFieldAndValue() {\n        const field = this.readField();\n        return [field, this.readFieldValue(field)];\n    }\n}\nexports.BinaryParser = BinaryParser;\n//# sourceMappingURL=binary-parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinarySerializer = exports.BytesList = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Bytes list is a collection of buffer objects\n */\nclass BytesList {\n    constructor() {\n        this.bytesArray = [];\n    }\n    /**\n     * Get the total number of bytes in the BytesList\n     *\n     * @return the number of bytes\n     */\n    getLength() {\n        return buffer_1.Buffer.concat(this.bytesArray).byteLength;\n    }\n    /**\n     * Put bytes in the BytesList\n     *\n     * @param bytesArg A Buffer\n     * @return this BytesList\n     */\n    put(bytesArg) {\n        const bytes = buffer_1.Buffer.from(bytesArg); // Temporary, to catch instances of Uint8Array being passed in\n        this.bytesArray.push(bytes);\n        return this;\n    }\n    /**\n     * Write this BytesList to the back of another bytes list\n     *\n     *  @param list The BytesList to write to\n     */\n    toBytesSink(list) {\n        list.put(this.toBytes());\n    }\n    toBytes() {\n        return buffer_1.Buffer.concat(this.bytesArray);\n    }\n    toHex() {\n        return this.toBytes().toString('hex').toUpperCase();\n    }\n}\nexports.BytesList = BytesList;\n/**\n * BinarySerializer is used to write fields and values to buffers\n */\nclass BinarySerializer {\n    constructor(sink) {\n        this.sink = new BytesList();\n        this.sink = sink;\n    }\n    /**\n     * Write a value to this BinarySerializer\n     *\n     * @param value a SerializedType value\n     */\n    write(value) {\n        value.toBytesSink(this.sink);\n    }\n    /**\n     * Write bytes to this BinarySerializer\n     *\n     * @param bytes the bytes to write\n     */\n    put(bytes) {\n        this.sink.put(bytes);\n    }\n    /**\n     * Write a value of a given type to this BinarySerializer\n     *\n     * @param type the type to write\n     * @param value a value of that type\n     */\n    writeType(type, value) {\n        this.write(type.from(value));\n    }\n    /**\n     * Write BytesList to this BinarySerializer\n     *\n     * @param bl BytesList to write to BinarySerializer\n     */\n    writeBytesList(bl) {\n        bl.toBytesSink(this.sink);\n    }\n    /**\n     * Calculate the header of Variable Length encoded bytes\n     *\n     * @param length the length of the bytes\n     */\n    encodeVariableLength(length) {\n        const lenBytes = buffer_1.Buffer.alloc(3);\n        if (length <= 192) {\n            lenBytes[0] = length;\n            return lenBytes.slice(0, 1);\n        }\n        else if (length <= 12480) {\n            length -= 193;\n            lenBytes[0] = 193 + (length >>> 8);\n            lenBytes[1] = length & 0xff;\n            return lenBytes.slice(0, 2);\n        }\n        else if (length <= 918744) {\n            length -= 12481;\n            lenBytes[0] = 241 + (length >>> 16);\n            lenBytes[1] = (length >> 8) & 0xff;\n            lenBytes[2] = length & 0xff;\n            return lenBytes.slice(0, 3);\n        }\n        throw new Error('Overflow error');\n    }\n    /**\n     * Write field and value to BinarySerializer\n     *\n     * @param field field to write to BinarySerializer\n     * @param value value to write to BinarySerializer\n     */\n    writeFieldAndValue(field, value, isUnlModifyWorkaround = false) {\n        const associatedValue = field.associatedType.from(value);\n        assert.ok(associatedValue.toBytesSink !== undefined);\n        assert.ok(field.name !== undefined);\n        this.sink.put(field.header);\n        if (field.isVariableLengthEncoded) {\n            this.writeLengthEncoded(associatedValue, isUnlModifyWorkaround);\n        }\n        else {\n            associatedValue.toBytesSink(this.sink);\n        }\n    }\n    /**\n     * Write a variable length encoded value to the BinarySerializer\n     *\n     * @param value length encoded value to write to BytesList\n     */\n    writeLengthEncoded(value, isUnlModifyWorkaround = false) {\n        const bytes = new BytesList();\n        if (!isUnlModifyWorkaround) {\n            // this part doesn't happen for the Account field in a UNLModify transaction\n            value.toBytesSink(bytes);\n        }\n        this.put(this.encodeVariableLength(bytes.getLength()));\n        this.writeBytesList(bytes);\n    }\n}\nexports.BinarySerializer = BinarySerializer;\n//# sourceMappingURL=binary-serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/shamap.js":
/*!*********************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/shamap.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShaMapLeaf = exports.ShaMapNode = exports.ShaMap = void 0;\nconst assert_1 = __webpack_require__(/*! assert */ \"assert\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\");\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/./node_modules/ripple-binary-codec/dist/hashes.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Abstract class describing a SHAMapNode\n */\nclass ShaMapNode {\n}\nexports.ShaMapNode = ShaMapNode;\n/**\n * Class describing a Leaf of SHAMap\n */\nclass ShaMapLeaf extends ShaMapNode {\n    constructor(index, item) {\n        super();\n        this.index = index;\n        this.item = item;\n    }\n    /**\n     * @returns true as ShaMapLeaf is a leaf node\n     */\n    isLeaf() {\n        return true;\n    }\n    /**\n     * @returns false as ShaMapLeaf is not an inner node\n     */\n    isInner() {\n        return false;\n    }\n    /**\n     * Get the prefix of the this.item\n     *\n     * @returns The hash prefix, unless this.item is undefined, then it returns an empty Buffer\n     */\n    hashPrefix() {\n        return this.item === undefined ? buffer_1.Buffer.alloc(0) : this.item.hashPrefix();\n    }\n    /**\n     * Hash the bytes representation of this\n     *\n     * @returns hash of this.item concatenated with this.index\n     */\n    hash() {\n        const hash = hashes_1.Sha512Half.put(this.hashPrefix());\n        this.toBytesSink(hash);\n        return hash.finish();\n    }\n    /**\n     * Write the bytes representation of this to a BytesList\n     * @param list BytesList to write bytes to\n     */\n    toBytesSink(list) {\n        if (this.item !== undefined) {\n            this.item.toBytesSink(list);\n        }\n        this.index.toBytesSink(list);\n    }\n}\nexports.ShaMapLeaf = ShaMapLeaf;\n/**\n * Class defining an Inner Node of a SHAMap\n */\nclass ShaMapInner extends ShaMapNode {\n    constructor(depth = 0) {\n        super();\n        this.depth = depth;\n        this.slotBits = 0;\n        this.branches = Array(16);\n    }\n    /**\n     * @returns true as ShaMapInner is an inner node\n     */\n    isInner() {\n        return true;\n    }\n    /**\n     * @returns false as ShaMapInner is not a leaf node\n     */\n    isLeaf() {\n        return false;\n    }\n    /**\n     * Get the hash prefix for this node\n     *\n     * @returns hash prefix describing an inner node\n     */\n    hashPrefix() {\n        return hash_prefixes_1.HashPrefix.innerNode;\n    }\n    /**\n     * Set a branch of this node to be another node\n     *\n     * @param slot Slot to add branch to this.branches\n     * @param branch Branch to add\n     */\n    setBranch(slot, branch) {\n        this.slotBits = this.slotBits | (1 << slot);\n        this.branches[slot] = branch;\n    }\n    /**\n     * @returns true if node is empty\n     */\n    empty() {\n        return this.slotBits === 0;\n    }\n    /**\n     * Compute the hash of this node\n     *\n     * @returns The hash of this node\n     */\n    hash() {\n        if (this.empty()) {\n            return types_1.coreTypes.Hash256.ZERO_256;\n        }\n        const hash = hashes_1.Sha512Half.put(this.hashPrefix());\n        this.toBytesSink(hash);\n        return hash.finish();\n    }\n    /**\n     * Writes the bytes representation of this node to a BytesList\n     *\n     * @param list BytesList to write bytes to\n     */\n    toBytesSink(list) {\n        for (let i = 0; i < this.branches.length; i++) {\n            const branch = this.branches[i];\n            const hash = branch\n                ? branch.hash()\n                : types_1.coreTypes.Hash256.ZERO_256;\n            hash.toBytesSink(list);\n        }\n    }\n    /**\n     * Add item to the SHAMap\n     *\n     * @param index Hash of the index of the item being inserted\n     * @param item Item to insert in the map\n     * @param leaf Leaf node to insert when branch doesn't exist\n     */\n    addItem(index, item, leaf) {\n        assert_1.strict.ok(index !== undefined);\n        if (index !== undefined) {\n            const nibble = index.nibblet(this.depth);\n            const existing = this.branches[nibble];\n            if (existing === undefined) {\n                this.setBranch(nibble, leaf || new ShaMapLeaf(index, item));\n            }\n            else if (existing instanceof ShaMapLeaf) {\n                const newInner = new ShaMapInner(this.depth + 1);\n                newInner.addItem(existing.index, undefined, existing);\n                newInner.addItem(index, item, leaf);\n                this.setBranch(nibble, newInner);\n            }\n            else if (existing instanceof ShaMapInner) {\n                existing.addItem(index, item, leaf);\n            }\n            else {\n                throw new Error('invalid ShaMap.addItem call');\n            }\n        }\n    }\n}\nclass ShaMap extends ShaMapInner {\n}\nexports.ShaMap = ShaMap;\n//# sourceMappingURL=shamap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/shamap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/account-id.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountID = void 0;\nconst ripple_address_codec_1 = __webpack_require__(/*! ripple-address-codec */ \"(ssr)/./node_modules/ripple-address-codec/dist/index.js\");\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst HEX_REGEX = /^[A-F0-9]{40}$/;\n/**\n * Class defining how to encode and decode an AccountID\n */\nclass AccountID extends hash_160_1.Hash160 {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : AccountID.defaultAccountID.bytes);\n    }\n    /**\n     * Defines how to construct an AccountID\n     *\n     * @param value either an existing AccountID, a hex-string, or a base58 r-Address\n     * @returns an AccountID object\n     */\n    static from(value) {\n        if (value instanceof AccountID) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            if (value === '') {\n                return new AccountID();\n            }\n            return HEX_REGEX.test(value)\n                ? new AccountID(buffer_1.Buffer.from(value, 'hex'))\n                : this.fromBase58(value);\n        }\n        throw new Error('Cannot construct AccountID from value given');\n    }\n    /**\n     * Defines how to build an AccountID from a base58 r-Address\n     *\n     * @param value a base58 r-Address\n     * @returns an AccountID object\n     */\n    static fromBase58(value) {\n        if ((0, ripple_address_codec_1.isValidXAddress)(value)) {\n            const classic = (0, ripple_address_codec_1.xAddressToClassicAddress)(value);\n            if (classic.tag !== false)\n                throw new Error('Only allowed to have tag on Account or Destination');\n            value = classic.classicAddress;\n        }\n        return new AccountID(buffer_1.Buffer.from((0, ripple_address_codec_1.decodeAccountID)(value)));\n    }\n    /**\n     * Overload of toJSON\n     *\n     * @returns the base58 string for this AccountID\n     */\n    toJSON() {\n        return this.toBase58();\n    }\n    /**\n     * Defines how to encode AccountID into a base58 address\n     *\n     * @returns the base58 string defined by this.bytes\n     */\n    toBase58() {\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        return (0, ripple_address_codec_1.encodeAccountID)(this.bytes);\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n    }\n}\nexports.AccountID = AccountID;\nAccountID.defaultAccountID = new AccountID(buffer_1.Buffer.alloc(20));\n//# sourceMappingURL=account-id.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2FjY291bnQtaWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLCtCQUErQixtQkFBTyxDQUFDLHFGQUFzQjtBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2QyxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQyw2QkFBNkIsR0FBRztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvYWNjb3VudC1pZC5qcz80NDc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY2NvdW50SUQgPSB2b2lkIDA7XG5jb25zdCByaXBwbGVfYWRkcmVzc19jb2RlY18xID0gcmVxdWlyZShcInJpcHBsZS1hZGRyZXNzLWNvZGVjXCIpO1xuY29uc3QgaGFzaF8xNjBfMSA9IHJlcXVpcmUoXCIuL2hhc2gtMTYwXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyL1wiKTtcbmNvbnN0IEhFWF9SRUdFWCA9IC9eW0EtRjAtOV17NDB9JC87XG4vKipcbiAqIENsYXNzIGRlZmluaW5nIGhvdyB0byBlbmNvZGUgYW5kIGRlY29kZSBhbiBBY2NvdW50SURcbiAqL1xuY2xhc3MgQWNjb3VudElEIGV4dGVuZHMgaGFzaF8xNjBfMS5IYXNoMTYwIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBBY2NvdW50SUQuZGVmYXVsdEFjY291bnRJRC5ieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaG93IHRvIGNvbnN0cnVjdCBhbiBBY2NvdW50SURcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBlaXRoZXIgYW4gZXhpc3RpbmcgQWNjb3VudElELCBhIGhleC1zdHJpbmcsIG9yIGEgYmFzZTU4IHItQWRkcmVzc1xuICAgICAqIEByZXR1cm5zIGFuIEFjY291bnRJRCBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2NvdW50SUQpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQWNjb3VudElEKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gSEVYX1JFR0VYLnRlc3QodmFsdWUpXG4gICAgICAgICAgICAgICAgPyBuZXcgQWNjb3VudElEKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHZhbHVlLCAnaGV4JykpXG4gICAgICAgICAgICAgICAgOiB0aGlzLmZyb21CYXNlNTgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBBY2NvdW50SUQgZnJvbSB2YWx1ZSBnaXZlbicpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGhvdyB0byBidWlsZCBhbiBBY2NvdW50SUQgZnJvbSBhIGJhc2U1OCByLUFkZHJlc3NcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBhIGJhc2U1OCByLUFkZHJlc3NcbiAgICAgKiBAcmV0dXJucyBhbiBBY2NvdW50SUQgb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb21CYXNlNTgodmFsdWUpIHtcbiAgICAgICAgaWYgKCgwLCByaXBwbGVfYWRkcmVzc19jb2RlY18xLmlzVmFsaWRYQWRkcmVzcykodmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCBjbGFzc2ljID0gKDAsIHJpcHBsZV9hZGRyZXNzX2NvZGVjXzEueEFkZHJlc3NUb0NsYXNzaWNBZGRyZXNzKSh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoY2xhc3NpYy50YWcgIT09IGZhbHNlKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignT25seSBhbGxvd2VkIHRvIGhhdmUgdGFnIG9uIEFjY291bnQgb3IgRGVzdGluYXRpb24nKTtcbiAgICAgICAgICAgIHZhbHVlID0gY2xhc3NpYy5jbGFzc2ljQWRkcmVzcztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEFjY291bnRJRChidWZmZXJfMS5CdWZmZXIuZnJvbSgoMCwgcmlwcGxlX2FkZHJlc3NfY29kZWNfMS5kZWNvZGVBY2NvdW50SUQpKHZhbHVlKSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdmVybG9hZCBvZiB0b0pTT05cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBiYXNlNTggc3RyaW5nIGZvciB0aGlzIEFjY291bnRJRFxuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9CYXNlNTgoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBob3cgdG8gZW5jb2RlIEFjY291bnRJRCBpbnRvIGEgYmFzZTU4IGFkZHJlc3NcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBiYXNlNTggc3RyaW5nIGRlZmluZWQgYnkgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvQmFzZTU4KCkge1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG4gICAgICAgIHJldHVybiAoMCwgcmlwcGxlX2FkZHJlc3NfY29kZWNfMS5lbmNvZGVBY2NvdW50SUQpKHRoaXMuYnl0ZXMpO1xuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbiAgICB9XG59XG5leHBvcnRzLkFjY291bnRJRCA9IEFjY291bnRJRDtcbkFjY291bnRJRC5kZWZhdWx0QWNjb3VudElEID0gbmV3IEFjY291bnRJRChidWZmZXJfMS5CdWZmZXIuYWxsb2MoMjApKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnQtaWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/amount.js":
/*!***************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/amount.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Amount = void 0;\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/decimal.js/decimal.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst bigInt = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Constants for validating amounts\n */\nconst MIN_IOU_EXPONENT = -96;\nconst MAX_IOU_EXPONENT = 80;\nconst MAX_IOU_PRECISION = 16;\nconst MAX_DROPS = new decimal_js_1.Decimal('1e17');\nconst MIN_XRP = new decimal_js_1.Decimal('1e-6');\nconst mask = bigInt(0x00000000ffffffff);\n/**\n * decimal.js configuration for Amount IOUs\n */\ndecimal_js_1.Decimal.config({\n    toExpPos: MAX_IOU_EXPONENT + MAX_IOU_PRECISION,\n    toExpNeg: MIN_IOU_EXPONENT - MAX_IOU_PRECISION,\n});\n/**\n * Type guard for AmountObject\n */\nfunction isAmountObject(arg) {\n    const keys = Object.keys(arg).sort();\n    return (keys.length === 3 &&\n        keys[0] === 'currency' &&\n        keys[1] === 'issuer' &&\n        keys[2] === 'value');\n}\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Amount extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Amount.defaultAmount.bytes);\n    }\n    /**\n     * Construct an amount from an IOU or string amount\n     *\n     * @param value An Amount, object representing an IOU, or a string\n     *     representing an integer amount\n     * @returns An Amount object\n     */\n    static from(value) {\n        if (value instanceof Amount) {\n            return value;\n        }\n        let amount = buffer_1.Buffer.alloc(8);\n        if (typeof value === 'string') {\n            Amount.assertXrpIsValid(value);\n            const number = bigInt(value);\n            const intBuf = [buffer_1.Buffer.alloc(4), buffer_1.Buffer.alloc(4)];\n            intBuf[0].writeUInt32BE(Number(number.shiftRight(32)), 0);\n            intBuf[1].writeUInt32BE(Number(number.and(mask)), 0);\n            amount = buffer_1.Buffer.concat(intBuf);\n            amount[0] |= 0x40;\n            return new Amount(amount);\n        }\n        if (isAmountObject(value)) {\n            const number = new decimal_js_1.Decimal(value.value);\n            Amount.assertIouIsValid(number);\n            if (number.isZero()) {\n                amount[0] |= 0x80;\n            }\n            else {\n                const integerNumberString = number\n                    .times(`1e${-(number.e - 15)}`)\n                    .abs()\n                    .toString();\n                const num = bigInt(integerNumberString);\n                const intBuf = [buffer_1.Buffer.alloc(4), buffer_1.Buffer.alloc(4)];\n                intBuf[0].writeUInt32BE(Number(num.shiftRight(32)), 0);\n                intBuf[1].writeUInt32BE(Number(num.and(mask)), 0);\n                amount = buffer_1.Buffer.concat(intBuf);\n                amount[0] |= 0x80;\n                if (number.gt(new decimal_js_1.Decimal(0))) {\n                    amount[0] |= 0x40;\n                }\n                const exponent = number.e - 15;\n                const exponentByte = 97 + exponent;\n                amount[0] |= exponentByte >>> 2;\n                amount[1] |= (exponentByte & 0x03) << 6;\n            }\n            const currency = currency_1.Currency.from(value.currency).toBytes();\n            const issuer = account_id_1.AccountID.from(value.issuer).toBytes();\n            return new Amount(buffer_1.Buffer.concat([amount, currency, issuer]));\n        }\n        throw new Error('Invalid type to construct an Amount');\n    }\n    /**\n     * Read an amount from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Amount from\n     * @returns An Amount object\n     */\n    static fromParser(parser) {\n        const isXRP = parser.peek() & 0x80;\n        const numBytes = isXRP ? 48 : 8;\n        return new Amount(parser.read(numBytes));\n    }\n    /**\n     * Get the JSON representation of this Amount\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        if (this.isNative()) {\n            const bytes = this.bytes;\n            const isPositive = bytes[0] & 0x40;\n            const sign = isPositive ? '' : '-';\n            bytes[0] &= 0x3f;\n            const msb = bigInt(bytes.slice(0, 4).readUInt32BE(0));\n            const lsb = bigInt(bytes.slice(4).readUInt32BE(0));\n            const num = msb.shiftLeft(32).or(lsb);\n            return `${sign}${num.toString()}`;\n        }\n        else {\n            const parser = new binary_parser_1.BinaryParser(this.toString());\n            const mantissa = parser.read(8);\n            const currency = currency_1.Currency.fromParser(parser);\n            const issuer = account_id_1.AccountID.fromParser(parser);\n            const b1 = mantissa[0];\n            const b2 = mantissa[1];\n            const isPositive = b1 & 0x40;\n            const sign = isPositive ? '' : '-';\n            const exponent = ((b1 & 0x3f) << 2) + ((b2 & 0xff) >> 6) - 97;\n            mantissa[0] = 0;\n            mantissa[1] &= 0x3f;\n            const value = new decimal_js_1.Decimal(`${sign}0x${mantissa.toString('hex')}`).times(`1e${exponent}`);\n            Amount.assertIouIsValid(value);\n            return {\n                value: value.toString(),\n                currency: currency.toJSON(),\n                issuer: issuer.toJSON(),\n            };\n        }\n    }\n    /**\n     * Validate XRP amount\n     *\n     * @param amount String representing XRP amount\n     * @returns void, but will throw if invalid amount\n     */\n    static assertXrpIsValid(amount) {\n        if (amount.indexOf('.') !== -1) {\n            throw new Error(`${amount.toString()} is an illegal amount`);\n        }\n        const decimal = new decimal_js_1.Decimal(amount);\n        if (!decimal.isZero()) {\n            if (decimal.lt(MIN_XRP) || decimal.gt(MAX_DROPS)) {\n                throw new Error(`${amount.toString()} is an illegal amount`);\n            }\n        }\n    }\n    /**\n     * Validate IOU.value amount\n     *\n     * @param decimal Decimal.js object representing IOU.value\n     * @returns void, but will throw if invalid amount\n     */\n    static assertIouIsValid(decimal) {\n        if (!decimal.isZero()) {\n            const p = decimal.precision();\n            const e = decimal.e - 15;\n            if (p > MAX_IOU_PRECISION ||\n                e > MAX_IOU_EXPONENT ||\n                e < MIN_IOU_EXPONENT) {\n                throw new Error('Decimal precision out of range');\n            }\n            this.verifyNoDecimal(decimal);\n        }\n    }\n    /**\n     * Ensure that the value after being multiplied by the exponent does not\n     * contain a decimal.\n     *\n     * @param decimal a Decimal object\n     * @returns a string of the object without a decimal\n     */\n    static verifyNoDecimal(decimal) {\n        const integerNumberString = decimal\n            .times(`1e${-(decimal.e - 15)}`)\n            .abs()\n            .toString();\n        if (integerNumberString.indexOf('.') !== -1) {\n            throw new Error('Decimal place found in integerNumberString');\n        }\n    }\n    /**\n     * Test if this amount is in units of Native Currency(XRP)\n     *\n     * @returns true if Native (XRP)\n     */\n    isNative() {\n        return (this.bytes[0] & 0x80) === 0;\n    }\n}\nexports.Amount = Amount;\nAmount.defaultAmount = new Amount(buffer_1.Buffer.from('4000000000000000', 'hex'));\n//# sourceMappingURL=amount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/amount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/blob.js":
/*!*************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/blob.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Blob = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Variable length encoded type\n */\nclass Blob extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Defines how to read a Blob from a BinaryParser\n     *\n     * @param parser The binary parser to read the Blob from\n     * @param hint The length of the blob, computed by readVariableLengthLength() and passed in\n     * @returns A Blob object\n     */\n    static fromParser(parser, hint) {\n        return new Blob(parser.read(hint));\n    }\n    /**\n     * Create a Blob object from a hex-string\n     *\n     * @param value existing Blob object or a hex-string\n     * @returns A Blob object\n     */\n    static from(value) {\n        if (value instanceof Blob) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return new Blob(buffer_1.Buffer.from(value, 'hex'));\n        }\n        throw new Error('Cannot construct Blob from value given');\n    }\n}\nexports.Blob = Blob;\n//# sourceMappingURL=blob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2Jsb2IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLDBCQUEwQixtQkFBTyxDQUFDLGlHQUFtQjtBQUNyRCxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9ibG9iLmpzPzQxMDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJsb2IgPSB2b2lkIDA7XG5jb25zdCBzZXJpYWxpemVkX3R5cGVfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZWQtdHlwZVwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKipcbiAqIFZhcmlhYmxlIGxlbmd0aCBlbmNvZGVkIHR5cGVcbiAqL1xuY2xhc3MgQmxvYiBleHRlbmRzIHNlcmlhbGl6ZWRfdHlwZV8xLlNlcmlhbGl6ZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaG93IHRvIHJlYWQgYSBCbG9iIGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgVGhlIGJpbmFyeSBwYXJzZXIgdG8gcmVhZCB0aGUgQmxvYiBmcm9tXG4gICAgICogQHBhcmFtIGhpbnQgVGhlIGxlbmd0aCBvZiB0aGUgYmxvYiwgY29tcHV0ZWQgYnkgcmVhZFZhcmlhYmxlTGVuZ3RoTGVuZ3RoKCkgYW5kIHBhc3NlZCBpblxuICAgICAqIEByZXR1cm5zIEEgQmxvYiBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIsIGhpbnQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCbG9iKHBhcnNlci5yZWFkKGhpbnQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgQmxvYiBvYmplY3QgZnJvbSBhIGhleC1zdHJpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBleGlzdGluZyBCbG9iIG9iamVjdCBvciBhIGhleC1zdHJpbmdcbiAgICAgKiBAcmV0dXJucyBBIEJsb2Igb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEJsb2IoYnVmZmVyXzEuQnVmZmVyLmZyb20odmFsdWUsICdoZXgnKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IEJsb2IgZnJvbSB2YWx1ZSBnaXZlbicpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvYiA9IEJsb2I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ibG9iLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/currency.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Currency = void 0;\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst XRP_HEX_REGEX = /^0{40}$/;\nconst ISO_REGEX = /^[A-Z0-9a-z?!@#$%^&*(){}[\\]|]{3}$/;\nconst HEX_REGEX = /^[A-F0-9]{40}$/;\n// eslint-disable-next-line no-control-regex\nconst STANDARD_FORMAT_HEX_REGEX = /^0{24}[\\x00-\\x7F]{6}0{10}$/;\n/**\n * Convert an ISO code to a currency bytes representation\n */\nfunction isoToBytes(iso) {\n    const bytes = buffer_1.Buffer.alloc(20);\n    if (iso !== 'XRP') {\n        const isoBytes = iso.split('').map((c) => c.charCodeAt(0));\n        bytes.set(isoBytes, 12);\n    }\n    return bytes;\n}\n/**\n * Tests if ISO is a valid iso code\n */\nfunction isIsoCode(iso) {\n    return ISO_REGEX.test(iso);\n}\nfunction isoCodeFromHex(code) {\n    const iso = code.toString();\n    if (iso === 'XRP') {\n        return null;\n    }\n    if (isIsoCode(iso)) {\n        return iso;\n    }\n    return null;\n}\n/**\n * Tests if hex is a valid hex-string\n */\nfunction isHex(hex) {\n    return HEX_REGEX.test(hex);\n}\n/**\n * Tests if a string is a valid representation of a currency\n */\nfunction isStringRepresentation(input) {\n    return input.length === 3 || isHex(input);\n}\n/**\n * Tests if a Buffer is a valid representation of a currency\n */\nfunction isBytesArray(bytes) {\n    return bytes.byteLength === 20;\n}\n/**\n * Ensures that a value is a valid representation of a currency\n */\nfunction isValidRepresentation(input) {\n    return input instanceof buffer_1.Buffer\n        ? isBytesArray(input)\n        : isStringRepresentation(input);\n}\n/**\n * Generate bytes from a string or buffer representation of a currency\n */\nfunction bytesFromRepresentation(input) {\n    if (!isValidRepresentation(input)) {\n        throw new Error(`Unsupported Currency representation: ${input}`);\n    }\n    return input.length === 3 ? isoToBytes(input) : buffer_1.Buffer.from(input, 'hex');\n}\n/**\n * Class defining how to encode and decode Currencies\n */\nclass Currency extends hash_160_1.Hash160 {\n    constructor(byteBuf) {\n        super(byteBuf !== null && byteBuf !== void 0 ? byteBuf : Currency.XRP.bytes);\n        const hex = this.bytes.toString('hex');\n        if (XRP_HEX_REGEX.test(hex)) {\n            this._iso = 'XRP';\n        }\n        else if (STANDARD_FORMAT_HEX_REGEX.test(hex)) {\n            this._iso = isoCodeFromHex(this.bytes.slice(12, 15));\n        }\n        else {\n            this._iso = null;\n        }\n    }\n    /**\n     * Return the ISO code of this currency\n     *\n     * @returns ISO code if it exists, else null\n     */\n    iso() {\n        return this._iso;\n    }\n    /**\n     * Constructs a Currency object\n     *\n     * @param val Currency object or a string representation of a currency\n     */\n    static from(value) {\n        if (value instanceof Currency) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return new Currency(bytesFromRepresentation(value));\n        }\n        throw new Error('Cannot construct Currency from value given');\n    }\n    /**\n     * Gets the JSON representation of a currency\n     *\n     * @returns JSON representation\n     */\n    toJSON() {\n        const iso = this.iso();\n        if (iso !== null) {\n            return iso;\n        }\n        return this.bytes.toString('hex').toUpperCase();\n    }\n}\nexports.Currency = Currency;\nCurrency.XRP = new Currency(buffer_1.Buffer.alloc(20));\n//# sourceMappingURL=currency.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2N1cnJlbmN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2QyxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQywwQkFBMEIsR0FBRztBQUM3QiwyQ0FBMkMsTUFBTSxFQUFFO0FBQ25ELDZCQUE2QixHQUFHO0FBQ2hDO0FBQ0Esc0NBQXNDLEdBQUcsWUFBWSxFQUFFLEVBQUUsR0FBRztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxNQUFNO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9jdXJyZW5jeS5qcz8zMzQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DdXJyZW5jeSA9IHZvaWQgMDtcbmNvbnN0IGhhc2hfMTYwXzEgPSByZXF1aXJlKFwiLi9oYXNoLTE2MFwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG5jb25zdCBYUlBfSEVYX1JFR0VYID0gL14wezQwfSQvO1xuY29uc3QgSVNPX1JFR0VYID0gL15bQS1aMC05YS16PyFAIyQlXiYqKCl7fVtcXF18XXszfSQvO1xuY29uc3QgSEVYX1JFR0VYID0gL15bQS1GMC05XXs0MH0kLztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4XG5jb25zdCBTVEFOREFSRF9GT1JNQVRfSEVYX1JFR0VYID0gL14wezI0fVtcXHgwMC1cXHg3Rl17Nn0wezEwfSQvO1xuLyoqXG4gKiBDb252ZXJ0IGFuIElTTyBjb2RlIHRvIGEgY3VycmVuY3kgYnl0ZXMgcmVwcmVzZW50YXRpb25cbiAqL1xuZnVuY3Rpb24gaXNvVG9CeXRlcyhpc28pIHtcbiAgICBjb25zdCBieXRlcyA9IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYygyMCk7XG4gICAgaWYgKGlzbyAhPT0gJ1hSUCcpIHtcbiAgICAgICAgY29uc3QgaXNvQnl0ZXMgPSBpc28uc3BsaXQoJycpLm1hcCgoYykgPT4gYy5jaGFyQ29kZUF0KDApKTtcbiAgICAgICAgYnl0ZXMuc2V0KGlzb0J5dGVzLCAxMik7XG4gICAgfVxuICAgIHJldHVybiBieXRlcztcbn1cbi8qKlxuICogVGVzdHMgaWYgSVNPIGlzIGEgdmFsaWQgaXNvIGNvZGVcbiAqL1xuZnVuY3Rpb24gaXNJc29Db2RlKGlzbykge1xuICAgIHJldHVybiBJU09fUkVHRVgudGVzdChpc28pO1xufVxuZnVuY3Rpb24gaXNvQ29kZUZyb21IZXgoY29kZSkge1xuICAgIGNvbnN0IGlzbyA9IGNvZGUudG9TdHJpbmcoKTtcbiAgICBpZiAoaXNvID09PSAnWFJQJykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGlzSXNvQ29kZShpc28pKSB7XG4gICAgICAgIHJldHVybiBpc287XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuLyoqXG4gKiBUZXN0cyBpZiBoZXggaXMgYSB2YWxpZCBoZXgtc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGlzSGV4KGhleCkge1xuICAgIHJldHVybiBIRVhfUkVHRVgudGVzdChoZXgpO1xufVxuLyoqXG4gKiBUZXN0cyBpZiBhIHN0cmluZyBpcyBhIHZhbGlkIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmdSZXByZXNlbnRhdGlvbihpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dC5sZW5ndGggPT09IDMgfHwgaXNIZXgoaW5wdXQpO1xufVxuLyoqXG4gKiBUZXN0cyBpZiBhIEJ1ZmZlciBpcyBhIHZhbGlkIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gaXNCeXRlc0FycmF5KGJ5dGVzKSB7XG4gICAgcmV0dXJuIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDIwO1xufVxuLyoqXG4gKiBFbnN1cmVzIHRoYXQgYSB2YWx1ZSBpcyBhIHZhbGlkIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gaXNWYWxpZFJlcHJlc2VudGF0aW9uKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0IGluc3RhbmNlb2YgYnVmZmVyXzEuQnVmZmVyXG4gICAgICAgID8gaXNCeXRlc0FycmF5KGlucHV0KVxuICAgICAgICA6IGlzU3RyaW5nUmVwcmVzZW50YXRpb24oaW5wdXQpO1xufVxuLyoqXG4gKiBHZW5lcmF0ZSBieXRlcyBmcm9tIGEgc3RyaW5nIG9yIGJ1ZmZlciByZXByZXNlbnRhdGlvbiBvZiBhIGN1cnJlbmN5XG4gKi9cbmZ1bmN0aW9uIGJ5dGVzRnJvbVJlcHJlc2VudGF0aW9uKGlucHV0KSB7XG4gICAgaWYgKCFpc1ZhbGlkUmVwcmVzZW50YXRpb24oaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgQ3VycmVuY3kgcmVwcmVzZW50YXRpb246ICR7aW5wdXR9YCk7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dC5sZW5ndGggPT09IDMgPyBpc29Ub0J5dGVzKGlucHV0KSA6IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0LCAnaGV4Jyk7XG59XG4vKipcbiAqIENsYXNzIGRlZmluaW5nIGhvdyB0byBlbmNvZGUgYW5kIGRlY29kZSBDdXJyZW5jaWVzXG4gKi9cbmNsYXNzIEN1cnJlbmN5IGV4dGVuZHMgaGFzaF8xNjBfMS5IYXNoMTYwIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlQnVmKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVCdWYgIT09IG51bGwgJiYgYnl0ZUJ1ZiAhPT0gdm9pZCAwID8gYnl0ZUJ1ZiA6IEN1cnJlbmN5LlhSUC5ieXRlcyk7XG4gICAgICAgIGNvbnN0IGhleCA9IHRoaXMuYnl0ZXMudG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICBpZiAoWFJQX0hFWF9SRUdFWC50ZXN0KGhleCkpIHtcbiAgICAgICAgICAgIHRoaXMuX2lzbyA9ICdYUlAnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKFNUQU5EQVJEX0ZPUk1BVF9IRVhfUkVHRVgudGVzdChoZXgpKSB7XG4gICAgICAgICAgICB0aGlzLl9pc28gPSBpc29Db2RlRnJvbUhleCh0aGlzLmJ5dGVzLnNsaWNlKDEyLCAxNSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faXNvID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIElTTyBjb2RlIG9mIHRoaXMgY3VycmVuY3lcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIElTTyBjb2RlIGlmIGl0IGV4aXN0cywgZWxzZSBudWxsXG4gICAgICovXG4gICAgaXNvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNvO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGEgQ3VycmVuY3kgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsIEN1cnJlbmN5IG9iamVjdCBvciBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhIGN1cnJlbmN5XG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQ3VycmVuY3kpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDdXJyZW5jeShieXRlc0Zyb21SZXByZXNlbnRhdGlvbih2YWx1ZSkpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBDdXJyZW5jeSBmcm9tIHZhbHVlIGdpdmVuJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIEpTT04gcmVwcmVzZW50YXRpb24gb2YgYSBjdXJyZW5jeVxuICAgICAqXG4gICAgICogQHJldHVybnMgSlNPTiByZXByZXNlbnRhdGlvblxuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgY29uc3QgaXNvID0gdGhpcy5pc28oKTtcbiAgICAgICAgaWYgKGlzbyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzbztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5ieXRlcy50b1N0cmluZygnaGV4JykudG9VcHBlckNhc2UoKTtcbiAgICB9XG59XG5leHBvcnRzLkN1cnJlbmN5ID0gQ3VycmVuY3k7XG5DdXJyZW5jeS5YUlAgPSBuZXcgQ3VycmVuY3koYnVmZmVyXzEuQnVmZmVyLmFsbG9jKDIwKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXJyZW5jeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-128.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/hash-128.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash128 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Hash with a width of 128 bits\n */\nclass Hash128 extends hash_1.Hash {\n    constructor(bytes) {\n        if (bytes && bytes.byteLength === 0) {\n            bytes = Hash128.ZERO_128.bytes;\n        }\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash128.ZERO_128.bytes);\n    }\n    /**\n     * Get the hex representation of a hash-128 bytes, allowing unset\n     *\n     * @returns hex String of this.bytes\n     */\n    toHex() {\n        const hex = this.toBytes().toString('hex').toUpperCase();\n        if (/^0+$/.exec(hex)) {\n            return '';\n        }\n        return hex;\n    }\n}\nexports.Hash128 = Hash128;\nHash128.width = 16;\nHash128.ZERO_128 = new Hash128(buffer_1.Buffer.alloc(Hash128.width));\n//# sourceMappingURL=hash-128.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2hhc2gtMTI4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixlQUFlLG1CQUFPLENBQUMsMkVBQVE7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTEyOC5qcz8wODlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoMTI4ID0gdm9pZCAwO1xuY29uc3QgaGFzaF8xID0gcmVxdWlyZShcIi4vaGFzaFwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDEyOCBiaXRzXG4gKi9cbmNsYXNzIEhhc2gxMjggZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzICYmIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGJ5dGVzID0gSGFzaDEyOC5aRVJPXzEyOC5ieXRlcztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBIYXNoMTI4LlpFUk9fMTI4LmJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBoZXggcmVwcmVzZW50YXRpb24gb2YgYSBoYXNoLTEyOCBieXRlcywgYWxsb3dpbmcgdW5zZXRcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGhleCBTdHJpbmcgb2YgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvSGV4KCkge1xuICAgICAgICBjb25zdCBoZXggPSB0aGlzLnRvQnl0ZXMoKS50b1N0cmluZygnaGV4JykudG9VcHBlckNhc2UoKTtcbiAgICAgICAgaWYgKC9eMCskLy5leGVjKGhleCkpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGV4O1xuICAgIH1cbn1cbmV4cG9ydHMuSGFzaDEyOCA9IEhhc2gxMjg7XG5IYXNoMTI4LndpZHRoID0gMTY7XG5IYXNoMTI4LlpFUk9fMTI4ID0gbmV3IEhhc2gxMjgoYnVmZmVyXzEuQnVmZmVyLmFsbG9jKEhhc2gxMjgud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtMTI4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-128.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-160.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/hash-160.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash160 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Hash with a width of 160 bits\n */\nclass Hash160 extends hash_1.Hash {\n    constructor(bytes) {\n        if (bytes && bytes.byteLength === 0) {\n            bytes = Hash160.ZERO_160.bytes;\n        }\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash160.ZERO_160.bytes);\n    }\n}\nexports.Hash160 = Hash160;\nHash160.width = 20;\nHash160.ZERO_160 = new Hash160(buffer_1.Buffer.alloc(Hash160.width));\n//# sourceMappingURL=hash-160.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2hhc2gtMTYwLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixlQUFlLG1CQUFPLENBQUMsMkVBQVE7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTE2MC5qcz9jN2MyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoMTYwID0gdm9pZCAwO1xuY29uc3QgaGFzaF8xID0gcmVxdWlyZShcIi4vaGFzaFwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDE2MCBiaXRzXG4gKi9cbmNsYXNzIEhhc2gxNjAgZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzICYmIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGJ5dGVzID0gSGFzaDE2MC5aRVJPXzE2MC5ieXRlcztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBIYXNoMTYwLlpFUk9fMTYwLmJ5dGVzKTtcbiAgICB9XG59XG5leHBvcnRzLkhhc2gxNjAgPSBIYXNoMTYwO1xuSGFzaDE2MC53aWR0aCA9IDIwO1xuSGFzaDE2MC5aRVJPXzE2MCA9IG5ldyBIYXNoMTYwKGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhIYXNoMTYwLndpZHRoKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLTE2MC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-160.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/hash-256.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash256 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Hash with a width of 256 bits\n */\nclass Hash256 extends hash_1.Hash {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash256.ZERO_256.bytes);\n    }\n}\nexports.Hash256 = Hash256;\nHash256.width = 32;\nHash256.ZERO_256 = new Hash256(buffer_1.Buffer.alloc(Hash256.width));\n//# sourceMappingURL=hash-256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2hhc2gtMjU2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixlQUFlLG1CQUFPLENBQUMsMkVBQVE7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTI1Ni5qcz8wNTU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoMjU2ID0gdm9pZCAwO1xuY29uc3QgaGFzaF8xID0gcmVxdWlyZShcIi4vaGFzaFwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDI1NiBiaXRzXG4gKi9cbmNsYXNzIEhhc2gyNTYgZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogSGFzaDI1Ni5aRVJPXzI1Ni5ieXRlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5IYXNoMjU2ID0gSGFzaDI1Njtcbkhhc2gyNTYud2lkdGggPSAzMjtcbkhhc2gyNTYuWkVST18yNTYgPSBuZXcgSGFzaDI1NihidWZmZXJfMS5CdWZmZXIuYWxsb2MoSGFzaDI1Ni53aWR0aCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaC0yNTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/hash.js":
/*!*************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/hash.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Base class defining how to encode and decode hashes\n */\nclass Hash extends serialized_type_1.Comparable {\n    constructor(bytes) {\n        super(bytes);\n        if (this.bytes.byteLength !== this.constructor.width) {\n            throw new Error(`Invalid Hash length ${this.bytes.byteLength}`);\n        }\n    }\n    /**\n     * Construct a Hash object from an existing Hash object or a hex-string\n     *\n     * @param value A hash object or hex-string of a hash\n     */\n    static from(value) {\n        if (value instanceof this) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return new this(buffer_1.Buffer.from(value, 'hex'));\n        }\n        throw new Error('Cannot construct Hash from given value');\n    }\n    /**\n     * Read a Hash object from a BinaryParser\n     *\n     * @param parser BinaryParser to read the hash from\n     * @param hint length of the bytes to read, optional\n     */\n    static fromParser(parser, hint) {\n        return new this(parser.read(hint !== null && hint !== void 0 ? hint : this.width));\n    }\n    /**\n     * Overloaded operator for comparing two hash objects\n     *\n     * @param other The Hash to compare this to\n     */\n    compareTo(other) {\n        return this.bytes.compare(this.constructor.from(other).bytes);\n    }\n    /**\n     * @returns the hex-string representation of this Hash\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * Returns four bits at the specified depth within a hash\n     *\n     * @param depth The depth of the four bits\n     * @returns The number represented by the four bits\n     */\n    nibblet(depth) {\n        const byteIx = depth > 0 ? (depth / 2) | 0 : 0;\n        let b = this.bytes[byteIx];\n        if (depth % 2 === 0) {\n            b = (b & 0xf0) >>> 4;\n        }\n        else {\n            b = b & 0x0f;\n        }\n        return b;\n    }\n}\nexports.Hash = Hash;\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2hhc2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLDBCQUEwQixtQkFBTyxDQUFDLGlHQUFtQjtBQUNyRCxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxzQkFBc0I7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaGFzaC5qcz83MGM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoID0gdm9pZCAwO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBCYXNlIGNsYXNzIGRlZmluaW5nIGhvdyB0byBlbmNvZGUgYW5kIGRlY29kZSBoYXNoZXNcbiAqL1xuY2xhc3MgSGFzaCBleHRlbmRzIHNlcmlhbGl6ZWRfdHlwZV8xLkNvbXBhcmFibGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzKTtcbiAgICAgICAgaWYgKHRoaXMuYnl0ZXMuYnl0ZUxlbmd0aCAhPT0gdGhpcy5jb25zdHJ1Y3Rvci53aWR0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIEhhc2ggbGVuZ3RoICR7dGhpcy5ieXRlcy5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIEhhc2ggb2JqZWN0IGZyb20gYW4gZXhpc3RpbmcgSGFzaCBvYmplY3Qgb3IgYSBoZXgtc3RyaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgQSBoYXNoIG9iamVjdCBvciBoZXgtc3RyaW5nIG9mIGEgaGFzaFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHRoaXMpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0aGlzKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHZhbHVlLCAnaGV4JykpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBIYXNoIGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhIEhhc2ggb2JqZWN0IGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgQmluYXJ5UGFyc2VyIHRvIHJlYWQgdGhlIGhhc2ggZnJvbVxuICAgICAqIEBwYXJhbSBoaW50IGxlbmd0aCBvZiB0aGUgYnl0ZXMgdG8gcmVhZCwgb3B0aW9uYWxcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIsIGhpbnQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyB0aGlzKHBhcnNlci5yZWFkKGhpbnQgIT09IG51bGwgJiYgaGludCAhPT0gdm9pZCAwID8gaGludCA6IHRoaXMud2lkdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcmxvYWRlZCBvcGVyYXRvciBmb3IgY29tcGFyaW5nIHR3byBoYXNoIG9iamVjdHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvdGhlciBUaGUgSGFzaCB0byBjb21wYXJlIHRoaXMgdG9cbiAgICAgKi9cbiAgICBjb21wYXJlVG8ob3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnl0ZXMuY29tcGFyZSh0aGlzLmNvbnN0cnVjdG9yLmZyb20ob3RoZXIpLmJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJldHVybnMgdGhlIGhleC1zdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBIYXNoXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvSGV4KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgZm91ciBiaXRzIGF0IHRoZSBzcGVjaWZpZWQgZGVwdGggd2l0aGluIGEgaGFzaFxuICAgICAqXG4gICAgICogQHBhcmFtIGRlcHRoIFRoZSBkZXB0aCBvZiB0aGUgZm91ciBiaXRzXG4gICAgICogQHJldHVybnMgVGhlIG51bWJlciByZXByZXNlbnRlZCBieSB0aGUgZm91ciBiaXRzXG4gICAgICovXG4gICAgbmliYmxldChkZXB0aCkge1xuICAgICAgICBjb25zdCBieXRlSXggPSBkZXB0aCA+IDAgPyAoZGVwdGggLyAyKSB8IDAgOiAwO1xuICAgICAgICBsZXQgYiA9IHRoaXMuYnl0ZXNbYnl0ZUl4XTtcbiAgICAgICAgaWYgKGRlcHRoICUgMiA9PT0gMCkge1xuICAgICAgICAgICAgYiA9IChiICYgMHhmMCkgPj4+IDQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBiID0gYiAmIDB4MGY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGI7XG4gICAgfVxufVxuZXhwb3J0cy5IYXNoID0gSGFzaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/hash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Vector256 = exports.UInt64 = exports.UInt32 = exports.UInt16 = exports.UInt8 = exports.STObject = exports.STArray = exports.PathSet = exports.Hash256 = exports.Hash160 = exports.Hash128 = exports.Currency = exports.Blob = exports.Amount = exports.AccountID = exports.coreTypes = void 0;\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\");\nObject.defineProperty(exports, \"AccountID\", ({ enumerable: true, get: function () { return account_id_1.AccountID; } }));\nconst amount_1 = __webpack_require__(/*! ./amount */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/amount.js\");\nObject.defineProperty(exports, \"Amount\", ({ enumerable: true, get: function () { return amount_1.Amount; } }));\nconst blob_1 = __webpack_require__(/*! ./blob */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return blob_1.Blob; } }));\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js\");\nObject.defineProperty(exports, \"Currency\", ({ enumerable: true, get: function () { return currency_1.Currency; } }));\nconst hash_128_1 = __webpack_require__(/*! ./hash-128 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-128.js\");\nObject.defineProperty(exports, \"Hash128\", ({ enumerable: true, get: function () { return hash_128_1.Hash128; } }));\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nObject.defineProperty(exports, \"Hash160\", ({ enumerable: true, get: function () { return hash_160_1.Hash160; } }));\nconst hash_256_1 = __webpack_require__(/*! ./hash-256 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nObject.defineProperty(exports, \"Hash256\", ({ enumerable: true, get: function () { return hash_256_1.Hash256; } }));\nconst issue_1 = __webpack_require__(/*! ./issue */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/issue.js\");\nconst path_set_1 = __webpack_require__(/*! ./path-set */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/path-set.js\");\nObject.defineProperty(exports, \"PathSet\", ({ enumerable: true, get: function () { return path_set_1.PathSet; } }));\nconst st_array_1 = __webpack_require__(/*! ./st-array */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/st-array.js\");\nObject.defineProperty(exports, \"STArray\", ({ enumerable: true, get: function () { return st_array_1.STArray; } }));\nconst st_object_1 = __webpack_require__(/*! ./st-object */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/st-object.js\");\nObject.defineProperty(exports, \"STObject\", ({ enumerable: true, get: function () { return st_object_1.STObject; } }));\nconst uint_16_1 = __webpack_require__(/*! ./uint-16 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-16.js\");\nObject.defineProperty(exports, \"UInt16\", ({ enumerable: true, get: function () { return uint_16_1.UInt16; } }));\nconst uint_32_1 = __webpack_require__(/*! ./uint-32 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-32.js\");\nObject.defineProperty(exports, \"UInt32\", ({ enumerable: true, get: function () { return uint_32_1.UInt32; } }));\nconst uint_64_1 = __webpack_require__(/*! ./uint-64 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-64.js\");\nObject.defineProperty(exports, \"UInt64\", ({ enumerable: true, get: function () { return uint_64_1.UInt64; } }));\nconst uint_8_1 = __webpack_require__(/*! ./uint-8 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-8.js\");\nObject.defineProperty(exports, \"UInt8\", ({ enumerable: true, get: function () { return uint_8_1.UInt8; } }));\nconst vector_256_1 = __webpack_require__(/*! ./vector-256 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/vector-256.js\");\nObject.defineProperty(exports, \"Vector256\", ({ enumerable: true, get: function () { return vector_256_1.Vector256; } }));\nconst xchain_bridge_1 = __webpack_require__(/*! ./xchain-bridge */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/xchain-bridge.js\");\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst coreTypes = {\n    AccountID: account_id_1.AccountID,\n    Amount: amount_1.Amount,\n    Blob: blob_1.Blob,\n    Currency: currency_1.Currency,\n    Hash128: hash_128_1.Hash128,\n    Hash160: hash_160_1.Hash160,\n    Hash256: hash_256_1.Hash256,\n    Issue: issue_1.Issue,\n    PathSet: path_set_1.PathSet,\n    STArray: st_array_1.STArray,\n    STObject: st_object_1.STObject,\n    UInt8: uint_8_1.UInt8,\n    UInt16: uint_16_1.UInt16,\n    UInt32: uint_32_1.UInt32,\n    UInt64: uint_64_1.UInt64,\n    Vector256: vector_256_1.Vector256,\n    XChainBridge: xchain_bridge_1.XChainBridge,\n};\nexports.coreTypes = coreTypes;\n// Ensures that the DEFAULT_DEFINITIONS object connects these types to fields for serializing/deserializing\n// This is done here instead of in enums/index.ts to avoid a circular dependency\n// because some of the above types depend on BinarySerializer which depends on enums/index.ts.\nenums_1.DEFAULT_DEFINITIONS.associateTypes(coreTypes);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGVBQWUsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxjQUFjLEdBQUcsaUJBQWlCLEdBQUcsaUJBQWlCO0FBQzVSLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFjO0FBQzNDLDZDQUE0QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN0SCxpQkFBaUIsbUJBQU8sQ0FBQywrRUFBVTtBQUNuQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDNUcsZUFBZSxtQkFBTyxDQUFDLDJFQUFRO0FBQy9CLHdDQUF1QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN0RyxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgsbUJBQW1CLG1CQUFPLENBQUMsbUZBQVk7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILG1CQUFtQixtQkFBTyxDQUFDLG1GQUFZO0FBQ3ZDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2QywyQ0FBMEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDaEgsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQVM7QUFDakMsbUJBQW1CLG1CQUFPLENBQUMsbUZBQVk7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILG1CQUFtQixtQkFBTyxDQUFDLG1GQUFZO0FBQ3ZDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCxvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBYTtBQUN6Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDbkgsa0JBQWtCLG1CQUFPLENBQUMsaUZBQVc7QUFDckMsMENBQXlDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDO0FBQzdHLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFXO0FBQ3JDLDBDQUF5QyxFQUFFLHFDQUFxQyw0QkFBNEIsRUFBQztBQUM3RyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBVztBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDN0csaUJBQWlCLG1CQUFPLENBQUMsK0VBQVU7QUFDbkMseUNBQXdDLEVBQUUscUNBQXFDLDBCQUEwQixFQUFDO0FBQzFHLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFjO0FBQzNDLDZDQUE0QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN0SCx3QkFBd0IsbUJBQU8sQ0FBQyw2RkFBaUI7QUFDakQsZ0JBQWdCLG1CQUFPLENBQUMsOEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2luZGV4LmpzP2VjZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZlY3RvcjI1NiA9IGV4cG9ydHMuVUludDY0ID0gZXhwb3J0cy5VSW50MzIgPSBleHBvcnRzLlVJbnQxNiA9IGV4cG9ydHMuVUludDggPSBleHBvcnRzLlNUT2JqZWN0ID0gZXhwb3J0cy5TVEFycmF5ID0gZXhwb3J0cy5QYXRoU2V0ID0gZXhwb3J0cy5IYXNoMjU2ID0gZXhwb3J0cy5IYXNoMTYwID0gZXhwb3J0cy5IYXNoMTI4ID0gZXhwb3J0cy5DdXJyZW5jeSA9IGV4cG9ydHMuQmxvYiA9IGV4cG9ydHMuQW1vdW50ID0gZXhwb3J0cy5BY2NvdW50SUQgPSBleHBvcnRzLmNvcmVUeXBlcyA9IHZvaWQgMDtcbmNvbnN0IGFjY291bnRfaWRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnQtaWRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50SURcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfaWRfMS5BY2NvdW50SUQ7IH0gfSk7XG5jb25zdCBhbW91bnRfMSA9IHJlcXVpcmUoXCIuL2Ftb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFtb3VudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYW1vdW50XzEuQW1vdW50OyB9IH0pO1xuY29uc3QgYmxvYl8xID0gcmVxdWlyZShcIi4vYmxvYlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJsb2JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJsb2JfMS5CbG9iOyB9IH0pO1xuY29uc3QgY3VycmVuY3lfMSA9IHJlcXVpcmUoXCIuL2N1cnJlbmN5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ3VycmVuY3lcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGN1cnJlbmN5XzEuQ3VycmVuY3k7IH0gfSk7XG5jb25zdCBoYXNoXzEyOF8xID0gcmVxdWlyZShcIi4vaGFzaC0xMjhcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIYXNoMTI4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoYXNoXzEyOF8xLkhhc2gxMjg7IH0gfSk7XG5jb25zdCBoYXNoXzE2MF8xID0gcmVxdWlyZShcIi4vaGFzaC0xNjBcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIYXNoMTYwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoYXNoXzE2MF8xLkhhc2gxNjA7IH0gfSk7XG5jb25zdCBoYXNoXzI1Nl8xID0gcmVxdWlyZShcIi4vaGFzaC0yNTZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIYXNoMjU2XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoYXNoXzI1Nl8xLkhhc2gyNTY7IH0gfSk7XG5jb25zdCBpc3N1ZV8xID0gcmVxdWlyZShcIi4vaXNzdWVcIik7XG5jb25zdCBwYXRoX3NldF8xID0gcmVxdWlyZShcIi4vcGF0aC1zZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQYXRoU2V0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwYXRoX3NldF8xLlBhdGhTZXQ7IH0gfSk7XG5jb25zdCBzdF9hcnJheV8xID0gcmVxdWlyZShcIi4vc3QtYXJyYXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTVEFycmF5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdF9hcnJheV8xLlNUQXJyYXk7IH0gfSk7XG5jb25zdCBzdF9vYmplY3RfMSA9IHJlcXVpcmUoXCIuL3N0LW9iamVjdFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNUT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdF9vYmplY3RfMS5TVE9iamVjdDsgfSB9KTtcbmNvbnN0IHVpbnRfMTZfMSA9IHJlcXVpcmUoXCIuL3VpbnQtMTZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVSW50MTZcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVpbnRfMTZfMS5VSW50MTY7IH0gfSk7XG5jb25zdCB1aW50XzMyXzEgPSByZXF1aXJlKFwiLi91aW50LTMyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVUludDMyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1aW50XzMyXzEuVUludDMyOyB9IH0pO1xuY29uc3QgdWludF82NF8xID0gcmVxdWlyZShcIi4vdWludC02NFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVJbnQ2NFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdWludF82NF8xLlVJbnQ2NDsgfSB9KTtcbmNvbnN0IHVpbnRfOF8xID0gcmVxdWlyZShcIi4vdWludC04XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVUludDhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVpbnRfOF8xLlVJbnQ4OyB9IH0pO1xuY29uc3QgdmVjdG9yXzI1Nl8xID0gcmVxdWlyZShcIi4vdmVjdG9yLTI1NlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZlY3RvcjI1NlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdmVjdG9yXzI1Nl8xLlZlY3RvcjI1NjsgfSB9KTtcbmNvbnN0IHhjaGFpbl9icmlkZ2VfMSA9IHJlcXVpcmUoXCIuL3hjaGFpbi1icmlkZ2VcIik7XG5jb25zdCBlbnVtc18xID0gcmVxdWlyZShcIi4uL2VudW1zXCIpO1xuY29uc3QgY29yZVR5cGVzID0ge1xuICAgIEFjY291bnRJRDogYWNjb3VudF9pZF8xLkFjY291bnRJRCxcbiAgICBBbW91bnQ6IGFtb3VudF8xLkFtb3VudCxcbiAgICBCbG9iOiBibG9iXzEuQmxvYixcbiAgICBDdXJyZW5jeTogY3VycmVuY3lfMS5DdXJyZW5jeSxcbiAgICBIYXNoMTI4OiBoYXNoXzEyOF8xLkhhc2gxMjgsXG4gICAgSGFzaDE2MDogaGFzaF8xNjBfMS5IYXNoMTYwLFxuICAgIEhhc2gyNTY6IGhhc2hfMjU2XzEuSGFzaDI1NixcbiAgICBJc3N1ZTogaXNzdWVfMS5Jc3N1ZSxcbiAgICBQYXRoU2V0OiBwYXRoX3NldF8xLlBhdGhTZXQsXG4gICAgU1RBcnJheTogc3RfYXJyYXlfMS5TVEFycmF5LFxuICAgIFNUT2JqZWN0OiBzdF9vYmplY3RfMS5TVE9iamVjdCxcbiAgICBVSW50ODogdWludF84XzEuVUludDgsXG4gICAgVUludDE2OiB1aW50XzE2XzEuVUludDE2LFxuICAgIFVJbnQzMjogdWludF8zMl8xLlVJbnQzMixcbiAgICBVSW50NjQ6IHVpbnRfNjRfMS5VSW50NjQsXG4gICAgVmVjdG9yMjU2OiB2ZWN0b3JfMjU2XzEuVmVjdG9yMjU2LFxuICAgIFhDaGFpbkJyaWRnZTogeGNoYWluX2JyaWRnZV8xLlhDaGFpbkJyaWRnZSxcbn07XG5leHBvcnRzLmNvcmVUeXBlcyA9IGNvcmVUeXBlcztcbi8vIEVuc3VyZXMgdGhhdCB0aGUgREVGQVVMVF9ERUZJTklUSU9OUyBvYmplY3QgY29ubmVjdHMgdGhlc2UgdHlwZXMgdG8gZmllbGRzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nXG4vLyBUaGlzIGlzIGRvbmUgaGVyZSBpbnN0ZWFkIG9mIGluIGVudW1zL2luZGV4LnRzIHRvIGF2b2lkIGEgY2lyY3VsYXIgZGVwZW5kZW5jeVxuLy8gYmVjYXVzZSBzb21lIG9mIHRoZSBhYm92ZSB0eXBlcyBkZXBlbmQgb24gQmluYXJ5U2VyaWFsaXplciB3aGljaCBkZXBlbmRzIG9uIGVudW1zL2luZGV4LnRzLlxuZW51bXNfMS5ERUZBVUxUX0RFRklOSVRJT05TLmFzc29jaWF0ZVR5cGVzKGNvcmVUeXBlcyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/issue.js":
/*!**************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/issue.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Issue = void 0;\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Type guard for AmountObject\n */\nfunction isIssueObject(arg) {\n    const keys = Object.keys(arg).sort();\n    if (keys.length === 1) {\n        return keys[0] === 'currency';\n    }\n    return keys.length === 2 && keys[0] === 'currency' && keys[1] === 'issuer';\n}\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Issue extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Issue.ZERO_ISSUED_CURRENCY.bytes);\n    }\n    /**\n     * Construct an amount from an IOU or string amount\n     *\n     * @param value An Amount, object representing an IOU, or a string\n     *     representing an integer amount\n     * @returns An Amount object\n     */\n    static from(value) {\n        if (value instanceof Issue) {\n            return value;\n        }\n        if (isIssueObject(value)) {\n            const currency = currency_1.Currency.from(value.currency).toBytes();\n            if (value.issuer == null) {\n                return new Issue(currency);\n            }\n            const issuer = account_id_1.AccountID.from(value.issuer).toBytes();\n            return new Issue(buffer_1.Buffer.concat([currency, issuer]));\n        }\n        throw new Error('Invalid type to construct an Amount');\n    }\n    /**\n     * Read an amount from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Amount from\n     * @returns An Amount object\n     */\n    static fromParser(parser) {\n        const currency = parser.read(20);\n        if (new currency_1.Currency(currency).toJSON() === 'XRP') {\n            return new Issue(currency);\n        }\n        const currencyAndIssuer = [currency, parser.read(20)];\n        return new Issue(buffer_1.Buffer.concat(currencyAndIssuer));\n    }\n    /**\n     * Get the JSON representation of this Amount\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        const parser = new binary_parser_1.BinaryParser(this.toString());\n        const currency = currency_1.Currency.fromParser(parser);\n        if (currency.toJSON() === 'XRP') {\n            return { currency: currency.toJSON() };\n        }\n        const issuer = account_id_1.AccountID.fromParser(parser);\n        return {\n            currency: currency.toJSON(),\n            issuer: issuer.toJSON(),\n        };\n    }\n}\nexports.Issue = Issue;\nIssue.ZERO_ISSUED_CURRENCY = new Issue(buffer_1.Buffer.alloc(20));\n//# sourceMappingURL=issue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2lzc3VlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYix3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBeUI7QUFDekQscUJBQXFCLG1CQUFPLENBQUMsdUZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsbUZBQVk7QUFDdkMsMEJBQTBCLG1CQUFPLENBQUMsaUdBQW1CO0FBQ3JELGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2lzc3VlLmpzP2E3ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklzc3VlID0gdm9pZCAwO1xuY29uc3QgYmluYXJ5X3BhcnNlcl8xID0gcmVxdWlyZShcIi4uL3NlcmRlcy9iaW5hcnktcGFyc2VyXCIpO1xuY29uc3QgYWNjb3VudF9pZF8xID0gcmVxdWlyZShcIi4vYWNjb3VudC1pZFwiKTtcbmNvbnN0IGN1cnJlbmN5XzEgPSByZXF1aXJlKFwiLi9jdXJyZW5jeVwiKTtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyL1wiKTtcbi8qKlxuICogVHlwZSBndWFyZCBmb3IgQW1vdW50T2JqZWN0XG4gKi9cbmZ1bmN0aW9uIGlzSXNzdWVPYmplY3QoYXJnKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFyZykuc29ydCgpO1xuICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4ga2V5c1swXSA9PT0gJ2N1cnJlbmN5JztcbiAgICB9XG4gICAgcmV0dXJuIGtleXMubGVuZ3RoID09PSAyICYmIGtleXNbMF0gPT09ICdjdXJyZW5jeScgJiYga2V5c1sxXSA9PT0gJ2lzc3Vlcic7XG59XG4vKipcbiAqIENsYXNzIGZvciBzZXJpYWxpemluZy9EZXNlcmlhbGl6aW5nIEFtb3VudHNcbiAqL1xuY2xhc3MgSXNzdWUgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogSXNzdWUuWkVST19JU1NVRURfQ1VSUkVOQ1kuYnl0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gYW1vdW50IGZyb20gYW4gSU9VIG9yIHN0cmluZyBhbW91bnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBBbiBBbW91bnQsIG9iamVjdCByZXByZXNlbnRpbmcgYW4gSU9VLCBvciBhIHN0cmluZ1xuICAgICAqICAgICByZXByZXNlbnRpbmcgYW4gaW50ZWdlciBhbW91bnRcbiAgICAgKiBAcmV0dXJucyBBbiBBbW91bnQgb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgSXNzdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNJc3N1ZU9iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbmN5ID0gY3VycmVuY3lfMS5DdXJyZW5jeS5mcm9tKHZhbHVlLmN1cnJlbmN5KS50b0J5dGVzKCk7XG4gICAgICAgICAgICBpZiAodmFsdWUuaXNzdWVyID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IElzc3VlKGN1cnJlbmN5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlzc3VlciA9IGFjY291bnRfaWRfMS5BY2NvdW50SUQuZnJvbSh2YWx1ZS5pc3N1ZXIpLnRvQnl0ZXMoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSXNzdWUoYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChbY3VycmVuY3ksIGlzc3Vlcl0pKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdHlwZSB0byBjb25zdHJ1Y3QgYW4gQW1vdW50Jyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgYW4gYW1vdW50IGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgQmluYXJ5UGFyc2VyIHRvIHJlYWQgdGhlIEFtb3VudCBmcm9tXG4gICAgICogQHJldHVybnMgQW4gQW1vdW50IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICBjb25zdCBjdXJyZW5jeSA9IHBhcnNlci5yZWFkKDIwKTtcbiAgICAgICAgaWYgKG5ldyBjdXJyZW5jeV8xLkN1cnJlbmN5KGN1cnJlbmN5KS50b0pTT04oKSA9PT0gJ1hSUCcpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSXNzdWUoY3VycmVuY3kpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGN1cnJlbmN5QW5kSXNzdWVyID0gW2N1cnJlbmN5LCBwYXJzZXIucmVhZCgyMCldO1xuICAgICAgICByZXR1cm4gbmV3IElzc3VlKGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoY3VycmVuY3lBbmRJc3N1ZXIpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgQW1vdW50XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgSlNPTiBpbnRlcnByZXRhdGlvbiBvZiB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICBjb25zdCBwYXJzZXIgPSBuZXcgYmluYXJ5X3BhcnNlcl8xLkJpbmFyeVBhcnNlcih0aGlzLnRvU3RyaW5nKCkpO1xuICAgICAgICBjb25zdCBjdXJyZW5jeSA9IGN1cnJlbmN5XzEuQ3VycmVuY3kuZnJvbVBhcnNlcihwYXJzZXIpO1xuICAgICAgICBpZiAoY3VycmVuY3kudG9KU09OKCkgPT09ICdYUlAnKSB7XG4gICAgICAgICAgICByZXR1cm4geyBjdXJyZW5jeTogY3VycmVuY3kudG9KU09OKCkgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpc3N1ZXIgPSBhY2NvdW50X2lkXzEuQWNjb3VudElELmZyb21QYXJzZXIocGFyc2VyKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGN1cnJlbmN5OiBjdXJyZW5jeS50b0pTT04oKSxcbiAgICAgICAgICAgIGlzc3VlcjogaXNzdWVyLnRvSlNPTigpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuSXNzdWUgPSBJc3N1ZTtcbklzc3VlLlpFUk9fSVNTVUVEX0NVUlJFTkNZID0gbmV3IElzc3VlKGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYygyMCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNzdWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/issue.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/path-set.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/path-set.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PathSet = void 0;\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Constants for separating Paths in a PathSet\n */\nconst PATHSET_END_BYTE = 0x00;\nconst PATH_SEPARATOR_BYTE = 0xff;\n/**\n * Constant for masking types of a Hop\n */\nconst TYPE_ACCOUNT = 0x01;\nconst TYPE_CURRENCY = 0x10;\nconst TYPE_ISSUER = 0x20;\n/**\n * TypeGuard for HopObject\n */\nfunction isHopObject(arg) {\n    return (arg.issuer !== undefined ||\n        arg.account !== undefined ||\n        arg.currency !== undefined);\n}\n/**\n * TypeGuard for PathSet\n */\nfunction isPathSet(arg) {\n    return ((Array.isArray(arg) && arg.length === 0) ||\n        (Array.isArray(arg) && Array.isArray(arg[0]) && arg[0].length === 0) ||\n        (Array.isArray(arg) && Array.isArray(arg[0]) && isHopObject(arg[0][0])));\n}\n/**\n * Serialize and Deserialize a Hop\n */\nclass Hop extends serialized_type_1.SerializedType {\n    /**\n     * Create a Hop from a HopObject\n     *\n     * @param value Either a hop or HopObject to create a hop with\n     * @returns a Hop\n     */\n    static from(value) {\n        if (value instanceof Hop) {\n            return value;\n        }\n        const bytes = [buffer_1.Buffer.from([0])];\n        if (value.account) {\n            bytes.push(account_id_1.AccountID.from(value.account).toBytes());\n            bytes[0][0] |= TYPE_ACCOUNT;\n        }\n        if (value.currency) {\n            bytes.push(currency_1.Currency.from(value.currency).toBytes());\n            bytes[0][0] |= TYPE_CURRENCY;\n        }\n        if (value.issuer) {\n            bytes.push(account_id_1.AccountID.from(value.issuer).toBytes());\n            bytes[0][0] |= TYPE_ISSUER;\n        }\n        return new Hop(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Construct a Hop from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Hop from\n     * @returns a Hop\n     */\n    static fromParser(parser) {\n        const type = parser.readUInt8();\n        const bytes = [buffer_1.Buffer.from([type])];\n        if (type & TYPE_ACCOUNT) {\n            bytes.push(parser.read(account_id_1.AccountID.width));\n        }\n        if (type & TYPE_CURRENCY) {\n            bytes.push(parser.read(currency_1.Currency.width));\n        }\n        if (type & TYPE_ISSUER) {\n            bytes.push(parser.read(account_id_1.AccountID.width));\n        }\n        return new Hop(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Get the JSON interpretation of this hop\n     *\n     * @returns a HopObject, an JS object with optional account, issuer, and currency\n     */\n    toJSON() {\n        const hopParser = new binary_parser_1.BinaryParser(this.bytes.toString('hex'));\n        const type = hopParser.readUInt8();\n        let account, currency, issuer;\n        if (type & TYPE_ACCOUNT) {\n            account = account_id_1.AccountID.fromParser(hopParser).toJSON();\n        }\n        if (type & TYPE_CURRENCY) {\n            currency = currency_1.Currency.fromParser(hopParser).toJSON();\n        }\n        if (type & TYPE_ISSUER) {\n            issuer = account_id_1.AccountID.fromParser(hopParser).toJSON();\n        }\n        const result = {};\n        if (account) {\n            result.account = account;\n        }\n        if (issuer) {\n            result.issuer = issuer;\n        }\n        if (currency) {\n            result.currency = currency;\n        }\n        return result;\n    }\n    /**\n     * get a number representing the type of this hop\n     *\n     * @returns a number to be bitwise and-ed with TYPE_ constants to describe the types in the hop\n     */\n    type() {\n        return this.bytes[0];\n    }\n}\n/**\n * Class for serializing/deserializing Paths\n */\nclass Path extends serialized_type_1.SerializedType {\n    /**\n     * construct a Path from an array of Hops\n     *\n     * @param value Path or array of HopObjects to construct a Path\n     * @returns the Path\n     */\n    static from(value) {\n        if (value instanceof Path) {\n            return value;\n        }\n        const bytes = [];\n        value.forEach((hop) => {\n            bytes.push(Hop.from(hop).toBytes());\n        });\n        return new Path(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Read a Path from a BinaryParser\n     *\n     * @param parser BinaryParser to read Path from\n     * @returns the Path represented by the bytes read from the BinaryParser\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            bytes.push(Hop.fromParser(parser).toBytes());\n            if (parser.peek() === PATHSET_END_BYTE ||\n                parser.peek() === PATH_SEPARATOR_BYTE) {\n                break;\n            }\n        }\n        return new Path(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Get the JSON representation of this Path\n     *\n     * @returns an Array of HopObject constructed from this.bytes\n     */\n    toJSON() {\n        const json = [];\n        const pathParser = new binary_parser_1.BinaryParser(this.toString());\n        while (!pathParser.end()) {\n            json.push(Hop.fromParser(pathParser).toJSON());\n        }\n        return json;\n    }\n}\n/**\n * Deserialize and Serialize the PathSet type\n */\nclass PathSet extends serialized_type_1.SerializedType {\n    /**\n     * Construct a PathSet from an Array of Arrays representing paths\n     *\n     * @param value A PathSet or Array of Array of HopObjects\n     * @returns the PathSet constructed from value\n     */\n    static from(value) {\n        if (value instanceof PathSet) {\n            return value;\n        }\n        if (isPathSet(value)) {\n            const bytes = [];\n            value.forEach((path) => {\n                bytes.push(Path.from(path).toBytes());\n                bytes.push(buffer_1.Buffer.from([PATH_SEPARATOR_BYTE]));\n            });\n            bytes[bytes.length - 1] = buffer_1.Buffer.from([PATHSET_END_BYTE]);\n            return new PathSet(buffer_1.Buffer.concat(bytes));\n        }\n        throw new Error('Cannot construct PathSet from given value');\n    }\n    /**\n     * Construct a PathSet from a BinaryParser\n     *\n     * @param parser A BinaryParser to read PathSet from\n     * @returns the PathSet read from parser\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            bytes.push(Path.fromParser(parser).toBytes());\n            bytes.push(parser.read(1));\n            if (bytes[bytes.length - 1][0] == PATHSET_END_BYTE) {\n                break;\n            }\n        }\n        return new PathSet(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Get the JSON representation of this PathSet\n     *\n     * @returns an Array of Array of HopObjects, representing this PathSet\n     */\n    toJSON() {\n        const json = [];\n        const pathParser = new binary_parser_1.BinaryParser(this.toString());\n        while (!pathParser.end()) {\n            json.push(Path.fromParser(pathParser).toJSON());\n            pathParser.skip(1);\n        }\n        return json;\n    }\n}\nexports.PathSet = PathSet;\n//# sourceMappingURL=path-set.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3BhdGgtc2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBYztBQUMzQyxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2Qyx3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBeUI7QUFDekQsMEJBQTBCLG1CQUFPLENBQUMsaUdBQW1CO0FBQ3JELGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3BhdGgtc2V0LmpzP2NiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhdGhTZXQgPSB2b2lkIDA7XG5jb25zdCBhY2NvdW50X2lkXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50LWlkXCIpO1xuY29uc3QgY3VycmVuY3lfMSA9IHJlcXVpcmUoXCIuL2N1cnJlbmN5XCIpO1xuY29uc3QgYmluYXJ5X3BhcnNlcl8xID0gcmVxdWlyZShcIi4uL3NlcmRlcy9iaW5hcnktcGFyc2VyXCIpO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBDb25zdGFudHMgZm9yIHNlcGFyYXRpbmcgUGF0aHMgaW4gYSBQYXRoU2V0XG4gKi9cbmNvbnN0IFBBVEhTRVRfRU5EX0JZVEUgPSAweDAwO1xuY29uc3QgUEFUSF9TRVBBUkFUT1JfQllURSA9IDB4ZmY7XG4vKipcbiAqIENvbnN0YW50IGZvciBtYXNraW5nIHR5cGVzIG9mIGEgSG9wXG4gKi9cbmNvbnN0IFRZUEVfQUNDT1VOVCA9IDB4MDE7XG5jb25zdCBUWVBFX0NVUlJFTkNZID0gMHgxMDtcbmNvbnN0IFRZUEVfSVNTVUVSID0gMHgyMDtcbi8qKlxuICogVHlwZUd1YXJkIGZvciBIb3BPYmplY3RcbiAqL1xuZnVuY3Rpb24gaXNIb3BPYmplY3QoYXJnKSB7XG4gICAgcmV0dXJuIChhcmcuaXNzdWVyICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgYXJnLmFjY291bnQgIT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBhcmcuY3VycmVuY3kgIT09IHVuZGVmaW5lZCk7XG59XG4vKipcbiAqIFR5cGVHdWFyZCBmb3IgUGF0aFNldFxuICovXG5mdW5jdGlvbiBpc1BhdGhTZXQoYXJnKSB7XG4gICAgcmV0dXJuICgoQXJyYXkuaXNBcnJheShhcmcpICYmIGFyZy5sZW5ndGggPT09IDApIHx8XG4gICAgICAgIChBcnJheS5pc0FycmF5KGFyZykgJiYgQXJyYXkuaXNBcnJheShhcmdbMF0pICYmIGFyZ1swXS5sZW5ndGggPT09IDApIHx8XG4gICAgICAgIChBcnJheS5pc0FycmF5KGFyZykgJiYgQXJyYXkuaXNBcnJheShhcmdbMF0pICYmIGlzSG9wT2JqZWN0KGFyZ1swXVswXSkpKTtcbn1cbi8qKlxuICogU2VyaWFsaXplIGFuZCBEZXNlcmlhbGl6ZSBhIEhvcFxuICovXG5jbGFzcyBIb3AgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgSG9wIGZyb20gYSBIb3BPYmplY3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBFaXRoZXIgYSBob3Agb3IgSG9wT2JqZWN0IHRvIGNyZWF0ZSBhIGhvcCB3aXRoXG4gICAgICogQHJldHVybnMgYSBIb3BcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBIb3ApIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBieXRlcyA9IFtidWZmZXJfMS5CdWZmZXIuZnJvbShbMF0pXTtcbiAgICAgICAgaWYgKHZhbHVlLmFjY291bnQpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2goYWNjb3VudF9pZF8xLkFjY291bnRJRC5mcm9tKHZhbHVlLmFjY291bnQpLnRvQnl0ZXMoKSk7XG4gICAgICAgICAgICBieXRlc1swXVswXSB8PSBUWVBFX0FDQ09VTlQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLmN1cnJlbmN5KSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKGN1cnJlbmN5XzEuQ3VycmVuY3kuZnJvbSh2YWx1ZS5jdXJyZW5jeSkudG9CeXRlcygpKTtcbiAgICAgICAgICAgIGJ5dGVzWzBdWzBdIHw9IFRZUEVfQ1VSUkVOQ1k7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLmlzc3Vlcikge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChhY2NvdW50X2lkXzEuQWNjb3VudElELmZyb20odmFsdWUuaXNzdWVyKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgYnl0ZXNbMF1bMF0gfD0gVFlQRV9JU1NVRVI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBIb3AoYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChieXRlcykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBIb3AgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCB0aGUgSG9wIGZyb21cbiAgICAgKiBAcmV0dXJucyBhIEhvcFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICBjb25zdCB0eXBlID0gcGFyc2VyLnJlYWRVSW50OCgpO1xuICAgICAgICBjb25zdCBieXRlcyA9IFtidWZmZXJfMS5CdWZmZXIuZnJvbShbdHlwZV0pXTtcbiAgICAgICAgaWYgKHR5cGUgJiBUWVBFX0FDQ09VTlQpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2gocGFyc2VyLnJlYWQoYWNjb3VudF9pZF8xLkFjY291bnRJRC53aWR0aCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlICYgVFlQRV9DVVJSRU5DWSkge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChwYXJzZXIucmVhZChjdXJyZW5jeV8xLkN1cnJlbmN5LndpZHRoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgJiBUWVBFX0lTU1VFUikge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChwYXJzZXIucmVhZChhY2NvdW50X2lkXzEuQWNjb3VudElELndpZHRoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBIb3AoYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChieXRlcykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIEpTT04gaW50ZXJwcmV0YXRpb24gb2YgdGhpcyBob3BcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGEgSG9wT2JqZWN0LCBhbiBKUyBvYmplY3Qgd2l0aCBvcHRpb25hbCBhY2NvdW50LCBpc3N1ZXIsIGFuZCBjdXJyZW5jeVxuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgY29uc3QgaG9wUGFyc2VyID0gbmV3IGJpbmFyeV9wYXJzZXJfMS5CaW5hcnlQYXJzZXIodGhpcy5ieXRlcy50b1N0cmluZygnaGV4JykpO1xuICAgICAgICBjb25zdCB0eXBlID0gaG9wUGFyc2VyLnJlYWRVSW50OCgpO1xuICAgICAgICBsZXQgYWNjb3VudCwgY3VycmVuY3ksIGlzc3VlcjtcbiAgICAgICAgaWYgKHR5cGUgJiBUWVBFX0FDQ09VTlQpIHtcbiAgICAgICAgICAgIGFjY291bnQgPSBhY2NvdW50X2lkXzEuQWNjb3VudElELmZyb21QYXJzZXIoaG9wUGFyc2VyKS50b0pTT04oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSAmIFRZUEVfQ1VSUkVOQ1kpIHtcbiAgICAgICAgICAgIGN1cnJlbmN5ID0gY3VycmVuY3lfMS5DdXJyZW5jeS5mcm9tUGFyc2VyKGhvcFBhcnNlcikudG9KU09OKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgJiBUWVBFX0lTU1VFUikge1xuICAgICAgICAgICAgaXNzdWVyID0gYWNjb3VudF9pZF8xLkFjY291bnRJRC5mcm9tUGFyc2VyKGhvcFBhcnNlcikudG9KU09OKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgICAgIGlmIChhY2NvdW50KSB7XG4gICAgICAgICAgICByZXN1bHQuYWNjb3VudCA9IGFjY291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzc3Vlcikge1xuICAgICAgICAgICAgcmVzdWx0Lmlzc3VlciA9IGlzc3VlcjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY3VycmVuY3kpIHtcbiAgICAgICAgICAgIHJlc3VsdC5jdXJyZW5jeSA9IGN1cnJlbmN5O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldCBhIG51bWJlciByZXByZXNlbnRpbmcgdGhlIHR5cGUgb2YgdGhpcyBob3BcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGEgbnVtYmVyIHRvIGJlIGJpdHdpc2UgYW5kLWVkIHdpdGggVFlQRV8gY29uc3RhbnRzIHRvIGRlc2NyaWJlIHRoZSB0eXBlcyBpbiB0aGUgaG9wXG4gICAgICovXG4gICAgdHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnl0ZXNbMF07XG4gICAgfVxufVxuLyoqXG4gKiBDbGFzcyBmb3Igc2VyaWFsaXppbmcvZGVzZXJpYWxpemluZyBQYXRoc1xuICovXG5jbGFzcyBQYXRoIGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIC8qKlxuICAgICAqIGNvbnN0cnVjdCBhIFBhdGggZnJvbSBhbiBhcnJheSBvZiBIb3BzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgUGF0aCBvciBhcnJheSBvZiBIb3BPYmplY3RzIHRvIGNvbnN0cnVjdCBhIFBhdGhcbiAgICAgKiBAcmV0dXJucyB0aGUgUGF0aFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFBhdGgpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBieXRlcyA9IFtdO1xuICAgICAgICB2YWx1ZS5mb3JFYWNoKChob3ApID0+IHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2goSG9wLmZyb20oaG9wKS50b0J5dGVzKCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5ldyBQYXRoKGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhIFBhdGggZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCBQYXRoIGZyb21cbiAgICAgKiBAcmV0dXJucyB0aGUgUGF0aCByZXByZXNlbnRlZCBieSB0aGUgYnl0ZXMgcmVhZCBmcm9tIHRoZSBCaW5hcnlQYXJzZXJcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBbXTtcbiAgICAgICAgd2hpbGUgKCFwYXJzZXIuZW5kKCkpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2goSG9wLmZyb21QYXJzZXIocGFyc2VyKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgaWYgKHBhcnNlci5wZWVrKCkgPT09IFBBVEhTRVRfRU5EX0JZVEUgfHxcbiAgICAgICAgICAgICAgICBwYXJzZXIucGVlaygpID09PSBQQVRIX1NFUEFSQVRPUl9CWVRFKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQYXRoKGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgUGF0aFxuICAgICAqXG4gICAgICogQHJldHVybnMgYW4gQXJyYXkgb2YgSG9wT2JqZWN0IGNvbnN0cnVjdGVkIGZyb20gdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgY29uc3QganNvbiA9IFtdO1xuICAgICAgICBjb25zdCBwYXRoUGFyc2VyID0gbmV3IGJpbmFyeV9wYXJzZXJfMS5CaW5hcnlQYXJzZXIodGhpcy50b1N0cmluZygpKTtcbiAgICAgICAgd2hpbGUgKCFwYXRoUGFyc2VyLmVuZCgpKSB7XG4gICAgICAgICAgICBqc29uLnB1c2goSG9wLmZyb21QYXJzZXIocGF0aFBhcnNlcikudG9KU09OKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbn1cbi8qKlxuICogRGVzZXJpYWxpemUgYW5kIFNlcmlhbGl6ZSB0aGUgUGF0aFNldCB0eXBlXG4gKi9cbmNsYXNzIFBhdGhTZXQgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgUGF0aFNldCBmcm9tIGFuIEFycmF5IG9mIEFycmF5cyByZXByZXNlbnRpbmcgcGF0aHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBBIFBhdGhTZXQgb3IgQXJyYXkgb2YgQXJyYXkgb2YgSG9wT2JqZWN0c1xuICAgICAqIEByZXR1cm5zIHRoZSBQYXRoU2V0IGNvbnN0cnVjdGVkIGZyb20gdmFsdWVcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQYXRoU2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzUGF0aFNldCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChwYXRoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChQYXRoLmZyb20ocGF0aCkudG9CeXRlcygpKTtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFtQQVRIX1NFUEFSQVRPUl9CWVRFXSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBieXRlc1tieXRlcy5sZW5ndGggLSAxXSA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFtQQVRIU0VUX0VORF9CWVRFXSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFBhdGhTZXQoYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChieXRlcykpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBQYXRoU2V0IGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgUGF0aFNldCBmcm9tIGEgQmluYXJ5UGFyc2VyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGFyc2VyIEEgQmluYXJ5UGFyc2VyIHRvIHJlYWQgUGF0aFNldCBmcm9tXG4gICAgICogQHJldHVybnMgdGhlIFBhdGhTZXQgcmVhZCBmcm9tIHBhcnNlclxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICBjb25zdCBieXRlcyA9IFtdO1xuICAgICAgICB3aGlsZSAoIXBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChQYXRoLmZyb21QYXJzZXIocGFyc2VyKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgYnl0ZXMucHVzaChwYXJzZXIucmVhZCgxKSk7XG4gICAgICAgICAgICBpZiAoYnl0ZXNbYnl0ZXMubGVuZ3RoIC0gMV1bMF0gPT0gUEFUSFNFVF9FTkRfQllURSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUGF0aFNldChidWZmZXJfMS5CdWZmZXIuY29uY2F0KGJ5dGVzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzIFBhdGhTZXRcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGFuIEFycmF5IG9mIEFycmF5IG9mIEhvcE9iamVjdHMsIHJlcHJlc2VudGluZyB0aGlzIFBhdGhTZXRcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGpzb24gPSBbXTtcbiAgICAgICAgY29uc3QgcGF0aFBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgICAgIHdoaWxlICghcGF0aFBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAganNvbi5wdXNoKFBhdGguZnJvbVBhcnNlcihwYXRoUGFyc2VyKS50b0pTT04oKSk7XG4gICAgICAgICAgICBwYXRoUGFyc2VyLnNraXAoMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxufVxuZXhwb3J0cy5QYXRoU2V0ID0gUGF0aFNldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtc2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/path-set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js":
/*!************************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/serialized-type.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comparable = exports.SerializedType = void 0;\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * The base class for all binary-codec types\n */\nclass SerializedType {\n    constructor(bytes) {\n        this.bytes = buffer_1.Buffer.alloc(0);\n        this.bytes = bytes !== null && bytes !== void 0 ? bytes : buffer_1.Buffer.alloc(0);\n    }\n    static fromParser(parser, hint) {\n        throw new Error('fromParser not implemented');\n        return this.fromParser(parser, hint);\n    }\n    static from(value) {\n        throw new Error('from not implemented');\n        return this.from(value);\n    }\n    /**\n     * Write the bytes representation of a SerializedType to a BytesList\n     *\n     * @param list The BytesList to write SerializedType bytes to\n     */\n    toBytesSink(list) {\n        list.put(this.bytes);\n    }\n    /**\n     * Get the hex representation of a SerializedType's bytes\n     *\n     * @returns hex String of this.bytes\n     */\n    toHex() {\n        return this.toBytes().toString('hex').toUpperCase();\n    }\n    /**\n     * Get the bytes representation of a SerializedType\n     *\n     * @returns A buffer of the bytes\n     */\n    toBytes() {\n        if (this.bytes) {\n            return this.bytes;\n        }\n        const bytes = new binary_serializer_1.BytesList();\n        this.toBytesSink(bytes);\n        return bytes.toBytes();\n    }\n    /**\n     * Return the JSON representation of a SerializedType\n     *\n     * @param _definitions rippled definitions used to parse the values of transaction types and such.\n     *                          Unused in default, but used in STObject, STArray\n     *                          Can be customized for sidechains and amendments.\n     * @returns any type, if not overloaded returns hexString representation of bytes\n     */\n    toJSON(_definitions) {\n        return this.toHex();\n    }\n    /**\n     * @returns hexString representation of this.bytes\n     */\n    toString() {\n        return this.toHex();\n    }\n}\nexports.SerializedType = SerializedType;\n/**\n * Base class for SerializedTypes that are comparable\n */\nclass Comparable extends SerializedType {\n    lt(other) {\n        return this.compareTo(other) < 0;\n    }\n    eq(other) {\n        return this.compareTo(other) === 0;\n    }\n    gt(other) {\n        return this.compareTo(other) > 0;\n    }\n    gte(other) {\n        return this.compareTo(other) > -1;\n    }\n    lte(other) {\n        return this.compareTo(other) < 1;\n    }\n    /**\n     * Overload this method to define how two Comparable SerializedTypes are compared\n     *\n     * @param other The comparable object to compare this to\n     * @returns A number denoting the relationship of this and other\n     */\n    compareTo(other) {\n        throw new Error(`cannot compare ${this.toString()} and ${other.toString()}`);\n    }\n}\nexports.Comparable = Comparable;\n//# sourceMappingURL=serialized-type.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3NlcmlhbGl6ZWQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxzQkFBc0I7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsOEdBQTZCO0FBQ2pFLGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGlCQUFpQixNQUFNLGlCQUFpQjtBQUNsRjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvc2VyaWFsaXplZC10eXBlLmpzPzU2ZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBhcmFibGUgPSBleHBvcnRzLlNlcmlhbGl6ZWRUeXBlID0gdm9pZCAwO1xuY29uc3QgYmluYXJ5X3NlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuLi9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuLyoqXG4gKiBUaGUgYmFzZSBjbGFzcyBmb3IgYWxsIGJpbmFyeS1jb2RlYyB0eXBlc1xuICovXG5jbGFzcyBTZXJpYWxpemVkVHlwZSB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYygwKTtcbiAgICAgICAgdGhpcy5ieXRlcyA9IGJ5dGVzICE9PSBudWxsICYmIGJ5dGVzICE9PSB2b2lkIDAgPyBieXRlcyA6IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYygwKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyLCBoaW50KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignZnJvbVBhcnNlciBub3QgaW1wbGVtZW50ZWQnKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbVBhcnNlcihwYXJzZXIsIGhpbnQpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Zyb20gbm90IGltcGxlbWVudGVkJyk7XG4gICAgICAgIHJldHVybiB0aGlzLmZyb20odmFsdWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSB0aGUgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgYSBTZXJpYWxpemVkVHlwZSB0byBhIEJ5dGVzTGlzdFxuICAgICAqXG4gICAgICogQHBhcmFtIGxpc3QgVGhlIEJ5dGVzTGlzdCB0byB3cml0ZSBTZXJpYWxpemVkVHlwZSBieXRlcyB0b1xuICAgICAqL1xuICAgIHRvQnl0ZXNTaW5rKGxpc3QpIHtcbiAgICAgICAgbGlzdC5wdXQodGhpcy5ieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgaGV4IHJlcHJlc2VudGF0aW9uIG9mIGEgU2VyaWFsaXplZFR5cGUncyBieXRlc1xuICAgICAqXG4gICAgICogQHJldHVybnMgaGV4IFN0cmluZyBvZiB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdG9IZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvQnl0ZXMoKS50b1N0cmluZygnaGV4JykudG9VcHBlckNhc2UoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBhIFNlcmlhbGl6ZWRUeXBlXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIGJ1ZmZlciBvZiB0aGUgYnl0ZXNcbiAgICAgKi9cbiAgICB0b0J5dGVzKCkge1xuICAgICAgICBpZiAodGhpcy5ieXRlcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnl0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgdGhpcy50b0J5dGVzU2luayhieXRlcyk7XG4gICAgICAgIHJldHVybiBieXRlcy50b0J5dGVzKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIFNlcmlhbGl6ZWRUeXBlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gX2RlZmluaXRpb25zIHJpcHBsZWQgZGVmaW5pdGlvbnMgdXNlZCB0byBwYXJzZSB0aGUgdmFsdWVzIG9mIHRyYW5zYWN0aW9uIHR5cGVzIGFuZCBzdWNoLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBVbnVzZWQgaW4gZGVmYXVsdCwgYnV0IHVzZWQgaW4gU1RPYmplY3QsIFNUQXJyYXlcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FuIGJlIGN1c3RvbWl6ZWQgZm9yIHNpZGVjaGFpbnMgYW5kIGFtZW5kbWVudHMuXG4gICAgICogQHJldHVybnMgYW55IHR5cGUsIGlmIG5vdCBvdmVybG9hZGVkIHJldHVybnMgaGV4U3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGJ5dGVzXG4gICAgICovXG4gICAgdG9KU09OKF9kZWZpbml0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy50b0hleCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBoZXhTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b0hleCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VyaWFsaXplZFR5cGUgPSBTZXJpYWxpemVkVHlwZTtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgU2VyaWFsaXplZFR5cGVzIHRoYXQgYXJlIGNvbXBhcmFibGVcbiAqL1xuY2xhc3MgQ29tcGFyYWJsZSBleHRlbmRzIFNlcmlhbGl6ZWRUeXBlIHtcbiAgICBsdChvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVG8ob3RoZXIpIDwgMDtcbiAgICB9XG4gICAgZXEob3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVRvKG90aGVyKSA9PT0gMDtcbiAgICB9XG4gICAgZ3Qob3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVRvKG90aGVyKSA+IDA7XG4gICAgfVxuICAgIGd0ZShvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVG8ob3RoZXIpID4gLTE7XG4gICAgfVxuICAgIGx0ZShvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVG8ob3RoZXIpIDwgMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcmxvYWQgdGhpcyBtZXRob2QgdG8gZGVmaW5lIGhvdyB0d28gQ29tcGFyYWJsZSBTZXJpYWxpemVkVHlwZXMgYXJlIGNvbXBhcmVkXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3RoZXIgVGhlIGNvbXBhcmFibGUgb2JqZWN0IHRvIGNvbXBhcmUgdGhpcyB0b1xuICAgICAqIEByZXR1cm5zIEEgbnVtYmVyIGRlbm90aW5nIHRoZSByZWxhdGlvbnNoaXAgb2YgdGhpcyBhbmQgb3RoZXJcbiAgICAgKi9cbiAgICBjb21wYXJlVG8ob3RoZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBjYW5ub3QgY29tcGFyZSAke3RoaXMudG9TdHJpbmcoKX0gYW5kICR7b3RoZXIudG9TdHJpbmcoKX1gKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbXBhcmFibGUgPSBDb21wYXJhYmxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplZC10eXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/st-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/st-array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STArray = void 0;\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst st_object_1 = __webpack_require__(/*! ./st-object */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/st-object.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst ARRAY_END_MARKER = buffer_1.Buffer.from([0xf1]);\nconst ARRAY_END_MARKER_NAME = 'ArrayEndMarker';\nconst OBJECT_END_MARKER = buffer_1.Buffer.from([0xe1]);\n/**\n * TypeGuard for Array<JsonObject>\n */\nfunction isObjects(args) {\n    return (Array.isArray(args) && (args.length === 0 || typeof args[0] === 'object'));\n}\n/**\n * Class for serializing and deserializing Arrays of Objects\n */\nclass STArray extends serialized_type_1.SerializedType {\n    /**\n     * Construct an STArray from a BinaryParser\n     *\n     * @param parser BinaryParser to parse an STArray from\n     * @returns An STArray Object\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            const field = parser.readField();\n            if (field.name === ARRAY_END_MARKER_NAME) {\n                break;\n            }\n            bytes.push(field.header, parser.readFieldValue(field).toBytes(), OBJECT_END_MARKER);\n        }\n        bytes.push(ARRAY_END_MARKER);\n        return new STArray(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Construct an STArray from an Array of JSON Objects\n     *\n     * @param value STArray or Array of Objects to parse into an STArray\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns An STArray object\n     */\n    static from(value, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        if (value instanceof STArray) {\n            return value;\n        }\n        if (isObjects(value)) {\n            const bytes = [];\n            value.forEach((obj) => {\n                bytes.push(st_object_1.STObject.from(obj, undefined, definitions).toBytes());\n            });\n            bytes.push(ARRAY_END_MARKER);\n            return new STArray(buffer_1.Buffer.concat(bytes));\n        }\n        throw new Error('Cannot construct STArray from value given');\n    }\n    /**\n     * Return the JSON representation of this.bytes\n     *\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns An Array of JSON objects\n     */\n    toJSON(definitions = enums_1.DEFAULT_DEFINITIONS) {\n        const result = [];\n        const arrayParser = new binary_parser_1.BinaryParser(this.toString(), definitions);\n        while (!arrayParser.end()) {\n            const field = arrayParser.readField();\n            if (field.name === ARRAY_END_MARKER_NAME) {\n                break;\n            }\n            const outer = {};\n            outer[field.name] = st_object_1.STObject.fromParser(arrayParser).toJSON(definitions);\n            result.push(outer);\n        }\n        return result;\n    }\n}\nexports.STArray = STArray;\n//# sourceMappingURL=st-array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3N0LWFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixnQkFBZ0IsbUJBQU8sQ0FBQyw4RUFBVTtBQUNsQywwQkFBMEIsbUJBQU8sQ0FBQyxpR0FBbUI7QUFDckQsb0JBQW9CLG1CQUFPLENBQUMscUZBQWE7QUFDekMsd0JBQXdCLG1CQUFPLENBQUMsc0dBQXlCO0FBQ3pELGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9zdC1hcnJheS5qcz82MTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TVEFycmF5ID0gdm9pZCAwO1xuY29uc3QgZW51bXNfMSA9IHJlcXVpcmUoXCIuLi9lbnVtc1wiKTtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3Qgc3Rfb2JqZWN0XzEgPSByZXF1aXJlKFwiLi9zdC1vYmplY3RcIik7XG5jb25zdCBiaW5hcnlfcGFyc2VyXzEgPSByZXF1aXJlKFwiLi4vc2VyZGVzL2JpbmFyeS1wYXJzZXJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuY29uc3QgQVJSQVlfRU5EX01BUktFUiA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFsweGYxXSk7XG5jb25zdCBBUlJBWV9FTkRfTUFSS0VSX05BTUUgPSAnQXJyYXlFbmRNYXJrZXInO1xuY29uc3QgT0JKRUNUX0VORF9NQVJLRVIgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShbMHhlMV0pO1xuLyoqXG4gKiBUeXBlR3VhcmQgZm9yIEFycmF5PEpzb25PYmplY3Q+XG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0cyhhcmdzKSB7XG4gICAgcmV0dXJuIChBcnJheS5pc0FycmF5KGFyZ3MpICYmIChhcmdzLmxlbmd0aCA9PT0gMCB8fCB0eXBlb2YgYXJnc1swXSA9PT0gJ29iamVjdCcpKTtcbn1cbi8qKlxuICogQ2xhc3MgZm9yIHNlcmlhbGl6aW5nIGFuZCBkZXNlcmlhbGl6aW5nIEFycmF5cyBvZiBPYmplY3RzXG4gKi9cbmNsYXNzIFNUQXJyYXkgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIFNUQXJyYXkgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcGFyc2UgYW4gU1RBcnJheSBmcm9tXG4gICAgICogQHJldHVybnMgQW4gU1RBcnJheSBPYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBbXTtcbiAgICAgICAgd2hpbGUgKCFwYXJzZXIuZW5kKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gcGFyc2VyLnJlYWRGaWVsZCgpO1xuICAgICAgICAgICAgaWYgKGZpZWxkLm5hbWUgPT09IEFSUkFZX0VORF9NQVJLRVJfTkFNRSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnl0ZXMucHVzaChmaWVsZC5oZWFkZXIsIHBhcnNlci5yZWFkRmllbGRWYWx1ZShmaWVsZCkudG9CeXRlcygpLCBPQkpFQ1RfRU5EX01BUktFUik7XG4gICAgICAgIH1cbiAgICAgICAgYnl0ZXMucHVzaChBUlJBWV9FTkRfTUFSS0VSKTtcbiAgICAgICAgcmV0dXJuIG5ldyBTVEFycmF5KGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIFNUQXJyYXkgZnJvbSBhbiBBcnJheSBvZiBKU09OIE9iamVjdHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBTVEFycmF5IG9yIEFycmF5IG9mIE9iamVjdHMgdG8gcGFyc2UgaW50byBhbiBTVEFycmF5XG4gICAgICogQHBhcmFtIGRlZmluaXRpb25zIG9wdGlvbmFsLCB0eXBlcyBhbmQgdmFsdWVzIHRvIHVzZSB0byBlbmNvZGUvZGVjb2RlIGEgdHJhbnNhY3Rpb25cbiAgICAgKiBAcmV0dXJucyBBbiBTVEFycmF5IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlLCBkZWZpbml0aW9ucyA9IGVudW1zXzEuREVGQVVMVF9ERUZJTklUSU9OUykge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBTVEFycmF5KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzT2JqZWN0cyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChvYmopID0+IHtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKHN0X29iamVjdF8xLlNUT2JqZWN0LmZyb20ob2JqLCB1bmRlZmluZWQsIGRlZmluaXRpb25zKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBieXRlcy5wdXNoKEFSUkFZX0VORF9NQVJLRVIpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTVEFycmF5KGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoYnl0ZXMpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgU1RBcnJheSBmcm9tIHZhbHVlIGdpdmVuJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzLmJ5dGVzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZGVmaW5pdGlvbnMgb3B0aW9uYWwsIHR5cGVzIGFuZCB2YWx1ZXMgdG8gdXNlIHRvIGVuY29kZS9kZWNvZGUgYSB0cmFuc2FjdGlvblxuICAgICAqIEByZXR1cm5zIEFuIEFycmF5IG9mIEpTT04gb2JqZWN0c1xuICAgICAqL1xuICAgIHRvSlNPTihkZWZpbml0aW9ucyA9IGVudW1zXzEuREVGQVVMVF9ERUZJTklUSU9OUykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgY29uc3QgYXJyYXlQYXJzZXIgPSBuZXcgYmluYXJ5X3BhcnNlcl8xLkJpbmFyeVBhcnNlcih0aGlzLnRvU3RyaW5nKCksIGRlZmluaXRpb25zKTtcbiAgICAgICAgd2hpbGUgKCFhcnJheVBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBhcnJheVBhcnNlci5yZWFkRmllbGQoKTtcbiAgICAgICAgICAgIGlmIChmaWVsZC5uYW1lID09PSBBUlJBWV9FTkRfTUFSS0VSX05BTUUpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG91dGVyID0ge307XG4gICAgICAgICAgICBvdXRlcltmaWVsZC5uYW1lXSA9IHN0X29iamVjdF8xLlNUT2JqZWN0LmZyb21QYXJzZXIoYXJyYXlQYXJzZXIpLnRvSlNPTihkZWZpbml0aW9ucyk7XG4gICAgICAgICAgICByZXN1bHQucHVzaChvdXRlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLlNUQXJyYXkgPSBTVEFycmF5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3QtYXJyYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/st-array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/st-object.js":
/*!******************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/st-object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STObject = void 0;\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/./node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst ripple_address_codec_1 = __webpack_require__(/*! ripple-address-codec */ \"(ssr)/./node_modules/ripple-address-codec/dist/index.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst st_array_1 = __webpack_require__(/*! ./st-array */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/st-array.js\");\nconst OBJECT_END_MARKER_BYTE = buffer_1.Buffer.from([0xe1]);\nconst OBJECT_END_MARKER = 'ObjectEndMarker';\nconst ST_OBJECT = 'STObject';\nconst DESTINATION = 'Destination';\nconst ACCOUNT = 'Account';\nconst SOURCE_TAG = 'SourceTag';\nconst DEST_TAG = 'DestinationTag';\n/**\n * Break down an X-Address into an account and a tag\n *\n * @param field Name of field\n * @param xAddress X-Address corresponding to the field\n */\nfunction handleXAddress(field, xAddress) {\n    const decoded = (0, ripple_address_codec_1.xAddressToClassicAddress)(xAddress);\n    let tagName;\n    if (field === DESTINATION)\n        tagName = DEST_TAG;\n    else if (field === ACCOUNT)\n        tagName = SOURCE_TAG;\n    else if (decoded.tag !== false)\n        throw new Error(`${field} cannot have an associated tag`);\n    return decoded.tag !== false\n        ? { [field]: decoded.classicAddress, [tagName]: decoded.tag }\n        : { [field]: decoded.classicAddress };\n}\n/**\n * Validate that two objects don't both have the same tag fields\n *\n * @param obj1 First object to check for tags\n * @param obj2 Second object to check for tags\n * @throws When both objects have SourceTag or DestinationTag\n */\nfunction checkForDuplicateTags(obj1, obj2) {\n    if (!(obj1[SOURCE_TAG] === undefined || obj2[SOURCE_TAG] === undefined))\n        throw new Error('Cannot have Account X-Address and SourceTag');\n    if (!(obj1[DEST_TAG] === undefined || obj2[DEST_TAG] === undefined))\n        throw new Error('Cannot have Destination X-Address and DestinationTag');\n}\n/**\n * Class for Serializing/Deserializing objects\n */\nclass STObject extends serialized_type_1.SerializedType {\n    /**\n     * Construct a STObject from a BinaryParser\n     *\n     * @param parser BinaryParser to read STObject from\n     * @returns A STObject object\n     */\n    static fromParser(parser) {\n        const list = new binary_serializer_1.BytesList();\n        const bytes = new binary_serializer_1.BinarySerializer(list);\n        while (!parser.end()) {\n            const field = parser.readField();\n            if (field.name === OBJECT_END_MARKER) {\n                break;\n            }\n            const associatedValue = parser.readFieldValue(field);\n            bytes.writeFieldAndValue(field, associatedValue);\n            if (field.type.name === ST_OBJECT) {\n                bytes.put(OBJECT_END_MARKER_BYTE);\n            }\n        }\n        return new STObject(list.toBytes());\n    }\n    /**\n     * Construct a STObject from a JSON object\n     *\n     * @param value An object to include\n     * @param filter optional, denote which field to include in serialized object\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns a STObject object\n     */\n    static from(value, filter, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        if (value instanceof STObject) {\n            return value;\n        }\n        const list = new binary_serializer_1.BytesList();\n        const bytes = new binary_serializer_1.BinarySerializer(list);\n        let isUnlModify = false;\n        const xAddressDecoded = Object.entries(value).reduce((acc, [key, val]) => {\n            let handled = undefined;\n            if (val && (0, ripple_address_codec_1.isValidXAddress)(val.toString())) {\n                handled = handleXAddress(key, val.toString());\n                checkForDuplicateTags(handled, value);\n            }\n            return Object.assign(acc, handled !== null && handled !== void 0 ? handled : { [key]: val });\n        }, {});\n        let sorted = Object.keys(xAddressDecoded)\n            .map((f) => definitions.field[f])\n            .filter((f) => f !== undefined &&\n            xAddressDecoded[f.name] !== undefined &&\n            f.isSerialized)\n            .sort((a, b) => {\n            return a.ordinal - b.ordinal;\n        });\n        if (filter !== undefined) {\n            sorted = sorted.filter(filter);\n        }\n        sorted.forEach((field) => {\n            const associatedValue = field.type.name === ST_OBJECT\n                ? this.from(xAddressDecoded[field.name], undefined, definitions)\n                : field.type.name === 'STArray'\n                    ? st_array_1.STArray.from(xAddressDecoded[field.name], definitions)\n                    : field.associatedType.from(xAddressDecoded[field.name]);\n            if (associatedValue == undefined) {\n                throw new TypeError(`Unable to interpret \"${field.name}: ${xAddressDecoded[field.name]}\".`);\n            }\n            if (associatedValue.name === 'UNLModify') {\n                // triggered when the TransactionType field has a value of 'UNLModify'\n                isUnlModify = true;\n            }\n            // true when in the UNLModify pseudotransaction (after the transaction type has been processed) and working with the\n            // Account field\n            // The Account field must not be a part of the UNLModify pseudotransaction encoding, due to a bug in rippled\n            const isUnlModifyWorkaround = field.name == 'Account' && isUnlModify;\n            bytes.writeFieldAndValue(field, associatedValue, isUnlModifyWorkaround);\n            if (field.type.name === ST_OBJECT) {\n                bytes.put(OBJECT_END_MARKER_BYTE);\n            }\n        });\n        return new STObject(list.toBytes());\n    }\n    /**\n     * Get the JSON interpretation of this.bytes\n     * @param definitions rippled definitions used to parse the values of transaction types and such.\n     *                          Can be customized for sidechains and amendments.\n     * @returns a JSON object\n     */\n    toJSON(definitions) {\n        const objectParser = new binary_parser_1.BinaryParser(this.toString(), definitions);\n        const accumulator = {};\n        while (!objectParser.end()) {\n            const field = objectParser.readField();\n            if (field.name === OBJECT_END_MARKER) {\n                break;\n            }\n            accumulator[field.name] = objectParser\n                .readFieldValue(field)\n                .toJSON(definitions);\n        }\n        return accumulator;\n    }\n}\nexports.STObject = STObject;\n//# sourceMappingURL=st-object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/st-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-16.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/uint-16.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt16 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Derived UInt class for serializing/deserializing 16 bit UInt\n */\nclass UInt16 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt16.defaultUInt16.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt16(parser.read(UInt16.width));\n    }\n    /**\n     * Construct a UInt16 object from a number\n     *\n     * @param val UInt16 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt16) {\n            return val;\n        }\n        if (typeof val === 'number') {\n            const buf = buffer_1.Buffer.alloc(UInt16.width);\n            buf.writeUInt16BE(val, 0);\n            return new UInt16(buf);\n        }\n        throw new Error('Can not construct UInt16 with given value');\n    }\n    /**\n     * get the value of a UInt16 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return this.bytes.readUInt16BE(0);\n    }\n}\nexports.UInt16 = UInt16;\nUInt16.width = 16 / 8; // 2\nUInt16.defaultUInt16 = new UInt16(buffer_1.Buffer.alloc(UInt16.width));\n//# sourceMappingURL=uint-16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtMTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQywyRUFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLHVCQUF1QjtBQUN2QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvdWludC0xNi5qcz80ODZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VSW50MTYgPSB2b2lkIDA7XG5jb25zdCB1aW50XzEgPSByZXF1aXJlKFwiLi91aW50XCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyL1wiKTtcbi8qKlxuICogRGVyaXZlZCBVSW50IGNsYXNzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nIDE2IGJpdCBVSW50XG4gKi9cbmNsYXNzIFVJbnQxNiBleHRlbmRzIHVpbnRfMS5VSW50IHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBVSW50MTYuZGVmYXVsdFVJbnQxNi5ieXRlcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICByZXR1cm4gbmV3IFVJbnQxNihwYXJzZXIucmVhZChVSW50MTYud2lkdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVUludDE2IG9iamVjdCBmcm9tIGEgbnVtYmVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsIFVJbnQxNiBvYmplY3Qgb3IgbnVtYmVyXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsKSB7XG4gICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBVSW50MTYpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBjb25zdCBidWYgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoVUludDE2LndpZHRoKTtcbiAgICAgICAgICAgIGJ1Zi53cml0ZVVJbnQxNkJFKHZhbCwgMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVJbnQxNihidWYpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuIG5vdCBjb25zdHJ1Y3QgVUludDE2IHdpdGggZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogZ2V0IHRoZSB2YWx1ZSBvZiBhIFVJbnQxNiBvYmplY3RcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBudW1iZXIgcmVwcmVzZW50ZWQgYnkgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHZhbHVlT2YoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVzLnJlYWRVSW50MTZCRSgwKTtcbiAgICB9XG59XG5leHBvcnRzLlVJbnQxNiA9IFVJbnQxNjtcblVJbnQxNi53aWR0aCA9IDE2IC8gODsgLy8gMlxuVUludDE2LmRlZmF1bHRVSW50MTYgPSBuZXcgVUludDE2KGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhVSW50MTYud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQtMTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-32.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/uint-32.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt32 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Derived UInt class for serializing/deserializing 32 bit UInt\n */\nclass UInt32 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt32.defaultUInt32.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt32(parser.read(UInt32.width));\n    }\n    /**\n     * Construct a UInt32 object from a number\n     *\n     * @param val UInt32 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt32) {\n            return val;\n        }\n        const buf = buffer_1.Buffer.alloc(UInt32.width);\n        if (typeof val === 'string') {\n            const num = Number.parseInt(val);\n            buf.writeUInt32BE(num, 0);\n            return new UInt32(buf);\n        }\n        if (typeof val === 'number') {\n            buf.writeUInt32BE(val, 0);\n            return new UInt32(buf);\n        }\n        throw new Error('Cannot construct UInt32 from given value');\n    }\n    /**\n     * get the value of a UInt32 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return this.bytes.readUInt32BE(0);\n    }\n}\nexports.UInt32 = UInt32;\nUInt32.width = 32 / 8; // 4\nUInt32.defaultUInt32 = new UInt32(buffer_1.Buffer.alloc(UInt32.width));\n//# sourceMappingURL=uint-32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtMzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQywyRUFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxxREFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtMzIuanM/MzMxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludDMyID0gdm9pZCAwO1xuY29uc3QgdWludF8xID0gcmVxdWlyZShcIi4vdWludFwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG4vKipcbiAqIERlcml2ZWQgVUludCBjbGFzcyBmb3Igc2VyaWFsaXppbmcvZGVzZXJpYWxpemluZyAzMiBiaXQgVUludFxuICovXG5jbGFzcyBVSW50MzIgZXh0ZW5kcyB1aW50XzEuVUludCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogVUludDMyLmRlZmF1bHRVSW50MzIuYnl0ZXMpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVSW50MzIocGFyc2VyLnJlYWQoVUludDMyLndpZHRoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIFVJbnQzMiBvYmplY3QgZnJvbSBhIG51bWJlclxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCBVSW50MzIgb2JqZWN0IG9yIG51bWJlclxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbCkge1xuICAgICAgICBpZiAodmFsIGluc3RhbmNlb2YgVUludDMyKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ1ZiA9IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhVSW50MzIud2lkdGgpO1xuICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGNvbnN0IG51bSA9IE51bWJlci5wYXJzZUludCh2YWwpO1xuICAgICAgICAgICAgYnVmLndyaXRlVUludDMyQkUobnVtLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDMyKGJ1Zik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBidWYud3JpdGVVSW50MzJCRSh2YWwsIDApO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVSW50MzIoYnVmKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgVUludDMyIGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogZ2V0IHRoZSB2YWx1ZSBvZiBhIFVJbnQzMiBvYmplY3RcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBudW1iZXIgcmVwcmVzZW50ZWQgYnkgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHZhbHVlT2YoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVzLnJlYWRVSW50MzJCRSgwKTtcbiAgICB9XG59XG5leHBvcnRzLlVJbnQzMiA9IFVJbnQzMjtcblVJbnQzMi53aWR0aCA9IDMyIC8gODsgLy8gNFxuVUludDMyLmRlZmF1bHRVSW50MzIgPSBuZXcgVUludDMyKGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhVSW50MzIud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQtMzIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-64.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/uint-64.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt64 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst bigInt = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\nconst big_integer_1 = __webpack_require__(/*! big-integer */ \"(ssr)/./node_modules/big-integer/BigInteger.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst HEX_REGEX = /^[a-fA-F0-9]{1,16}$/;\nconst mask = bigInt(0x00000000ffffffff);\n/**\n * Derived UInt class for serializing/deserializing 64 bit UInt\n */\nclass UInt64 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt64.defaultUInt64.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt64(parser.read(UInt64.width));\n    }\n    /**\n     * Construct a UInt64 object\n     *\n     * @param val A UInt64, hex-string, bigInt, or number\n     * @returns A UInt64 object\n     */\n    static from(val) {\n        if (val instanceof UInt64) {\n            return val;\n        }\n        let buf = buffer_1.Buffer.alloc(UInt64.width);\n        if (typeof val === 'number') {\n            if (val < 0) {\n                throw new Error('value must be an unsigned integer');\n            }\n            const number = bigInt(val);\n            const intBuf = [buffer_1.Buffer.alloc(4), buffer_1.Buffer.alloc(4)];\n            intBuf[0].writeUInt32BE(Number(number.shiftRight(32)), 0);\n            intBuf[1].writeUInt32BE(Number(number.and(mask)), 0);\n            return new UInt64(buffer_1.Buffer.concat(intBuf));\n        }\n        if (typeof val === 'string') {\n            if (!HEX_REGEX.test(val)) {\n                throw new Error(`${val} is not a valid hex-string`);\n            }\n            const strBuf = val.padStart(16, '0');\n            buf = buffer_1.Buffer.from(strBuf, 'hex');\n            return new UInt64(buf);\n        }\n        if ((0, big_integer_1.isInstance)(val)) {\n            const intBuf = [buffer_1.Buffer.alloc(4), buffer_1.Buffer.alloc(4)];\n            intBuf[0].writeUInt32BE(Number(val.shiftRight(bigInt(32))), 0);\n            intBuf[1].writeUInt32BE(Number(val.and(mask)), 0);\n            return new UInt64(buffer_1.Buffer.concat(intBuf));\n        }\n        throw new Error('Cannot construct UInt64 from given value');\n    }\n    /**\n     * The JSON representation of a UInt64 object\n     *\n     * @returns a hex-string\n     */\n    toJSON() {\n        return this.bytes.toString('hex').toUpperCase();\n    }\n    /**\n     * Get the value of the UInt64\n     *\n     * @returns the number represented buy this.bytes\n     */\n    valueOf() {\n        const msb = bigInt(this.bytes.slice(0, 4).readUInt32BE(0));\n        const lsb = bigInt(this.bytes.slice(4).readUInt32BE(0));\n        return msb.shiftLeft(bigInt(32)).or(lsb);\n    }\n    /**\n     * Get the bytes representation of the UInt64 object\n     *\n     * @returns 8 bytes representing the UInt64\n     */\n    toBytes() {\n        return this.bytes;\n    }\n}\nexports.UInt64 = UInt64;\nUInt64.width = 64 / 8; // 8\nUInt64.defaultUInt64 = new UInt64(buffer_1.Buffer.alloc(UInt64.width));\n//# sourceMappingURL=uint-64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtNjQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQywyRUFBUTtBQUMvQixlQUFlLG1CQUFPLENBQUMsbUVBQWE7QUFDcEMsc0JBQXNCLG1CQUFPLENBQUMsbUVBQWE7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEMsZ0NBQWdDLEtBQUs7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsS0FBSztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3hycGwtc3RhYmxlY29pbi1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtNjQuanM/NDM4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludDY0ID0gdm9pZCAwO1xuY29uc3QgdWludF8xID0gcmVxdWlyZShcIi4vdWludFwiKTtcbmNvbnN0IGJpZ0ludCA9IHJlcXVpcmUoXCJiaWctaW50ZWdlclwiKTtcbmNvbnN0IGJpZ19pbnRlZ2VyXzEgPSByZXF1aXJlKFwiYmlnLWludGVnZXJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXIvXCIpO1xuY29uc3QgSEVYX1JFR0VYID0gL15bYS1mQS1GMC05XXsxLDE2fSQvO1xuY29uc3QgbWFzayA9IGJpZ0ludCgweDAwMDAwMDAwZmZmZmZmZmYpO1xuLyoqXG4gKiBEZXJpdmVkIFVJbnQgY2xhc3MgZm9yIHNlcmlhbGl6aW5nL2Rlc2VyaWFsaXppbmcgNjQgYml0IFVJbnRcbiAqL1xuY2xhc3MgVUludDY0IGV4dGVuZHMgdWludF8xLlVJbnQge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzICE9PSBudWxsICYmIGJ5dGVzICE9PSB2b2lkIDAgPyBieXRlcyA6IFVJbnQ2NC5kZWZhdWx0VUludDY0LmJ5dGVzKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVUludDY0KHBhcnNlci5yZWFkKFVJbnQ2NC53aWR0aCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBVSW50NjQgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsIEEgVUludDY0LCBoZXgtc3RyaW5nLCBiaWdJbnQsIG9yIG51bWJlclxuICAgICAqIEByZXR1cm5zIEEgVUludDY0IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbCkge1xuICAgICAgICBpZiAodmFsIGluc3RhbmNlb2YgVUludDY0KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgICAgIGxldCBidWYgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoVUludDY0LndpZHRoKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBpZiAodmFsIDwgMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndmFsdWUgbXVzdCBiZSBhbiB1bnNpZ25lZCBpbnRlZ2VyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBudW1iZXIgPSBiaWdJbnQodmFsKTtcbiAgICAgICAgICAgIGNvbnN0IGludEJ1ZiA9IFtidWZmZXJfMS5CdWZmZXIuYWxsb2MoNCksIGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyg0KV07XG4gICAgICAgICAgICBpbnRCdWZbMF0ud3JpdGVVSW50MzJCRShOdW1iZXIobnVtYmVyLnNoaWZ0UmlnaHQoMzIpKSwgMCk7XG4gICAgICAgICAgICBpbnRCdWZbMV0ud3JpdGVVSW50MzJCRShOdW1iZXIobnVtYmVyLmFuZChtYXNrKSksIDApO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVSW50NjQoYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChpbnRCdWYpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmICghSEVYX1JFR0VYLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHt2YWx9IGlzIG5vdCBhIHZhbGlkIGhleC1zdHJpbmdgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN0ckJ1ZiA9IHZhbC5wYWRTdGFydCgxNiwgJzAnKTtcbiAgICAgICAgICAgIGJ1ZiA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHN0ckJ1ZiwgJ2hleCcpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVSW50NjQoYnVmKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKDAsIGJpZ19pbnRlZ2VyXzEuaXNJbnN0YW5jZSkodmFsKSkge1xuICAgICAgICAgICAgY29uc3QgaW50QnVmID0gW2J1ZmZlcl8xLkJ1ZmZlci5hbGxvYyg0KSwgYnVmZmVyXzEuQnVmZmVyLmFsbG9jKDQpXTtcbiAgICAgICAgICAgIGludEJ1ZlswXS53cml0ZVVJbnQzMkJFKE51bWJlcih2YWwuc2hpZnRSaWdodChiaWdJbnQoMzIpKSksIDApO1xuICAgICAgICAgICAgaW50QnVmWzFdLndyaXRlVUludDMyQkUoTnVtYmVyKHZhbC5hbmQobWFzaykpLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDY0KGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoaW50QnVmKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IFVJbnQ2NCBmcm9tIGdpdmVuIHZhbHVlJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgVUludDY0IG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgYSBoZXgtc3RyaW5nXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ieXRlcy50b1N0cmluZygnaGV4JykudG9VcHBlckNhc2UoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB2YWx1ZSBvZiB0aGUgVUludDY0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgbnVtYmVyIHJlcHJlc2VudGVkIGJ1eSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdmFsdWVPZigpIHtcbiAgICAgICAgY29uc3QgbXNiID0gYmlnSW50KHRoaXMuYnl0ZXMuc2xpY2UoMCwgNCkucmVhZFVJbnQzMkJFKDApKTtcbiAgICAgICAgY29uc3QgbHNiID0gYmlnSW50KHRoaXMuYnl0ZXMuc2xpY2UoNCkucmVhZFVJbnQzMkJFKDApKTtcbiAgICAgICAgcmV0dXJuIG1zYi5zaGlmdExlZnQoYmlnSW50KDMyKSkub3IobHNiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBieXRlcyByZXByZXNlbnRhdGlvbiBvZiB0aGUgVUludDY0IG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgOCBieXRlcyByZXByZXNlbnRpbmcgdGhlIFVJbnQ2NFxuICAgICAqL1xuICAgIHRvQnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVzO1xuICAgIH1cbn1cbmV4cG9ydHMuVUludDY0ID0gVUludDY0O1xuVUludDY0LndpZHRoID0gNjQgLyA4OyAvLyA4XG5VSW50NjQuZGVmYXVsdFVJbnQ2NCA9IG5ldyBVSW50NjQoYnVmZmVyXzEuQnVmZmVyLmFsbG9jKFVJbnQ2NC53aWR0aCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludC02NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-8.js":
/*!***************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/uint-8.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt8 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\n/**\n * Derived UInt class for serializing/deserializing 8 bit UInt\n */\nclass UInt8 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt8.defaultUInt8.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt8(parser.read(UInt8.width));\n    }\n    /**\n     * Construct a UInt8 object from a number\n     *\n     * @param val UInt8 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt8) {\n            return val;\n        }\n        if (typeof val === 'number') {\n            const buf = buffer_1.Buffer.alloc(UInt8.width);\n            buf.writeUInt8(val, 0);\n            return new UInt8(buf);\n        }\n        throw new Error('Cannot construct UInt8 from given value');\n    }\n    /**\n     * get the value of a UInt8 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return this.bytes.readUInt8(0);\n    }\n}\nexports.UInt8 = UInt8;\nUInt8.width = 8 / 8; // 1\nUInt8.defaultUInt8 = new UInt8(buffer_1.Buffer.alloc(UInt8.width));\n//# sourceMappingURL=uint-8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtOC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2IsZUFBZSxtQkFBTyxDQUFDLDJFQUFRO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHFEQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IscUJBQXFCO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LTguanM/NGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludDggPSB2b2lkIDA7XG5jb25zdCB1aW50XzEgPSByZXF1aXJlKFwiLi91aW50XCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyL1wiKTtcbi8qKlxuICogRGVyaXZlZCBVSW50IGNsYXNzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nIDggYml0IFVJbnRcbiAqL1xuY2xhc3MgVUludDggZXh0ZW5kcyB1aW50XzEuVUludCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogVUludDguZGVmYXVsdFVJbnQ4LmJ5dGVzKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVUludDgocGFyc2VyLnJlYWQoVUludDgud2lkdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVUludDggb2JqZWN0IGZyb20gYSBudW1iZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWwgVUludDggb2JqZWN0IG9yIG51bWJlclxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbCkge1xuICAgICAgICBpZiAodmFsIGluc3RhbmNlb2YgVUludDgpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBjb25zdCBidWYgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoVUludDgud2lkdGgpO1xuICAgICAgICAgICAgYnVmLndyaXRlVUludDgodmFsLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDgoYnVmKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgVUludDggZnJvbSBnaXZlbiB2YWx1ZScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXQgdGhlIHZhbHVlIG9mIGEgVUludDggb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgbnVtYmVyIHJlcHJlc2VudGVkIGJ5IHRoaXMuYnl0ZXNcbiAgICAgKi9cbiAgICB2YWx1ZU9mKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ieXRlcy5yZWFkVUludDgoMCk7XG4gICAgfVxufVxuZXhwb3J0cy5VSW50OCA9IFVJbnQ4O1xuVUludDgud2lkdGggPSA4IC8gODsgLy8gMVxuVUludDguZGVmYXVsdFVJbnQ4ID0gbmV3IFVJbnQ4KGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyhVSW50OC53aWR0aCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludC04LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/uint-8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js":
/*!*************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/uint.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\n/**\n * Compare numbers and bigInts n1 and n2\n *\n * @param n1 First object to compare\n * @param n2 Second object to compare\n * @returns -1, 0, or 1, depending on how the two objects compare\n */\nfunction compare(n1, n2) {\n    return n1 < n2 ? -1 : n1 == n2 ? 0 : 1;\n}\n/**\n * Base class for serializing and deserializing unsigned integers.\n */\nclass UInt extends serialized_type_1.Comparable {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Overload of compareTo for Comparable\n     *\n     * @param other other UInt to compare this to\n     * @returns -1, 0, or 1 depending on how the objects relate to each other\n     */\n    compareTo(other) {\n        return compare(this.valueOf(), other.valueOf());\n    }\n    /**\n     * Convert a UInt object to JSON\n     *\n     * @returns number or string represented by this.bytes\n     */\n    toJSON() {\n        const val = this.valueOf();\n        return typeof val === 'number' ? val : val.toString();\n    }\n}\nexports.UInt = UInt;\n//# sourceMappingURL=uint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLDBCQUEwQixtQkFBTyxDQUFDLGlHQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LmpzPzk1MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVJbnQgPSB2b2lkIDA7XG5jb25zdCBzZXJpYWxpemVkX3R5cGVfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZWQtdHlwZVwiKTtcbi8qKlxuICogQ29tcGFyZSBudW1iZXJzIGFuZCBiaWdJbnRzIG4xIGFuZCBuMlxuICpcbiAqIEBwYXJhbSBuMSBGaXJzdCBvYmplY3QgdG8gY29tcGFyZVxuICogQHBhcmFtIG4yIFNlY29uZCBvYmplY3QgdG8gY29tcGFyZVxuICogQHJldHVybnMgLTEsIDAsIG9yIDEsIGRlcGVuZGluZyBvbiBob3cgdGhlIHR3byBvYmplY3RzIGNvbXBhcmVcbiAqL1xuZnVuY3Rpb24gY29tcGFyZShuMSwgbjIpIHtcbiAgICByZXR1cm4gbjEgPCBuMiA/IC0xIDogbjEgPT0gbjIgPyAwIDogMTtcbn1cbi8qKlxuICogQmFzZSBjbGFzcyBmb3Igc2VyaWFsaXppbmcgYW5kIGRlc2VyaWFsaXppbmcgdW5zaWduZWQgaW50ZWdlcnMuXG4gKi9cbmNsYXNzIFVJbnQgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5Db21wYXJhYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE92ZXJsb2FkIG9mIGNvbXBhcmVUbyBmb3IgQ29tcGFyYWJsZVxuICAgICAqXG4gICAgICogQHBhcmFtIG90aGVyIG90aGVyIFVJbnQgdG8gY29tcGFyZSB0aGlzIHRvXG4gICAgICogQHJldHVybnMgLTEsIDAsIG9yIDEgZGVwZW5kaW5nIG9uIGhvdyB0aGUgb2JqZWN0cyByZWxhdGUgdG8gZWFjaCBvdGhlclxuICAgICAqL1xuICAgIGNvbXBhcmVUbyhvdGhlcikge1xuICAgICAgICByZXR1cm4gY29tcGFyZSh0aGlzLnZhbHVlT2YoKSwgb3RoZXIudmFsdWVPZigpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydCBhIFVJbnQgb2JqZWN0IHRvIEpTT05cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIG51bWJlciBvciBzdHJpbmcgcmVwcmVzZW50ZWQgYnkgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgY29uc3QgdmFsID0gdGhpcy52YWx1ZU9mKCk7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJyA/IHZhbCA6IHZhbC50b1N0cmluZygpO1xuICAgIH1cbn1cbmV4cG9ydHMuVUludCA9IFVJbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/uint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/vector-256.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/vector-256.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Vector256 = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst hash_256_1 = __webpack_require__(/*! ./hash-256 */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\n/**\n * TypeGuard for Array<string>\n */\nfunction isStrings(arg) {\n    return Array.isArray(arg) && (arg.length === 0 || typeof arg[0] === 'string');\n}\n/**\n * Class for serializing and deserializing vectors of Hash256\n */\nclass Vector256 extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Construct a Vector256 from a BinaryParser\n     *\n     * @param parser BinaryParser to\n     * @param hint length of the vector, in bytes, optional\n     * @returns a Vector256 object\n     */\n    static fromParser(parser, hint) {\n        const bytesList = new binary_serializer_1.BytesList();\n        const bytes = hint !== null && hint !== void 0 ? hint : parser.size();\n        const hashes = bytes / 32;\n        for (let i = 0; i < hashes; i++) {\n            hash_256_1.Hash256.fromParser(parser).toBytesSink(bytesList);\n        }\n        return new Vector256(bytesList.toBytes());\n    }\n    /**\n     * Construct a Vector256 object from an array of hashes\n     *\n     * @param value A Vector256 object or array of hex-strings representing Hash256's\n     * @returns a Vector256 object\n     */\n    static from(value) {\n        if (value instanceof Vector256) {\n            return value;\n        }\n        if (isStrings(value)) {\n            const bytesList = new binary_serializer_1.BytesList();\n            value.forEach((hash) => {\n                hash_256_1.Hash256.from(hash).toBytesSink(bytesList);\n            });\n            return new Vector256(bytesList.toBytes());\n        }\n        throw new Error('Cannot construct Vector256 from given value');\n    }\n    /**\n     * Return an Array of hex-strings represented by this.bytes\n     *\n     * @returns An Array of strings representing the Hash256 objects\n     */\n    toJSON() {\n        if (this.bytes.byteLength % 32 !== 0) {\n            throw new Error('Invalid bytes for Vector256');\n        }\n        const result = [];\n        for (let i = 0; i < this.bytes.byteLength; i += 32) {\n            result.push(this.bytes\n                .slice(i, i + 32)\n                .toString('hex')\n                .toUpperCase());\n        }\n        return result;\n    }\n}\nexports.Vector256 = Vector256;\n//# sourceMappingURL=vector-256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3ZlY3Rvci0yNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLDBCQUEwQixtQkFBTyxDQUFDLGlHQUFtQjtBQUNyRCxtQkFBbUIsbUJBQU8sQ0FBQyxtRkFBWTtBQUN2Qyw0QkFBNEIsbUJBQU8sQ0FBQyw4R0FBNkI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkJBQTJCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy92ZWN0b3ItMjU2LmpzPzY5MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZlY3RvcjI1NiA9IHZvaWQgMDtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3QgaGFzaF8yNTZfMSA9IHJlcXVpcmUoXCIuL2hhc2gtMjU2XCIpO1xuY29uc3QgYmluYXJ5X3NlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuLi9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXJcIik7XG4vKipcbiAqIFR5cGVHdWFyZCBmb3IgQXJyYXk8c3RyaW5nPlxuICovXG5mdW5jdGlvbiBpc1N0cmluZ3MoYXJnKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKSAmJiAoYXJnLmxlbmd0aCA9PT0gMCB8fCB0eXBlb2YgYXJnWzBdID09PSAnc3RyaW5nJyk7XG59XG4vKipcbiAqIENsYXNzIGZvciBzZXJpYWxpemluZyBhbmQgZGVzZXJpYWxpemluZyB2ZWN0b3JzIG9mIEhhc2gyNTZcbiAqL1xuY2xhc3MgVmVjdG9yMjU2IGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVmVjdG9yMjU2IGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgQmluYXJ5UGFyc2VyIHRvXG4gICAgICogQHBhcmFtIGhpbnQgbGVuZ3RoIG9mIHRoZSB2ZWN0b3IsIGluIGJ5dGVzLCBvcHRpb25hbFxuICAgICAqIEByZXR1cm5zIGEgVmVjdG9yMjU2IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlciwgaGludCkge1xuICAgICAgICBjb25zdCBieXRlc0xpc3QgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBoaW50ICE9PSBudWxsICYmIGhpbnQgIT09IHZvaWQgMCA/IGhpbnQgOiBwYXJzZXIuc2l6ZSgpO1xuICAgICAgICBjb25zdCBoYXNoZXMgPSBieXRlcyAvIDMyO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhhc2hlczsgaSsrKSB7XG4gICAgICAgICAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbVBhcnNlcihwYXJzZXIpLnRvQnl0ZXNTaW5rKGJ5dGVzTGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyNTYoYnl0ZXNMaXN0LnRvQnl0ZXMoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIFZlY3RvcjI1NiBvYmplY3QgZnJvbSBhbiBhcnJheSBvZiBoYXNoZXNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBBIFZlY3RvcjI1NiBvYmplY3Qgb3IgYXJyYXkgb2YgaGV4LXN0cmluZ3MgcmVwcmVzZW50aW5nIEhhc2gyNTYnc1xuICAgICAqIEByZXR1cm5zIGEgVmVjdG9yMjU2IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFZlY3RvcjI1Nikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1N0cmluZ3ModmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlc0xpc3QgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgICAgIHZhbHVlLmZvckVhY2goKGhhc2gpID0+IHtcbiAgICAgICAgICAgICAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbShoYXNoKS50b0J5dGVzU2luayhieXRlc0xpc3QpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFZlY3RvcjI1NihieXRlc0xpc3QudG9CeXRlcygpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgVmVjdG9yMjU2IGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGFuIEFycmF5IG9mIGhleC1zdHJpbmdzIHJlcHJlc2VudGVkIGJ5IHRoaXMuYnl0ZXNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEFuIEFycmF5IG9mIHN0cmluZ3MgcmVwcmVzZW50aW5nIHRoZSBIYXNoMjU2IG9iamVjdHNcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGlmICh0aGlzLmJ5dGVzLmJ5dGVMZW5ndGggJSAzMiAhPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGJ5dGVzIGZvciBWZWN0b3IyNTYnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmJ5dGVzLmJ5dGVMZW5ndGg7IGkgKz0gMzIpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMuYnl0ZXNcbiAgICAgICAgICAgICAgICAuc2xpY2UoaSwgaSArIDMyKVxuICAgICAgICAgICAgICAgIC50b1N0cmluZygnaGV4JylcbiAgICAgICAgICAgICAgICAudG9VcHBlckNhc2UoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLlZlY3RvcjI1NiA9IFZlY3RvcjI1Njtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlY3Rvci0yNTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/vector-256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/types/xchain-bridge.js":
/*!**********************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/types/xchain-bridge.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XChainBridge = void 0;\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/./node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst buffer_1 = __webpack_require__(/*! buffer/ */ \"(ssr)/./node_modules/buffer/index.js\");\nconst issue_1 = __webpack_require__(/*! ./issue */ \"(ssr)/./node_modules/ripple-binary-codec/dist/types/issue.js\");\n/**\n * Type guard for XChainBridgeObject\n */\nfunction isXChainBridgeObject(arg) {\n    const keys = Object.keys(arg).sort();\n    return (keys.length === 4 &&\n        keys[0] === 'IssuingChainDoor' &&\n        keys[1] === 'IssuingChainIssue' &&\n        keys[2] === 'LockingChainDoor' &&\n        keys[3] === 'LockingChainIssue');\n}\n/**\n * Class for serializing/deserializing XChainBridges\n */\nclass XChainBridge extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : XChainBridge.ZERO_XCHAIN_BRIDGE.bytes);\n    }\n    /**\n     * Construct a cross-chain bridge from a JSON\n     *\n     * @param value XChainBridge or JSON to parse into an XChainBridge\n     * @returns An XChainBridge object\n     */\n    static from(value) {\n        if (value instanceof XChainBridge) {\n            return value;\n        }\n        if (!isXChainBridgeObject(value)) {\n            throw new Error('Invalid type to construct an XChainBridge');\n        }\n        const bytes = [];\n        this.TYPE_ORDER.forEach((item) => {\n            const { name, type } = item;\n            if (type === account_id_1.AccountID) {\n                bytes.push(buffer_1.Buffer.from([0x14]));\n            }\n            const object = type.from(value[name]);\n            bytes.push(object.toBytes());\n        });\n        return new XChainBridge(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Read an XChainBridge from a BinaryParser\n     *\n     * @param parser BinaryParser to read the XChainBridge from\n     * @returns An XChainBridge object\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        this.TYPE_ORDER.forEach((item) => {\n            const { type } = item;\n            if (type === account_id_1.AccountID) {\n                parser.skip(1);\n                bytes.push(buffer_1.Buffer.from([0x14]));\n            }\n            const object = type.fromParser(parser);\n            bytes.push(object.toBytes());\n        });\n        return new XChainBridge(buffer_1.Buffer.concat(bytes));\n    }\n    /**\n     * Get the JSON representation of this XChainBridge\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        const parser = new binary_parser_1.BinaryParser(this.toString());\n        const json = {};\n        XChainBridge.TYPE_ORDER.forEach((item) => {\n            const { name, type } = item;\n            if (type === account_id_1.AccountID) {\n                parser.skip(1);\n            }\n            const object = type.fromParser(parser).toJSON();\n            json[name] = object;\n        });\n        return json;\n    }\n}\nexports.XChainBridge = XChainBridge;\nXChainBridge.ZERO_XCHAIN_BRIDGE = new XChainBridge(buffer_1.Buffer.concat([\n    buffer_1.Buffer.from([0x14]),\n    buffer_1.Buffer.alloc(40),\n    buffer_1.Buffer.from([0x14]),\n    buffer_1.Buffer.alloc(40),\n]));\nXChainBridge.TYPE_ORDER = [\n    { name: 'LockingChainDoor', type: account_id_1.AccountID },\n    { name: 'LockingChainIssue', type: issue_1.Issue },\n    { name: 'IssuingChainDoor', type: account_id_1.AccountID },\n    { name: 'IssuingChainIssue', type: issue_1.Issue },\n];\n//# sourceMappingURL=xchain-bridge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3hjaGFpbi1icmlkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLHdCQUF3QixtQkFBTyxDQUFDLHNHQUF5QjtBQUN6RCxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBYztBQUMzQywwQkFBMEIsbUJBQU8sQ0FBQyxpR0FBbUI7QUFDckQsaUJBQWlCLG1CQUFPLENBQUMscURBQVM7QUFDbEMsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGFBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0RBQXdEO0FBQzlELE1BQU0sZ0RBQWdEO0FBQ3RELE1BQU0sd0RBQXdEO0FBQzlELE1BQU0sZ0RBQWdEO0FBQ3REO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy94Y2hhaW4tYnJpZGdlLmpzPzA0MmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlhDaGFpbkJyaWRnZSA9IHZvaWQgMDtcbmNvbnN0IGJpbmFyeV9wYXJzZXJfMSA9IHJlcXVpcmUoXCIuLi9zZXJkZXMvYmluYXJ5LXBhcnNlclwiKTtcbmNvbnN0IGFjY291bnRfaWRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnQtaWRcIik7XG5jb25zdCBzZXJpYWxpemVkX3R5cGVfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZWQtdHlwZVwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlci9cIik7XG5jb25zdCBpc3N1ZV8xID0gcmVxdWlyZShcIi4vaXNzdWVcIik7XG4vKipcbiAqIFR5cGUgZ3VhcmQgZm9yIFhDaGFpbkJyaWRnZU9iamVjdFxuICovXG5mdW5jdGlvbiBpc1hDaGFpbkJyaWRnZU9iamVjdChhcmcpIHtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYXJnKS5zb3J0KCk7XG4gICAgcmV0dXJuIChrZXlzLmxlbmd0aCA9PT0gNCAmJlxuICAgICAgICBrZXlzWzBdID09PSAnSXNzdWluZ0NoYWluRG9vcicgJiZcbiAgICAgICAga2V5c1sxXSA9PT0gJ0lzc3VpbmdDaGFpbklzc3VlJyAmJlxuICAgICAgICBrZXlzWzJdID09PSAnTG9ja2luZ0NoYWluRG9vcicgJiZcbiAgICAgICAga2V5c1szXSA9PT0gJ0xvY2tpbmdDaGFpbklzc3VlJyk7XG59XG4vKipcbiAqIENsYXNzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nIFhDaGFpbkJyaWRnZXNcbiAqL1xuY2xhc3MgWENoYWluQnJpZGdlIGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzICE9PSBudWxsICYmIGJ5dGVzICE9PSB2b2lkIDAgPyBieXRlcyA6IFhDaGFpbkJyaWRnZS5aRVJPX1hDSEFJTl9CUklER0UuYnl0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBjcm9zcy1jaGFpbiBicmlkZ2UgZnJvbSBhIEpTT05cbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBYQ2hhaW5CcmlkZ2Ugb3IgSlNPTiB0byBwYXJzZSBpbnRvIGFuIFhDaGFpbkJyaWRnZVxuICAgICAqIEByZXR1cm5zIEFuIFhDaGFpbkJyaWRnZSBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBYQ2hhaW5CcmlkZ2UpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzWENoYWluQnJpZGdlT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHR5cGUgdG8gY29uc3RydWN0IGFuIFhDaGFpbkJyaWRnZScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgIHRoaXMuVFlQRV9PUkRFUi5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG5hbWUsIHR5cGUgfSA9IGl0ZW07XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gYWNjb3VudF9pZF8xLkFjY291bnRJRCkge1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYnVmZmVyXzEuQnVmZmVyLmZyb20oWzB4MTRdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvYmplY3QgPSB0eXBlLmZyb20odmFsdWVbbmFtZV0pO1xuICAgICAgICAgICAgYnl0ZXMucHVzaChvYmplY3QudG9CeXRlcygpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgWENoYWluQnJpZGdlKGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbiBYQ2hhaW5CcmlkZ2UgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCB0aGUgWENoYWluQnJpZGdlIGZyb21cbiAgICAgKiBAcmV0dXJucyBBbiBYQ2hhaW5CcmlkZ2Ugb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgIHRoaXMuVFlQRV9PUkRFUi5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHR5cGUgfSA9IGl0ZW07XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gYWNjb3VudF9pZF8xLkFjY291bnRJRCkge1xuICAgICAgICAgICAgICAgIHBhcnNlci5za2lwKDEpO1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYnVmZmVyXzEuQnVmZmVyLmZyb20oWzB4MTRdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvYmplY3QgPSB0eXBlLmZyb21QYXJzZXIocGFyc2VyKTtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2gob2JqZWN0LnRvQnl0ZXMoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbmV3IFhDaGFpbkJyaWRnZShidWZmZXJfMS5CdWZmZXIuY29uY2F0KGJ5dGVzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzIFhDaGFpbkJyaWRnZVxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIEpTT04gaW50ZXJwcmV0YXRpb24gb2YgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgY29uc3QgcGFyc2VyID0gbmV3IGJpbmFyeV9wYXJzZXJfMS5CaW5hcnlQYXJzZXIodGhpcy50b1N0cmluZygpKTtcbiAgICAgICAgY29uc3QganNvbiA9IHt9O1xuICAgICAgICBYQ2hhaW5CcmlkZ2UuVFlQRV9PUkRFUi5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG5hbWUsIHR5cGUgfSA9IGl0ZW07XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gYWNjb3VudF9pZF8xLkFjY291bnRJRCkge1xuICAgICAgICAgICAgICAgIHBhcnNlci5za2lwKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb2JqZWN0ID0gdHlwZS5mcm9tUGFyc2VyKHBhcnNlcikudG9KU09OKCk7XG4gICAgICAgICAgICBqc29uW25hbWVdID0gb2JqZWN0O1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxufVxuZXhwb3J0cy5YQ2hhaW5CcmlkZ2UgPSBYQ2hhaW5CcmlkZ2U7XG5YQ2hhaW5CcmlkZ2UuWkVST19YQ0hBSU5fQlJJREdFID0gbmV3IFhDaGFpbkJyaWRnZShidWZmZXJfMS5CdWZmZXIuY29uY2F0KFtcbiAgICBidWZmZXJfMS5CdWZmZXIuZnJvbShbMHgxNF0pLFxuICAgIGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyg0MCksXG4gICAgYnVmZmVyXzEuQnVmZmVyLmZyb20oWzB4MTRdKSxcbiAgICBidWZmZXJfMS5CdWZmZXIuYWxsb2MoNDApLFxuXSkpO1xuWENoYWluQnJpZGdlLlRZUEVfT1JERVIgPSBbXG4gICAgeyBuYW1lOiAnTG9ja2luZ0NoYWluRG9vcicsIHR5cGU6IGFjY291bnRfaWRfMS5BY2NvdW50SUQgfSxcbiAgICB7IG5hbWU6ICdMb2NraW5nQ2hhaW5Jc3N1ZScsIHR5cGU6IGlzc3VlXzEuSXNzdWUgfSxcbiAgICB7IG5hbWU6ICdJc3N1aW5nQ2hhaW5Eb29yJywgdHlwZTogYWNjb3VudF9pZF8xLkFjY291bnRJRCB9LFxuICAgIHsgbmFtZTogJ0lzc3VpbmdDaGFpbklzc3VlJywgdHlwZTogaXNzdWVfMS5Jc3N1ZSB9LFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXhjaGFpbi1icmlkZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-binary-codec/dist/types/xchain-bridge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-binary-codec/dist/enums/definitions.json":
/*!**********************************************************************!*\
  !*** ./node_modules/ripple-binary-codec/dist/enums/definitions.json ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"TYPES":{"Done":-1,"Unknown":-2,"NotPresent":0,"UInt16":1,"UInt32":2,"UInt64":3,"Hash128":4,"Hash256":5,"Amount":6,"Blob":7,"AccountID":8,"STObject":14,"STArray":15,"UInt8":16,"Hash160":17,"PathSet":18,"Vector256":19,"UInt96":20,"UInt192":21,"UInt384":22,"UInt512":23,"Issue":24,"XChainBridge":25,"Transaction":10001,"LedgerEntry":10002,"Validation":10003,"Metadata":10004},"LEDGER_ENTRY_TYPES":{"Invalid":-1,"AccountRoot":97,"DirectoryNode":100,"RippleState":114,"Ticket":84,"SignerList":83,"Offer":111,"Bridge":105,"LedgerHashes":104,"Amendments":102,"XChainOwnedClaimID":113,"XChainOwnedCreateAccountClaimID":116,"FeeSettings":115,"Escrow":117,"PayChannel":120,"Check":67,"DepositPreauth":112,"NegativeUNL":78,"NFTokenPage":80,"NFTokenOffer":55,"AMM":121,"DID":73,"Any":-3,"Child":-2,"Nickname":110,"Contract":99,"GeneratorMap":103},"FIELDS":[["Generic",{"nth":0,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Unknown"}],["Invalid",{"nth":-1,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Unknown"}],["ObjectEndMarker",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["ArrayEndMarker",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["hash",{"nth":257,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Hash256"}],["index",{"nth":258,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Hash256"}],["taker_gets_funded",{"nth":258,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Amount"}],["taker_pays_funded",{"nth":259,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Amount"}],["LedgerEntry",{"nth":257,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"LedgerEntry"}],["Transaction",{"nth":257,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Transaction"}],["Validation",{"nth":257,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Validation"}],["Metadata",{"nth":257,"isVLEncoded":false,"isSerialized":false,"isSigningField":false,"type":"Metadata"}],["CloseResolution",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["Method",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["TransactionResult",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["TickSize",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["UNLModifyDisabling",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["HookResult",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["WasLockingChainSend",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt8"}],["LedgerEntryType",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["TransactionType",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["SignerWeight",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["TransferFee",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["TradingFee",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["DiscountedFee",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["Version",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["HookStateChangeCount",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["HookEmitCount",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["HookExecutionIndex",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["HookApiVersion",{"nth":20,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt16"}],["NetworkID",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["Flags",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SourceTag",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["Sequence",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["PreviousTxnLgrSeq",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["LedgerSequence",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["CloseTime",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["ParentCloseTime",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SigningTime",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["Expiration",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["TransferRate",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["WalletSize",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["OwnerCount",{"nth":13,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["DestinationTag",{"nth":14,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["HighQualityIn",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["HighQualityOut",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["LowQualityIn",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["LowQualityOut",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["QualityIn",{"nth":20,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["QualityOut",{"nth":21,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["StampEscrow",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["BondAmount",{"nth":23,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["LoadFee",{"nth":24,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["OfferSequence",{"nth":25,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["FirstLedgerSequence",{"nth":26,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["LastLedgerSequence",{"nth":27,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["TransactionIndex",{"nth":28,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["OperationLimit",{"nth":29,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["ReferenceFeeUnits",{"nth":30,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["ReserveBase",{"nth":31,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["ReserveIncrement",{"nth":32,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SetFlag",{"nth":33,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["ClearFlag",{"nth":34,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SignerQuorum",{"nth":35,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["CancelAfter",{"nth":36,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["FinishAfter",{"nth":37,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SignerListID",{"nth":38,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["SettleDelay",{"nth":39,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["TicketCount",{"nth":40,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["TicketSequence",{"nth":41,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["NFTokenTaxon",{"nth":42,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["MintedNFTokens",{"nth":43,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["BurnedNFTokens",{"nth":44,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["HookStateCount",{"nth":45,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["EmitGeneration",{"nth":46,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["VoteWeight",{"nth":48,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["FirstNFTokenSequence",{"nth":50,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt32"}],["IndexNext",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["IndexPrevious",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["BookNode",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["OwnerNode",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["BaseFee",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["ExchangeRate",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["LowNode",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["HighNode",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["DestinationNode",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["Cookie",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["ServerVersion",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["NFTokenOfferNode",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["EmitBurden",{"nth":13,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["HookOn",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["HookInstructionCount",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["HookReturnCode",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["ReferenceCount",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["XChainClaimID",{"nth":20,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["XChainAccountCreateCount",{"nth":21,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["XChainAccountClaimCount",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"UInt64"}],["EmailHash",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash128"}],["TakerPaysCurrency",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash160"}],["TakerPaysIssuer",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash160"}],["TakerGetsCurrency",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash160"}],["TakerGetsIssuer",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash160"}],["LedgerHash",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["ParentHash",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["TransactionHash",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["AccountHash",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["PreviousTxnID",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["LedgerIndex",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["WalletLocator",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["RootIndex",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["AccountTxnID",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["NFTokenID",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["EmitParentTxnID",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["EmitNonce",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["EmitHookHash",{"nth":13,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["AMMID",{"nth":14,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["BookDirectory",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["InvoiceID",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["Nickname",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["Amendment",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["Digest",{"nth":21,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["Channel",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["ConsensusHash",{"nth":23,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["CheckID",{"nth":24,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["ValidatedHash",{"nth":25,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["PreviousPageMin",{"nth":26,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["NextPageMin",{"nth":27,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["NFTokenBuyOffer",{"nth":28,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["NFTokenSellOffer",{"nth":29,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["HookStateKey",{"nth":30,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["HookHash",{"nth":31,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["HookNamespace",{"nth":32,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["HookSetTxnID",{"nth":33,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Hash256"}],["Amount",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["Balance",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["LimitAmount",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["TakerPays",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["TakerGets",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["LowLimit",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["HighLimit",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["Fee",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["SendMax",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["DeliverMin",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["Amount2",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["BidMin",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["BidMax",{"nth":13,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["MinimumOffer",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["RippleEscrow",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["DeliveredAmount",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["NFTokenBrokerFee",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["BaseFeeDrops",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["ReserveBaseDrops",{"nth":23,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["ReserveIncrementDrops",{"nth":24,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["LPTokenOut",{"nth":25,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["LPTokenIn",{"nth":26,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["EPrice",{"nth":27,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["Price",{"nth":28,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["SignatureReward",{"nth":29,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["MinAccountCreateAmount",{"nth":30,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["LPTokenBalance",{"nth":31,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Amount"}],["PublicKey",{"nth":1,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["MessageKey",{"nth":2,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["SigningPubKey",{"nth":3,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["TxnSignature",{"nth":4,"isVLEncoded":true,"isSerialized":true,"isSigningField":false,"type":"Blob"}],["URI",{"nth":5,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["Signature",{"nth":6,"isVLEncoded":true,"isSerialized":true,"isSigningField":false,"type":"Blob"}],["Domain",{"nth":7,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["FundCode",{"nth":8,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["RemoveCode",{"nth":9,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["ExpireCode",{"nth":10,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["CreateCode",{"nth":11,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["MemoType",{"nth":12,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["MemoData",{"nth":13,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["MemoFormat",{"nth":14,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["Fulfillment",{"nth":16,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["Condition",{"nth":17,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["MasterSignature",{"nth":18,"isVLEncoded":true,"isSerialized":true,"isSigningField":false,"type":"Blob"}],["UNLModifyValidator",{"nth":19,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["ValidatorToDisable",{"nth":20,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["ValidatorToReEnable",{"nth":21,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["HookStateData",{"nth":22,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["HookReturnString",{"nth":23,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["HookParameterName",{"nth":24,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["HookParameterValue",{"nth":25,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["DIDDocument",{"nth":26,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["Data",{"nth":27,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Blob"}],["Account",{"nth":1,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Owner",{"nth":2,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Destination",{"nth":3,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Issuer",{"nth":4,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Authorize",{"nth":5,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Unauthorize",{"nth":6,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["RegularKey",{"nth":8,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["NFTokenMinter",{"nth":9,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["EmitCallback",{"nth":10,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["HookAccount",{"nth":16,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["OtherChainSource",{"nth":18,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["OtherChainDestination",{"nth":19,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["AttestationSignerAccount",{"nth":20,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["AttestationRewardAccount",{"nth":21,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["LockingChainDoor",{"nth":22,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["IssuingChainDoor",{"nth":23,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"AccountID"}],["Indexes",{"nth":1,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Vector256"}],["Hashes",{"nth":2,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Vector256"}],["Amendments",{"nth":3,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Vector256"}],["NFTokenOffers",{"nth":4,"isVLEncoded":true,"isSerialized":true,"isSigningField":true,"type":"Vector256"}],["Paths",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"PathSet"}],["LockingChainIssue",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Issue"}],["IssuingChainIssue",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Issue"}],["Asset",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Issue"}],["Asset2",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"Issue"}],["XChainBridge",{"nth":1,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"XChainBridge"}],["TransactionMetaData",{"nth":2,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["CreatedNode",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["DeletedNode",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["ModifiedNode",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["PreviousFields",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["FinalFields",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["NewFields",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["TemplateEntry",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["Memo",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["SignerEntry",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["NFToken",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["EmitDetails",{"nth":13,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["Hook",{"nth":14,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["Signer",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["Majority",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["DisabledValidator",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["EmittedTxn",{"nth":20,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["HookExecution",{"nth":21,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["HookDefinition",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["HookParameter",{"nth":23,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["HookGrant",{"nth":24,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["VoteEntry",{"nth":25,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["AuctionSlot",{"nth":26,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["AuthAccount",{"nth":27,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["XChainClaimProofSig",{"nth":28,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["XChainCreateAccountProofSig",{"nth":29,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["XChainClaimAttestationCollectionElement",{"nth":30,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["XChainCreateAccountAttestationCollectionElement",{"nth":31,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STObject"}],["Signers",{"nth":3,"isVLEncoded":false,"isSerialized":true,"isSigningField":false,"type":"STArray"}],["SignerEntries",{"nth":4,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Template",{"nth":5,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Necessary",{"nth":6,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Sufficient",{"nth":7,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["AffectedNodes",{"nth":8,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Memos",{"nth":9,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["NFTokens",{"nth":10,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Hooks",{"nth":11,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["VoteSlots",{"nth":12,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["Majorities",{"nth":16,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["DisabledValidators",{"nth":17,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["HookExecutions",{"nth":18,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["HookParameters",{"nth":19,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["HookGrants",{"nth":20,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["XChainClaimAttestations",{"nth":21,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["XChainCreateAccountAttestations",{"nth":22,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}],["AuthAccounts",{"nth":25,"isVLEncoded":false,"isSerialized":true,"isSigningField":true,"type":"STArray"}]],"TRANSACTION_RESULTS":{"telLOCAL_ERROR":-399,"telBAD_DOMAIN":-398,"telBAD_PATH_COUNT":-397,"telBAD_PUBLIC_KEY":-396,"telFAILED_PROCESSING":-395,"telINSUF_FEE_P":-394,"telNO_DST_PARTIAL":-393,"telCAN_NOT_QUEUE":-392,"telCAN_NOT_QUEUE_BALANCE":-391,"telCAN_NOT_QUEUE_BLOCKS":-390,"telCAN_NOT_QUEUE_BLOCKED":-389,"telCAN_NOT_QUEUE_FEE":-388,"telCAN_NOT_QUEUE_FULL":-387,"telWRONG_NETWORK":-386,"telREQUIRES_NETWORK_ID":-385,"telNETWORK_ID_MAKES_TX_NON_CANONICAL":-384,"temMALFORMED":-299,"temBAD_AMOUNT":-298,"temBAD_CURRENCY":-297,"temBAD_EXPIRATION":-296,"temBAD_FEE":-295,"temBAD_ISSUER":-294,"temBAD_LIMIT":-293,"temBAD_OFFER":-292,"temBAD_PATH":-291,"temBAD_PATH_LOOP":-290,"temBAD_REGKEY":-289,"temBAD_SEND_XRP_LIMIT":-288,"temBAD_SEND_XRP_MAX":-287,"temBAD_SEND_XRP_NO_DIRECT":-286,"temBAD_SEND_XRP_PARTIAL":-285,"temBAD_SEND_XRP_PATHS":-284,"temBAD_SEQUENCE":-283,"temBAD_SIGNATURE":-282,"temBAD_SRC_ACCOUNT":-281,"temBAD_TRANSFER_RATE":-280,"temDST_IS_SRC":-279,"temDST_NEEDED":-278,"temINVALID":-277,"temINVALID_FLAG":-276,"temREDUNDANT":-275,"temRIPPLE_EMPTY":-274,"temDISABLED":-273,"temBAD_SIGNER":-272,"temBAD_QUORUM":-271,"temBAD_WEIGHT":-270,"temBAD_TICK_SIZE":-269,"temINVALID_ACCOUNT_ID":-268,"temCANNOT_PREAUTH_SELF":-267,"temINVALID_COUNT":-266,"temUNCERTAIN":-265,"temUNKNOWN":-264,"temSEQ_AND_TICKET":-263,"temBAD_NFTOKEN_TRANSFER_FEE":-262,"temBAD_AMM_TOKENS":-261,"temXCHAIN_EQUAL_DOOR_ACCOUNTS":-260,"temXCHAIN_BAD_PROOF":-259,"temXCHAIN_BRIDGE_BAD_ISSUES":-258,"temXCHAIN_BRIDGE_NONDOOR_OWNER":-257,"temXCHAIN_BRIDGE_BAD_MIN_ACCOUNT_CREATE_AMOUNT":-256,"temXCHAIN_BRIDGE_BAD_REWARD_AMOUNT":-255,"temEMPTY_DID":-254,"tefFAILURE":-199,"tefALREADY":-198,"tefBAD_ADD_AUTH":-197,"tefBAD_AUTH":-196,"tefBAD_LEDGER":-195,"tefCREATED":-194,"tefEXCEPTION":-193,"tefINTERNAL":-192,"tefNO_AUTH_REQUIRED":-191,"tefPAST_SEQ":-190,"tefWRONG_PRIOR":-189,"tefMASTER_DISABLED":-188,"tefMAX_LEDGER":-187,"tefBAD_SIGNATURE":-186,"tefBAD_QUORUM":-185,"tefNOT_MULTI_SIGNING":-184,"tefBAD_AUTH_MASTER":-183,"tefINVARIANT_FAILED":-182,"tefTOO_BIG":-181,"tefNO_TICKET":-180,"tefNFTOKEN_IS_NOT_TRANSFERABLE":-179,"terRETRY":-99,"terFUNDS_SPENT":-98,"terINSUF_FEE_B":-97,"terNO_ACCOUNT":-96,"terNO_AUTH":-95,"terNO_LINE":-94,"terOWNERS":-93,"terPRE_SEQ":-92,"terLAST":-91,"terNO_RIPPLE":-90,"terQUEUED":-89,"terPRE_TICKET":-88,"terNO_AMM":-87,"terSUBMITTED":-86,"tesSUCCESS":0,"tecCLAIM":100,"tecPATH_PARTIAL":101,"tecUNFUNDED_ADD":102,"tecUNFUNDED_OFFER":103,"tecUNFUNDED_PAYMENT":104,"tecFAILED_PROCESSING":105,"tecDIR_FULL":121,"tecINSUF_RESERVE_LINE":122,"tecINSUF_RESERVE_OFFER":123,"tecNO_DST":124,"tecNO_DST_INSUF_XRP":125,"tecNO_LINE_INSUF_RESERVE":126,"tecNO_LINE_REDUNDANT":127,"tecPATH_DRY":128,"tecUNFUNDED":129,"tecNO_ALTERNATIVE_KEY":130,"tecNO_REGULAR_KEY":131,"tecOWNERS":132,"tecNO_ISSUER":133,"tecNO_AUTH":134,"tecNO_LINE":135,"tecINSUFF_FEE":136,"tecFROZEN":137,"tecNO_TARGET":138,"tecNO_PERMISSION":139,"tecNO_ENTRY":140,"tecINSUFFICIENT_RESERVE":141,"tecNEED_MASTER_KEY":142,"tecDST_TAG_NEEDED":143,"tecINTERNAL":144,"tecOVERSIZE":145,"tecCRYPTOCONDITION_ERROR":146,"tecINVARIANT_FAILED":147,"tecEXPIRED":148,"tecDUPLICATE":149,"tecKILLED":150,"tecHAS_OBLIGATIONS":151,"tecTOO_SOON":152,"tecHOOK_REJECTED":153,"tecMAX_SEQUENCE_REACHED":154,"tecNO_SUITABLE_NFTOKEN_PAGE":155,"tecNFTOKEN_BUY_SELL_MISMATCH":156,"tecNFTOKEN_OFFER_TYPE_MISMATCH":157,"tecCANT_ACCEPT_OWN_NFTOKEN_OFFER":158,"tecINSUFFICIENT_FUNDS":159,"tecOBJECT_NOT_FOUND":160,"tecINSUFFICIENT_PAYMENT":161,"tecUNFUNDED_AMM":162,"tecAMM_BALANCE":163,"tecAMM_FAILED":164,"tecAMM_INVALID_TOKENS":165,"tecAMM_EMPTY":166,"tecAMM_NOT_EMPTY":167,"tecAMM_ACCOUNT":168,"tecINCOMPLETE":169,"tecXCHAIN_BAD_TRANSFER_ISSUE":170,"tecXCHAIN_NO_CLAIM_ID":171,"tecXCHAIN_BAD_CLAIM_ID":172,"tecXCHAIN_CLAIM_NO_QUORUM":173,"tecXCHAIN_PROOF_UNKNOWN_KEY":174,"tecXCHAIN_CREATE_ACCOUNT_NONXRP_ISSUE":175,"tecXCHAIN_WRONG_CHAIN":176,"tecXCHAIN_REWARD_MISMATCH":177,"tecXCHAIN_NO_SIGNERS_LIST":178,"tecXCHAIN_SENDING_ACCOUNT_MISMATCH":179,"tecXCHAIN_INSUFF_CREATE_AMOUNT":180,"tecXCHAIN_ACCOUNT_CREATE_PAST":181,"tecXCHAIN_ACCOUNT_CREATE_TOO_MANY":182,"tecXCHAIN_PAYMENT_FAILED":183,"tecXCHAIN_SELF_COMMIT":184,"tecXCHAIN_BAD_PUBLIC_KEY_ACCOUNT_PAIR":185,"tecXCHAIN_CREATE_ACCOUNT_DISABLED":186,"tecEMPTY_DID":187},"TRANSACTION_TYPES":{"Invalid":-1,"Payment":0,"EscrowCreate":1,"EscrowFinish":2,"AccountSet":3,"EscrowCancel":4,"SetRegularKey":5,"NickNameSet":6,"OfferCreate":7,"OfferCancel":8,"Contract":9,"TicketCreate":10,"TicketCancel":11,"SignerListSet":12,"PaymentChannelCreate":13,"PaymentChannelFund":14,"PaymentChannelClaim":15,"CheckCreate":16,"CheckCash":17,"CheckCancel":18,"DepositPreauth":19,"TrustSet":20,"AccountDelete":21,"SetHook":22,"NFTokenMint":25,"NFTokenBurn":26,"NFTokenCreateOffer":27,"NFTokenCancelOffer":28,"NFTokenAcceptOffer":29,"Clawback":30,"AMMCreate":35,"AMMDeposit":36,"AMMWithdraw":37,"AMMVote":38,"AMMBid":39,"AMMDelete":40,"XChainCreateClaimID":41,"XChainCommit":42,"XChainClaim":43,"XChainAccountCreateCommit":44,"XChainAddClaimAttestation":45,"XChainAddAccountCreateAttestation":46,"XChainModifyBridge":47,"XChainCreateBridge":48,"DIDSet":49,"DIDDelete":50,"EnableAmendment":100,"SetFee":101,"UNLModify":102}}');

/***/ })

};
;