"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ripple-keypairs";
exports.ids = ["vendor-chunks/ripple-keypairs"];
exports.modules = {

/***/ "(ssr)/./node_modules/ripple-keypairs/dist/Sha512.js":
/*!*****************************************************!*\
  !*** ./node_modules/ripple-keypairs/dist/Sha512.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* eslint-disable no-bitwise --\n * lots of bitwise operators necessary for this */\nconst hashjs = __importStar(__webpack_require__(/*! hash.js */ \"(ssr)/./node_modules/hash.js/lib/hash.js\"));\nconst BigNum = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\nclass Sha512 {\n    constructor() {\n        this.hash = hashjs.sha512();\n    }\n    add(bytes) {\n        this.hash.update(bytes);\n        return this;\n    }\n    addU32(i) {\n        return this.add([\n            (i >>> 24) & 0xff,\n            (i >>> 16) & 0xff,\n            (i >>> 8) & 0xff,\n            i & 0xff,\n        ]);\n    }\n    finish() {\n        return this.hash.digest();\n    }\n    first256() {\n        return this.finish().slice(0, 32);\n    }\n    first256BN() {\n        return new BigNum(this.first256());\n    }\n}\nexports[\"default\"] = Sha512;\n//# sourceMappingURL=Sha512.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWtleXBhaXJzL2Rpc3QvU2hhNTEyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMseURBQVM7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLG1EQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUta2V5cGFpcnMvZGlzdC9TaGE1MTIuanM/ZWRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyogZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAtLVxuICogbG90cyBvZiBiaXR3aXNlIG9wZXJhdG9ycyBuZWNlc3NhcnkgZm9yIHRoaXMgKi9cbmNvbnN0IGhhc2hqcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiaGFzaC5qc1wiKSk7XG5jb25zdCBCaWdOdW0gPSByZXF1aXJlKFwiYm4uanNcIik7XG5jbGFzcyBTaGE1MTIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmhhc2ggPSBoYXNoanMuc2hhNTEyKCk7XG4gICAgfVxuICAgIGFkZChieXRlcykge1xuICAgICAgICB0aGlzLmhhc2gudXBkYXRlKGJ5dGVzKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFkZFUzMihpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFkZChbXG4gICAgICAgICAgICAoaSA+Pj4gMjQpICYgMHhmZixcbiAgICAgICAgICAgIChpID4+PiAxNikgJiAweGZmLFxuICAgICAgICAgICAgKGkgPj4+IDgpICYgMHhmZixcbiAgICAgICAgICAgIGkgJiAweGZmLFxuICAgICAgICBdKTtcbiAgICB9XG4gICAgZmluaXNoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oYXNoLmRpZ2VzdCgpO1xuICAgIH1cbiAgICBmaXJzdDI1NigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoKCkuc2xpY2UoMCwgMzIpO1xuICAgIH1cbiAgICBmaXJzdDI1NkJOKCkge1xuICAgICAgICByZXR1cm4gbmV3IEJpZ051bSh0aGlzLmZpcnN0MjU2KCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNoYTUxMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNoYTUxMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-keypairs/dist/Sha512.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-keypairs/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/ripple-keypairs/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeSeed = exports.deriveNodeAddress = exports.deriveAddress = exports.verify = exports.sign = exports.deriveKeypair = exports.generateSeed = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst brorand = __webpack_require__(/*! brorand */ \"(ssr)/./node_modules/brorand/index.js\");\nconst hashjs = __importStar(__webpack_require__(/*! hash.js */ \"(ssr)/./node_modules/hash.js/lib/hash.js\"));\nconst elliptic = __importStar(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst addressCodec = __importStar(__webpack_require__(/*! ripple-address-codec */ \"(ssr)/./node_modules/ripple-address-codec/dist/index.js\"));\nconst secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/ripple-keypairs/dist/secp256k1.js\");\nconst utils = __importStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/ripple-keypairs/dist/utils.js\"));\nconst Ed25519 = elliptic.eddsa('ed25519');\nconst Secp256k1 = elliptic.ec('secp256k1');\nconst { hexToBytes } = utils;\nconst { bytesToHex } = utils;\nfunction generateSeed(options = {}) {\n    assert.ok(!options.entropy || options.entropy.length >= 16, 'entropy too short');\n    const entropy = options.entropy ? options.entropy.slice(0, 16) : brorand(16);\n    const type = options.algorithm === 'ed25519' ? 'ed25519' : 'secp256k1';\n    return addressCodec.encodeSeed(Buffer.from(entropy), type);\n}\nexports.generateSeed = generateSeed;\nfunction hash(message) {\n    return hashjs.sha512().update(message).digest().slice(0, 32);\n}\nconst secp256k1 = {\n    deriveKeypair(entropy, options) {\n        const prefix = '00';\n        const privateKey = prefix + (0, secp256k1_1.derivePrivateKey)(entropy, options).toString(16, 64).toUpperCase();\n        const publicKey = bytesToHex(Secp256k1.keyFromPrivate(privateKey.slice(2))\n            .getPublic()\n            .encodeCompressed());\n        return { privateKey, publicKey };\n    },\n    sign(message, privateKey) {\n        return bytesToHex(Secp256k1.sign(hash(message), hexToBytes(privateKey), {\n            canonical: true,\n        }).toDER());\n    },\n    verify(message, signature, publicKey) {\n        return Secp256k1.verify(hash(message), signature, hexToBytes(publicKey));\n    },\n};\nconst ed25519 = {\n    deriveKeypair(entropy) {\n        const prefix = 'ED';\n        const rawPrivateKey = hash(entropy);\n        const privateKey = prefix + bytesToHex(rawPrivateKey);\n        const publicKey = prefix + bytesToHex(Ed25519.keyFromSecret(rawPrivateKey).pubBytes());\n        return { privateKey, publicKey };\n    },\n    sign(message, privateKey) {\n        // caution: Ed25519.sign interprets all strings as hex, stripping\n        // any non-hex characters without warning\n        assert.ok(Array.isArray(message), 'message must be array of octets');\n        return bytesToHex(Ed25519.sign(message, hexToBytes(privateKey).slice(1)).toBytes());\n    },\n    verify(message, signature, publicKey) {\n        return Ed25519.verify(message, hexToBytes(signature), hexToBytes(publicKey).slice(1));\n    },\n};\nfunction select(algorithm) {\n    const methods = { 'ecdsa-secp256k1': secp256k1, ed25519 };\n    return methods[algorithm];\n}\nfunction deriveKeypair(seed, options) {\n    const decoded = addressCodec.decodeSeed(seed);\n    const algorithm = decoded.type === 'ed25519' ? 'ed25519' : 'ecdsa-secp256k1';\n    const method = select(algorithm);\n    const keypair = method.deriveKeypair(decoded.bytes, options);\n    const messageToVerify = hash('This test message should verify.');\n    const signature = method.sign(messageToVerify, keypair.privateKey);\n    /* istanbul ignore if */\n    if (method.verify(messageToVerify, signature, keypair.publicKey) !== true) {\n        throw new Error('derived keypair did not generate verifiable signature');\n    }\n    return keypair;\n}\nexports.deriveKeypair = deriveKeypair;\nfunction getAlgorithmFromKey(key) {\n    const bytes = hexToBytes(key);\n    return bytes.length === 33 && bytes[0] === 0xed\n        ? 'ed25519'\n        : 'ecdsa-secp256k1';\n}\nfunction sign(messageHex, privateKey) {\n    const algorithm = getAlgorithmFromKey(privateKey);\n    return select(algorithm).sign(hexToBytes(messageHex), privateKey);\n}\nexports.sign = sign;\nfunction verify(messageHex, signature, publicKey) {\n    const algorithm = getAlgorithmFromKey(publicKey);\n    return select(algorithm).verify(hexToBytes(messageHex), signature, publicKey);\n}\nexports.verify = verify;\nfunction deriveAddressFromBytes(publicKeyBytes) {\n    return addressCodec.encodeAccountID(utils.computePublicKeyHash(publicKeyBytes));\n}\nfunction deriveAddress(publicKey) {\n    return deriveAddressFromBytes(Buffer.from(hexToBytes(publicKey)));\n}\nexports.deriveAddress = deriveAddress;\nfunction deriveNodeAddress(publicKey) {\n    const generatorBytes = addressCodec.decodeNodePublic(publicKey);\n    const accountPublicBytes = (0, secp256k1_1.accountPublicFromPublicGenerator)(generatorBytes);\n    return deriveAddressFromBytes(accountPublicBytes);\n}\nexports.deriveNodeAddress = deriveNodeAddress;\nconst { decodeSeed } = addressCodec;\nexports.decodeSeed = decodeSeed;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-keypairs/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-keypairs/dist/secp256k1.js":
/*!********************************************************!*\
  !*** ./node_modules/ripple-keypairs/dist/secp256k1.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.accountPublicFromPublicGenerator = exports.derivePrivateKey = void 0;\nconst elliptic = __importStar(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst Sha512_1 = __importDefault(__webpack_require__(/*! ./Sha512 */ \"(ssr)/./node_modules/ripple-keypairs/dist/Sha512.js\"));\nconst secp256k1 = elliptic.ec('secp256k1');\nfunction deriveScalar(bytes, discrim) {\n    const order = secp256k1.curve.n;\n    for (let i = 0; i <= 0xffffffff; i++) {\n        // We hash the bytes to find a 256 bit number, looping until we are sure it\n        // is less than the order of the curve.\n        const hasher = new Sha512_1.default().add(bytes);\n        // If the optional discriminator index was passed in, update the hash.\n        if (discrim !== undefined) {\n            hasher.addU32(discrim);\n        }\n        hasher.addU32(i);\n        const key = hasher.first256BN();\n        /* istanbul ignore else */\n        if (key.cmpn(0) > 0 && key.cmp(order) < 0) {\n            return key;\n        }\n    }\n    // This error is practically impossible to reach.\n    // The order of the curve describes the (finite) amount of points on the curve\n    // https://github.com/indutny/elliptic/blob/master/lib/elliptic/curves.js#L182\n    // How often will an (essentially) random number generated by Sha512 be larger than that?\n    // There's 2^32 chances (the for loop) to get a number smaller than the order,\n    // and it's rare that you'll even get past the first loop iteration.\n    // Note that in TypeScript we actually need the throw, otherwise the function signature would be BN | undefined\n    //\n    /* istanbul ignore next */\n    throw new Error('impossible unicorn ;)');\n}\n/**\n * @param seed - Bytes.\n * @param [opts] - Object.\n * @param [opts.accountIndex=0] - The account number to generate.\n * @param [opts.validator=false] - Generate root key-pair,\n *                                              as used by validators.\n * @returns {bn.js} 256 bit scalar value.\n *\n */\nfunction derivePrivateKey(seed, opts = {}) {\n    const root = opts.validator;\n    const order = secp256k1.curve.n;\n    // This private generator represents the `root` private key, and is what's\n    // used by validators for signing when a keypair is generated from a seed.\n    const privateGen = deriveScalar(seed);\n    if (root) {\n        // As returned by validation_create for a given seed\n        return privateGen;\n    }\n    const publicGen = secp256k1.g.mul(privateGen);\n    // A seed can generate many keypairs as a function of the seed and a uint32.\n    // Almost everyone just uses the first account, `0`.\n    const accountIndex = opts.accountIndex || 0;\n    return deriveScalar(publicGen.encodeCompressed(), accountIndex)\n        .add(privateGen)\n        .mod(order);\n}\nexports.derivePrivateKey = derivePrivateKey;\nfunction accountPublicFromPublicGenerator(publicGenBytes) {\n    const rootPubPoint = secp256k1.curve.decodePoint(publicGenBytes);\n    const scalar = deriveScalar(publicGenBytes, 0);\n    const point = secp256k1.g.mul(scalar);\n    const offset = rootPubPoint.add(point);\n    return offset.encodeCompressed();\n}\nexports.accountPublicFromPublicGenerator = accountPublicFromPublicGenerator;\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWtleXBhaXJzL2Rpc3Qvc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdDQUF3QyxHQUFHLHdCQUF3QjtBQUNuRSw4QkFBOEIsbUJBQU8sQ0FBQywrREFBVTtBQUNoRCxpQ0FBaUMsbUJBQU8sQ0FBQyxxRUFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHJwbC1zdGFibGVjb2luLWRhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yaXBwbGUta2V5cGFpcnMvZGlzdC9zZWNwMjU2azEuanM/N2JiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hY2NvdW50UHVibGljRnJvbVB1YmxpY0dlbmVyYXRvciA9IGV4cG9ydHMuZGVyaXZlUHJpdmF0ZUtleSA9IHZvaWQgMDtcbmNvbnN0IGVsbGlwdGljID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJlbGxpcHRpY1wiKSk7XG5jb25zdCBTaGE1MTJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9TaGE1MTJcIikpO1xuY29uc3Qgc2VjcDI1NmsxID0gZWxsaXB0aWMuZWMoJ3NlY3AyNTZrMScpO1xuZnVuY3Rpb24gZGVyaXZlU2NhbGFyKGJ5dGVzLCBkaXNjcmltKSB7XG4gICAgY29uc3Qgb3JkZXIgPSBzZWNwMjU2azEuY3VydmUubjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSAweGZmZmZmZmZmOyBpKyspIHtcbiAgICAgICAgLy8gV2UgaGFzaCB0aGUgYnl0ZXMgdG8gZmluZCBhIDI1NiBiaXQgbnVtYmVyLCBsb29waW5nIHVudGlsIHdlIGFyZSBzdXJlIGl0XG4gICAgICAgIC8vIGlzIGxlc3MgdGhhbiB0aGUgb3JkZXIgb2YgdGhlIGN1cnZlLlxuICAgICAgICBjb25zdCBoYXNoZXIgPSBuZXcgU2hhNTEyXzEuZGVmYXVsdCgpLmFkZChieXRlcyk7XG4gICAgICAgIC8vIElmIHRoZSBvcHRpb25hbCBkaXNjcmltaW5hdG9yIGluZGV4IHdhcyBwYXNzZWQgaW4sIHVwZGF0ZSB0aGUgaGFzaC5cbiAgICAgICAgaWYgKGRpc2NyaW0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaGFzaGVyLmFkZFUzMihkaXNjcmltKTtcbiAgICAgICAgfVxuICAgICAgICBoYXNoZXIuYWRkVTMyKGkpO1xuICAgICAgICBjb25zdCBrZXkgPSBoYXNoZXIuZmlyc3QyNTZCTigpO1xuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICBpZiAoa2V5LmNtcG4oMCkgPiAwICYmIGtleS5jbXAob3JkZXIpIDwgMCkge1xuICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBUaGlzIGVycm9yIGlzIHByYWN0aWNhbGx5IGltcG9zc2libGUgdG8gcmVhY2guXG4gICAgLy8gVGhlIG9yZGVyIG9mIHRoZSBjdXJ2ZSBkZXNjcmliZXMgdGhlIChmaW5pdGUpIGFtb3VudCBvZiBwb2ludHMgb24gdGhlIGN1cnZlXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvZWxsaXB0aWMvYmxvYi9tYXN0ZXIvbGliL2VsbGlwdGljL2N1cnZlcy5qcyNMMTgyXG4gICAgLy8gSG93IG9mdGVuIHdpbGwgYW4gKGVzc2VudGlhbGx5KSByYW5kb20gbnVtYmVyIGdlbmVyYXRlZCBieSBTaGE1MTIgYmUgbGFyZ2VyIHRoYW4gdGhhdD9cbiAgICAvLyBUaGVyZSdzIDJeMzIgY2hhbmNlcyAodGhlIGZvciBsb29wKSB0byBnZXQgYSBudW1iZXIgc21hbGxlciB0aGFuIHRoZSBvcmRlcixcbiAgICAvLyBhbmQgaXQncyByYXJlIHRoYXQgeW91J2xsIGV2ZW4gZ2V0IHBhc3QgdGhlIGZpcnN0IGxvb3AgaXRlcmF0aW9uLlxuICAgIC8vIE5vdGUgdGhhdCBpbiBUeXBlU2NyaXB0IHdlIGFjdHVhbGx5IG5lZWQgdGhlIHRocm93LCBvdGhlcndpc2UgdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZSB3b3VsZCBiZSBCTiB8IHVuZGVmaW5lZFxuICAgIC8vXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ltcG9zc2libGUgdW5pY29ybiA7KScpO1xufVxuLyoqXG4gKiBAcGFyYW0gc2VlZCAtIEJ5dGVzLlxuICogQHBhcmFtIFtvcHRzXSAtIE9iamVjdC5cbiAqIEBwYXJhbSBbb3B0cy5hY2NvdW50SW5kZXg9MF0gLSBUaGUgYWNjb3VudCBudW1iZXIgdG8gZ2VuZXJhdGUuXG4gKiBAcGFyYW0gW29wdHMudmFsaWRhdG9yPWZhbHNlXSAtIEdlbmVyYXRlIHJvb3Qga2V5LXBhaXIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcyB1c2VkIGJ5IHZhbGlkYXRvcnMuXG4gKiBAcmV0dXJucyB7Ym4uanN9IDI1NiBiaXQgc2NhbGFyIHZhbHVlLlxuICpcbiAqL1xuZnVuY3Rpb24gZGVyaXZlUHJpdmF0ZUtleShzZWVkLCBvcHRzID0ge30pIHtcbiAgICBjb25zdCByb290ID0gb3B0cy52YWxpZGF0b3I7XG4gICAgY29uc3Qgb3JkZXIgPSBzZWNwMjU2azEuY3VydmUubjtcbiAgICAvLyBUaGlzIHByaXZhdGUgZ2VuZXJhdG9yIHJlcHJlc2VudHMgdGhlIGByb290YCBwcml2YXRlIGtleSwgYW5kIGlzIHdoYXQnc1xuICAgIC8vIHVzZWQgYnkgdmFsaWRhdG9ycyBmb3Igc2lnbmluZyB3aGVuIGEga2V5cGFpciBpcyBnZW5lcmF0ZWQgZnJvbSBhIHNlZWQuXG4gICAgY29uc3QgcHJpdmF0ZUdlbiA9IGRlcml2ZVNjYWxhcihzZWVkKTtcbiAgICBpZiAocm9vdCkge1xuICAgICAgICAvLyBBcyByZXR1cm5lZCBieSB2YWxpZGF0aW9uX2NyZWF0ZSBmb3IgYSBnaXZlbiBzZWVkXG4gICAgICAgIHJldHVybiBwcml2YXRlR2VuO1xuICAgIH1cbiAgICBjb25zdCBwdWJsaWNHZW4gPSBzZWNwMjU2azEuZy5tdWwocHJpdmF0ZUdlbik7XG4gICAgLy8gQSBzZWVkIGNhbiBnZW5lcmF0ZSBtYW55IGtleXBhaXJzIGFzIGEgZnVuY3Rpb24gb2YgdGhlIHNlZWQgYW5kIGEgdWludDMyLlxuICAgIC8vIEFsbW9zdCBldmVyeW9uZSBqdXN0IHVzZXMgdGhlIGZpcnN0IGFjY291bnQsIGAwYC5cbiAgICBjb25zdCBhY2NvdW50SW5kZXggPSBvcHRzLmFjY291bnRJbmRleCB8fCAwO1xuICAgIHJldHVybiBkZXJpdmVTY2FsYXIocHVibGljR2VuLmVuY29kZUNvbXByZXNzZWQoKSwgYWNjb3VudEluZGV4KVxuICAgICAgICAuYWRkKHByaXZhdGVHZW4pXG4gICAgICAgIC5tb2Qob3JkZXIpO1xufVxuZXhwb3J0cy5kZXJpdmVQcml2YXRlS2V5ID0gZGVyaXZlUHJpdmF0ZUtleTtcbmZ1bmN0aW9uIGFjY291bnRQdWJsaWNGcm9tUHVibGljR2VuZXJhdG9yKHB1YmxpY0dlbkJ5dGVzKSB7XG4gICAgY29uc3Qgcm9vdFB1YlBvaW50ID0gc2VjcDI1NmsxLmN1cnZlLmRlY29kZVBvaW50KHB1YmxpY0dlbkJ5dGVzKTtcbiAgICBjb25zdCBzY2FsYXIgPSBkZXJpdmVTY2FsYXIocHVibGljR2VuQnl0ZXMsIDApO1xuICAgIGNvbnN0IHBvaW50ID0gc2VjcDI1NmsxLmcubXVsKHNjYWxhcik7XG4gICAgY29uc3Qgb2Zmc2V0ID0gcm9vdFB1YlBvaW50LmFkZChwb2ludCk7XG4gICAgcmV0dXJuIG9mZnNldC5lbmNvZGVDb21wcmVzc2VkKCk7XG59XG5leHBvcnRzLmFjY291bnRQdWJsaWNGcm9tUHVibGljR2VuZXJhdG9yID0gYWNjb3VudFB1YmxpY0Zyb21QdWJsaWNHZW5lcmF0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWNwMjU2azEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-keypairs/dist/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ripple-keypairs/dist/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/ripple-keypairs/dist/utils.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.computePublicKeyHash = exports.hexToBytes = exports.bytesToHex = void 0;\nconst assert = __importStar(__webpack_require__(/*! assert */ \"assert\"));\nconst hashjs = __importStar(__webpack_require__(/*! hash.js */ \"(ssr)/./node_modules/hash.js/lib/hash.js\"));\nconst BN = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\nfunction bytesToHex(a) {\n    return Array.from(a, (byteValue) => {\n        const hex = byteValue.toString(16).toUpperCase();\n        return hex.length > 1 ? hex : `0${hex}`;\n    }).join('');\n}\nexports.bytesToHex = bytesToHex;\nfunction hexToBytes(a) {\n    assert.ok(a.length % 2 === 0);\n    // Special-case length zero to return [].\n    // BN.toArray intentionally returns [0] rather than [] for length zero,\n    // which may make sense for BigNum data, but not for byte strings.\n    return a.length === 0 ? [] : new BN(a, 16).toArray(null, a.length / 2);\n}\nexports.hexToBytes = hexToBytes;\nfunction computePublicKeyHash(publicKeyBytes) {\n    const hash256 = hashjs.sha256().update(publicKeyBytes).digest();\n    const hash160 = hashjs.ripemd160().update(hash256).digest();\n    return Buffer.from(hash160);\n}\nexports.computePublicKeyHash = computePublicKeyHash;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmlwcGxlLWtleXBhaXJzL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLGtCQUFrQixHQUFHLGtCQUFrQjtBQUN0RSw0QkFBNEIsbUJBQU8sQ0FBQyxzQkFBUTtBQUM1Qyw0QkFBNEIsbUJBQU8sQ0FBQyx5REFBUztBQUM3QyxXQUFXLG1CQUFPLENBQUMsbURBQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLElBQUk7QUFDOUMsS0FBSztBQUNMO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94cnBsLXN0YWJsZWNvaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JpcHBsZS1rZXlwYWlycy9kaXN0L3V0aWxzLmpzPzgzMWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29tcHV0ZVB1YmxpY0tleUhhc2ggPSBleHBvcnRzLmhleFRvQnl0ZXMgPSBleHBvcnRzLmJ5dGVzVG9IZXggPSB2b2lkIDA7XG5jb25zdCBhc3NlcnQgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcImFzc2VydFwiKSk7XG5jb25zdCBoYXNoanMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcImhhc2guanNcIikpO1xuY29uc3QgQk4gPSByZXF1aXJlKFwiYm4uanNcIik7XG5mdW5jdGlvbiBieXRlc1RvSGV4KGEpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShhLCAoYnl0ZVZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGhleCA9IGJ5dGVWYWx1ZS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgICAgICAgcmV0dXJuIGhleC5sZW5ndGggPiAxID8gaGV4IDogYDAke2hleH1gO1xuICAgIH0pLmpvaW4oJycpO1xufVxuZXhwb3J0cy5ieXRlc1RvSGV4ID0gYnl0ZXNUb0hleDtcbmZ1bmN0aW9uIGhleFRvQnl0ZXMoYSkge1xuICAgIGFzc2VydC5vayhhLmxlbmd0aCAlIDIgPT09IDApO1xuICAgIC8vIFNwZWNpYWwtY2FzZSBsZW5ndGggemVybyB0byByZXR1cm4gW10uXG4gICAgLy8gQk4udG9BcnJheSBpbnRlbnRpb25hbGx5IHJldHVybnMgWzBdIHJhdGhlciB0aGFuIFtdIGZvciBsZW5ndGggemVybyxcbiAgICAvLyB3aGljaCBtYXkgbWFrZSBzZW5zZSBmb3IgQmlnTnVtIGRhdGEsIGJ1dCBub3QgZm9yIGJ5dGUgc3RyaW5ncy5cbiAgICByZXR1cm4gYS5sZW5ndGggPT09IDAgPyBbXSA6IG5ldyBCTihhLCAxNikudG9BcnJheShudWxsLCBhLmxlbmd0aCAvIDIpO1xufVxuZXhwb3J0cy5oZXhUb0J5dGVzID0gaGV4VG9CeXRlcztcbmZ1bmN0aW9uIGNvbXB1dGVQdWJsaWNLZXlIYXNoKHB1YmxpY0tleUJ5dGVzKSB7XG4gICAgY29uc3QgaGFzaDI1NiA9IGhhc2hqcy5zaGEyNTYoKS51cGRhdGUocHVibGljS2V5Qnl0ZXMpLmRpZ2VzdCgpO1xuICAgIGNvbnN0IGhhc2gxNjAgPSBoYXNoanMucmlwZW1kMTYwKCkudXBkYXRlKGhhc2gyNTYpLmRpZ2VzdCgpO1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShoYXNoMTYwKTtcbn1cbmV4cG9ydHMuY29tcHV0ZVB1YmxpY0tleUhhc2ggPSBjb21wdXRlUHVibGljS2V5SGFzaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ripple-keypairs/dist/utils.js\n");

/***/ })

};
;